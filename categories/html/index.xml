<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HTML on Funbox的技术记事本</title>
    <link>https://ifunbox.top/categories/html/</link>
    <description>Recent content in HTML on Funbox的技术记事本</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 26 Jul 2017 06:05:08 +0000</lastBuildDate>
    
	<atom:link href="https://ifunbox.top/categories/html/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Content Security Policy教程</title>
      <link>https://ifunbox.top/content-security-policy/</link>
      <pubDate>Wed, 26 Jul 2017 06:05:08 +0000</pubDate>
      
      <guid>https://ifunbox.top/content-security-policy/</guid>
      <description>简介 跨域脚本攻击 XSS 是最常见、危害最大的网页安全漏洞。
为了防止它们，要采取很多编程措施，非常麻烦。很多人提出，能不能根本上解决问题，浏览器自动禁止外部注入恶意脚本？
这就是&amp;#8221;网页安全政策&amp;#8221;（Content Security Policy，缩写 CSP）的来历。本文详细介绍如何使用 CSP 防止 XSS 攻击。
CSP 的实质就是白名单制度，开发者明确告诉客户端，哪些外部资源可以加载和执行，等同于提供白名单。它的实现和执行全部由浏览器完成，开发者只需提供配置。
CSP 大大增强了网页的安全性。攻击者即使发现了漏洞，也没法注入脚本，除非还控制了一台列入了白名单的可信主机。
开启方式
#通过 HTTP 头信息的Content-Security-Policy Content-Security-Policy: script-src &#39;self&#39;; object-src &#39;none&#39;; style-src cdn.example.org third-party.org; child-src https: #通过网页的&amp;amp;lt;meta&amp;amp;gt;标签。 &amp;amp;lt;meta http-equiv=&amp;quot;Content-Security-Policy&amp;quot; content=&amp;quot;script-src &#39;self&#39;; object-src &#39;none&#39;; style-src cdn.example.org third-party.org; child-src https:&amp;quot;&amp;amp;gt;  具体含义:
* 脚本：只信任当前域名
* &amp;lt;object&amp;gt;标签：不信任任何URL，即不加载任何资源
* 样式表：只信任cdn.example.org和third-party.org
* 框架（frame）：必须使用HTTPS协议加载
* 其他资源：没有限制
启用后，不符合 CSP 的外部资源就会被阻止加载，现代浏览器(Chrome/Firefox) Console控制台中将会报错。
限制选项  资源加载限制  script-src：外部脚本 style-src：样式表 img-src：图像 media-src：媒体文件（音频和视频） font-src：字体文件 object-src：插件（比如 Flash） child-src：框架 frame-ancestors：嵌入的外部资源（比如&amp;lt;frame&amp;gt;、&amp;lt;iframe&amp;gt;、&amp;lt;embed&amp;gt;和&amp;lt;applet&amp;gt;） connect-src：HTTP 连接（通过 XHR、WebSockets、EventSource等） worker-src：worker脚本 manifest-src：manifest 文件  default-src</description>
    </item>
    
    <item>
      <title>利用GifShot JavaScript库创建GIF动画</title>
      <link>https://ifunbox.top/gifshot_javascript_create_animated_gifs/</link>
      <pubDate>Wed, 14 Oct 2015 02:15:30 +0000</pubDate>
      
      <guid>https://ifunbox.top/gifshot_javascript_create_animated_gifs/</guid>
      <description>之前关于这些技术实现方式是在biu官网上看到的，几张图片播放gif动画是用css3实现的，然后寻找js实现方式，就找到了强大的GifShot。
GifShot是一个JavaScript库,可以从媒体流,视频,或者图片中提取元素创建gif动画。
GifShot优点多多啊~
易于集成
JavaScript库的性质使得它非常便携，易于集成到几乎任何网站(有点像动画gif本身)。
非常高效
通过利用web workers的力量,得到快速创建GIF,不会阻止UI。一个图像量化算法还用于减少所需数量的颜色代表形象。
强大的
利用前沿浏览器api包括WebRTC、文件系统、视频、帆布、Web Workers,类型化数组和Base 64编码支持20多个选项。
可定制的
可以使用自定义构建只包括项目所需的特定功能。
只需要引入gifshot js库，然后撸上下面的代码，就可以实现jpg，png，gif图片转换成gif动画的效果了
&amp;lt;span style=&amp;ldquo;font-size: 14pt;&amp;ldquo;&amp;gt;gifshot.createGIF({ images: [ &amp;lsquo;http://i.imgur.com/2OO33vX.jpg&#39;, &amp;lsquo;http://i.imgur.com/qOwVaSN.png&#39;, &amp;lsquo;http://i.imgur.com/Vo5mFZJ.gif&#39; ] }, function (obj) { if (!obj.error) { var image = obj.image, animatedImage = document.createElement(&amp;lsquo;img&amp;rsquo;); animatedImage.src = image; document.body.appendChild(animatedImage); } });&amp;lt;/span&amp;gt; ```
就不上更多代码了，因为官网介绍得非常详细。
附上官网地址https://yahoo.github.io/gifshot/</description>
    </item>
    
    <item>
      <title>禁止浏览器复制剪切</title>
      <link>https://ifunbox.top/494.html</link>
      <pubDate>Wed, 27 Feb 2013 13:46:28 +0000</pubDate>
      
      <guid>https://ifunbox.top/494.html</guid>
      <description>&amp;nbsp;

&amp;nbsp;
就那么简单 😯</description>
    </item>
    
    <item>
      <title>加入收藏夹javascript代码</title>
      <link>https://ifunbox.top/197.html</link>
      <pubDate>Wed, 23 Nov 2011 08:34:00 +0000</pubDate>
      
      <guid>https://ifunbox.top/197.html</guid>
      <description>加入收藏！  测试了下IE6.0+和FireFox均正常，Chrome 没效果</description>
    </item>
    
    <item>
      <title>CSS样式图片批量下载助手</title>
      <link>https://ifunbox.top/123.html</link>
      <pubDate>Tue, 08 Nov 2011 09:32:20 +0000</pubDate>
      
      <guid>https://ifunbox.top/123.html</guid>
      <description>
功能简介：
 本程序主要适用于仿站!其实全站静态化软件也可以实现他的功能，他更为小巧方便，国人开发中文界面。  使用方法：  打开从网上下载保存的Css样式文件，按照程序第一、二、三、四步进行处理，Css文件中的图片会被保存下来，默认保存路径是Css文件所在目录，并自动修改Css文件中原图片路径地址为相对地址，修改前会自动备份原文件。  下载链接：CSS样式图片下载助手  </description>
    </item>
    
  </channel>
</rss>